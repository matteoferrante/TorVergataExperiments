diff --git a/Generative/.ipynb_checkpoints/VQ-VAE_celebA-checkpoint.ipynb b/Generative/.ipynb_checkpoints/VQ-VAE_celebA-checkpoint.ipynb
index 95658f6..aa788ec 100644
--- a/Generative/.ipynb_checkpoints/VQ-VAE_celebA-checkpoint.ipynb
+++ b/Generative/.ipynb_checkpoints/VQ-VAE_celebA-checkpoint.ipynb
@@ -2,9 +2,7 @@
  "cells": [
   {
    "cell_type": "markdown",
-   "metadata": {
-    "collapsed": true
-   },
+   "metadata": {},
    "source": [
     "# VQ VAE on CelebA\n",
     "Training model and PixelCNN Sampler\n",
@@ -23,7 +21,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 54,
+   "execution_count": 1,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -55,27 +53,26 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 5,
+   "execution_count": 2,
    "metadata": {},
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "0\n"
+      "1\n"
      ]
     }
    ],
    "source": [
     "#set the first GPU\n",
-    "os.environ[\"CUDA_VISIBLE_DEVICES\"]=\"0\"\n",
-    "\n",
+    "os.environ[\"CUDA_VISIBLE_DEVICES\"]=\"1\"\n",
     "print(os.environ.get(\"CUDA_VISIBLE_DEVICES\"))"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 6,
+   "execution_count": 3,
    "metadata": {},
    "outputs": [
     {
@@ -83,7 +80,21 @@
      "output_type": "stream",
      "text": [
       "Failed to detect the name of this notebook, you can set it manually with the WANDB_NOTEBOOK_NAME environment variable to enable code saving.\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mmatteoferrante\u001b[0m (use `wandb login --relogin` to force relogin)\n"
+      "\u001b[34m\u001b[1mwandb\u001b[0m: You can find your API key in your browser here: https://wandb.ai/authorize\n"
+     ]
+    },
+    {
+     "name": "stdin",
+     "output_type": "stream",
+     "text": [
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Paste an API key from your profile and hit enter, or press ctrl+c to quit:  ········································\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Appending key for api.wandb.ai to your netrc file: /root/.netrc\n"
      ]
     }
    ],
@@ -101,17 +112,18 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 7,
+   "execution_count": 4,
    "metadata": {},
    "outputs": [],
    "source": [
-    "BS = 64\n",
-    "EPOCHS=40\n",
-    "INIT_LR=1e-4\n",
+    "BS = 256\n",
+    "EPOCHS=240\n",
+    "INIT_LR=5e-5\n",
     "\n",
     "config[\"BS\"]=BS\n",
     "config[\"EPOCHS\"]=EPOCHS\n",
-    "config[\"INIT_LR\"]=INIT_LR"
+    "config[\"INIT_LR\"]=INIT_LR\n",
+    "config[\"nota\"]=\"DGX\""
    ]
   },
   {
@@ -123,7 +135,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 8,
+   "execution_count": 5,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -144,7 +156,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 9,
+   "execution_count": 6,
    "metadata": {},
    "outputs": [
     {
@@ -176,9 +188,19 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 10,
+   "execution_count": 7,
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "2021-12-14 14:36:53.239416: I tensorflow/core/platform/cpu_feature_guard.cc:151] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA\n",
+      "To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\n",
+      "2021-12-14 14:36:53.722178: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 79131 MB memory:  -> device: 0, name: NVIDIA A100-SXM-80GB, pci bus id: 0000:0f:00.0, compute capability: 8.0\n"
+     ]
+    }
+   ],
    "source": [
     "#TRAINING \n",
     "\n",
@@ -229,7 +251,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 11,
+   "execution_count": 8,
    "metadata": {},
    "outputs": [
     {
@@ -239,19 +261,24 @@
       "[INFO] Training VQ_VAE Model\n",
       "Model: \"encoder\"\n",
       "_________________________________________________________________\n",
-      "Layer (type)                 Output Shape              Param #   \n",
+      " Layer (type)                Output Shape              Param #   \n",
       "=================================================================\n",
-      "image_input (InputLayer)     [(None, 128, 128, 3)]     0         \n",
-      "_________________________________________________________________\n",
-      "conv_res_block (ConvResBlock (None, 64, 64, 64)        80320     \n",
-      "_________________________________________________________________\n",
-      "conv_res_block_1 (ConvResBlo (None, 32, 32, 128)       386560    \n",
-      "_________________________________________________________________\n",
-      "conv_res_block_2 (ConvResBlo (None, 16, 16, 256)       1543168   \n",
-      "_________________________________________________________________\n",
-      "conv_res_block_3 (ConvResBlo (None, 8, 8, 256)         4334080   \n",
-      "_________________________________________________________________\n",
-      "conv2d_34 (Conv2D)           (None, 8, 8, 512)         131584    \n",
+      " image_input (InputLayer)    [(None, 128, 128, 3)]     0         \n",
+      "                                                                 \n",
+      " conv_res_block (ConvResBloc  (None, 64, 64, 64)       80320     \n",
+      " k)                                                              \n",
+      "                                                                 \n",
+      " conv_res_block_1 (ConvResBl  (None, 32, 32, 128)      386560    \n",
+      " ock)                                                            \n",
+      "                                                                 \n",
+      " conv_res_block_2 (ConvResBl  (None, 16, 16, 256)      1543168   \n",
+      " ock)                                                            \n",
+      "                                                                 \n",
+      " conv_res_block_3 (ConvResBl  (None, 8, 8, 256)        4334080   \n",
+      " ock)                                                            \n",
+      "                                                                 \n",
+      " conv2d_22 (Conv2D)          (None, 8, 8, 512)         131584    \n",
+      "                                                                 \n",
       "=================================================================\n",
       "Total params: 6,475,712\n",
       "Trainable params: 6,470,848\n",
@@ -260,19 +287,25 @@
       "None\n",
       "Model: \"decoder\"\n",
       "_________________________________________________________________\n",
-      "Layer (type)                 Output Shape              Param #   \n",
+      " Layer (type)                Output Shape              Param #   \n",
       "=================================================================\n",
-      "latent_input (InputLayer)    [(None, 8, 8, 512)]       0         \n",
-      "_________________________________________________________________\n",
-      "conv_transpose_res_block (Co (None, 16, 16, 256)       4923904   \n",
-      "_________________________________________________________________\n",
-      "conv_transpose_res_block_1 ( (None, 32, 32, 256)       1838080   \n",
-      "_________________________________________________________________\n",
-      "conv_transpose_res_block_2 ( (None, 64, 64, 128)       607744    \n",
-      "_________________________________________________________________\n",
-      "conv_transpose_res_block_3 ( (None, 128, 128, 64)      152320    \n",
-      "_________________________________________________________________\n",
-      "conv2d_transpose_4 (Conv2DTr (None, 128, 128, 3)       1731      \n",
+      " latent_input (InputLayer)   [(None, 8, 8, 512)]       0         \n",
+      "                                                                 \n",
+      " conv_transpose_res_block (C  (None, 16, 16, 256)      4923904   \n",
+      " onvTransposeResBlock)                                           \n",
+      "                                                                 \n",
+      " conv_transpose_res_block_1   (None, 32, 32, 256)      1838080   \n",
+      " (ConvTransposeResBlock)                                         \n",
+      "                                                                 \n",
+      " conv_transpose_res_block_2   (None, 64, 64, 128)      607744    \n",
+      " (ConvTransposeResBlock)                                         \n",
+      "                                                                 \n",
+      " conv_transpose_res_block_3   (None, 128, 128, 64)     152320    \n",
+      " (ConvTransposeResBlock)                                         \n",
+      "                                                                 \n",
+      " conv2d_transpose_4 (Conv2DT  (None, 128, 128, 3)      1731      \n",
+      " ranspose)                                                       \n",
+      "                                                                 \n",
       "=================================================================\n",
       "Total params: 7,523,779\n",
       "Trainable params: 7,518,915\n",
@@ -321,127 +354,23 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 19,
+   "execution_count": 9,
    "metadata": {},
    "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "Finishing last run (ID:3oalngrd) before initializing another..."
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<br/>Waiting for W&B process to finish, PID 2779841<br/>Program ended successfully."
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "application/vnd.jupyter.widget-view+json": {
-       "model_id": "",
-       "version_major": 2,
-       "version_minor": 0
-      },
-      "text/plain": [
-       "VBox(children=(Label(value=' 0.06MB of 0.06MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Find user logs for this run at: <code>/home/matteo/NeuroGEN/TorVergataExperiments/Generative/wandb/run-20211126_163029-3oalngrd/logs/debug.log</code>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Find internal logs for this run at: <code>/home/matteo/NeuroGEN/TorVergataExperiments/Generative/wandb/run-20211126_163029-3oalngrd/logs/debug-internal.log</code>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Synced 7 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "\n",
-       "                    <br/>Synced <strong style=\"color:#cdcd00\">crimson-terrain-364</strong>: <a href=\"https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/3oalngrd\" target=\"_blank\">https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/3oalngrd</a><br/>\n",
-       "                "
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "...Successfully finished last run (ID:3oalngrd). Initializing new run:<br/><br/>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "\u001b[34m\u001b[1mwandb\u001b[0m: wandb version 0.12.7 is available!  To upgrade, please run:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:  $ pip install wandb --upgrade\n"
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mmatteoferrante\u001b[0m (use `wandb login --relogin` to force relogin)\n"
      ]
     },
     {
      "data": {
       "text/html": [
        "\n",
-       "                Tracking run with wandb version 0.11.2<br/>\n",
-       "                Syncing run <strong style=\"color:#cdcd00\">fallen-durian-365</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-       "                Project page: <a href=\"https://wandb.ai/matteoferrante/TorVergataExperiment-Generative\" target=\"_blank\">https://wandb.ai/matteoferrante/TorVergataExperiment-Generative</a><br/>\n",
-       "                Run page: <a href=\"https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/tt3hsqxz\" target=\"_blank\">https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/tt3hsqxz</a><br/>\n",
-       "                Run data is saved locally in <code>/home/matteo/NeuroGEN/TorVergataExperiments/Generative/wandb/run-20211126_163558-tt3hsqxz</code><br/><br/>\n",
-       "            "
+       "                    Syncing run <strong><a href=\"https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/119lyngs\" target=\"_blank\">fast-firebrand-454</a></strong> to <a href=\"https://wandb.ai/matteoferrante/TorVergataExperiment-Generative\" target=\"_blank\">Weights & Biases</a> (<a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">docs</a>).<br/>\n",
+       "\n",
+       "                "
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -453,13 +382,13 @@
     {
      "data": {
       "text/html": [
-       "<h1>Run(tt3hsqxz)</h1><iframe src=\"https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/tt3hsqxz\" style=\"border:none;width:100%;height:400px\"></iframe>"
+       "<button onClick=\"this.nextSibling.style.display='block';this.style.display='none';\">Display W&B run</button><iframe src=\"https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/119lyngs?jupyter=true\" style=\"border:none;width:100%;height:420px;display:none;\"></iframe>"
       ],
       "text/plain": [
-       "<wandb.sdk.wandb_run.Run at 0x7f02d44adbb0>"
+       "<wandb.sdk.wandb_run.Run at 0x7fa1cee5a9d0>"
       ]
      },
-     "execution_count": 19,
+     "execution_count": 9,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -470,7 +399,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 21,
+   "execution_count": 10,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -507,113 +436,43 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 22,
+   "execution_count": 15,
    "metadata": {},
    "outputs": [],
    "source": [
-    "g.compile(keras.optimizers.Adam(INIT_LR))\n"
+    "g.compile(keras.optimizers.Adam(INIT_LR))\n",
+    "g.build(input_shape=(None,*input_shape))"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 23,
+   "execution_count": null,
    "metadata": {},
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Epoch 1/40\n",
-      "2164/2164 [==============================] - 706s 323ms/step - loss: 0.0340 - reconstruction_loss: 0.0050 - vqvae_loss: 0.0260 - val_val_reconstruction_loss: 0.0030\n",
-      "Epoch 2/40\n",
-      "2164/2164 [==============================] - 667s 308ms/step - loss: 0.0080 - reconstruction_loss: 0.0028 - vqvae_loss: 0.0050 - val_val_reconstruction_loss: 0.0025\n",
-      "Epoch 3/40\n",
-      "2164/2164 [==============================] - 645s 298ms/step - loss: 0.0066 - reconstruction_loss: 0.0025 - vqvae_loss: 0.0041 - val_val_reconstruction_loss: 0.0022\n",
-      "Epoch 4/40\n",
-      "2164/2164 [==============================] - 645s 298ms/step - loss: 0.0061 - reconstruction_loss: 0.0023 - vqvae_loss: 0.0037 - val_val_reconstruction_loss: 0.0021\n",
-      "Epoch 5/40\n",
-      "2164/2164 [==============================] - 645s 298ms/step - loss: 0.0057 - reconstruction_loss: 0.0022 - vqvae_loss: 0.0036 - val_val_reconstruction_loss: 0.0020\n",
-      "Epoch 6/40\n",
-      "2164/2164 [==============================] - 653s 302ms/step - loss: 0.0055 - reconstruction_loss: 0.0021 - vqvae_loss: 0.0034 - val_val_reconstruction_loss: 0.0019\n",
-      "Epoch 7/40\n",
-      "2164/2164 [==============================] - 642s 297ms/step - loss: 0.0054 - reconstruction_loss: 0.0020 - vqvae_loss: 0.0034 - val_val_reconstruction_loss: 0.0020\n",
-      "Epoch 8/40\n",
-      "2164/2164 [==============================] - 643s 297ms/step - loss: 0.0053 - reconstruction_loss: 0.0020 - vqvae_loss: 0.0034 - val_val_reconstruction_loss: 0.0019\n",
-      "Epoch 9/40\n",
-      "2164/2164 [==============================] - 643s 297ms/step - loss: 0.0053 - reconstruction_loss: 0.0019 - vqvae_loss: 0.0033 - val_val_reconstruction_loss: 0.0018\n",
-      "Epoch 10/40\n",
-      "2164/2164 [==============================] - 704s 325ms/step - loss: 0.0052 - reconstruction_loss: 0.0019 - vqvae_loss: 0.0033 - val_val_reconstruction_loss: 0.0018\n",
-      "Epoch 11/40\n",
-      "2164/2164 [==============================] - 700s 323ms/step - loss: 0.0051 - reconstruction_loss: 0.0019 - vqvae_loss: 0.0032 - val_val_reconstruction_loss: 0.0018\n",
-      "Epoch 12/40\n",
-      "2164/2164 [==============================] - 692s 320ms/step - loss: 0.0051 - reconstruction_loss: 0.0019 - vqvae_loss: 0.0032 - val_val_reconstruction_loss: 0.0018\n",
-      "Epoch 13/40\n",
-      "2164/2164 [==============================] - 726s 335ms/step - loss: 0.0050 - reconstruction_loss: 0.0018 - vqvae_loss: 0.0031 - val_val_reconstruction_loss: 0.0018\n",
-      "Epoch 14/40\n",
-      "2164/2164 [==============================] - 702s 325ms/step - loss: 0.0049 - reconstruction_loss: 0.0018 - vqvae_loss: 0.0031 - val_val_reconstruction_loss: 0.0018\n",
-      "Epoch 15/40\n",
-      "2164/2164 [==============================] - 710s 328ms/step - loss: 0.0049 - reconstruction_loss: 0.0018 - vqvae_loss: 0.0031 - val_val_reconstruction_loss: 0.0018\n",
-      "Epoch 16/40\n",
-      "2164/2164 [==============================] - 705s 326ms/step - loss: 0.0049 - reconstruction_loss: 0.0018 - vqvae_loss: 0.0031 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 17/40\n",
-      "2164/2164 [==============================] - 734s 339ms/step - loss: 0.0048 - reconstruction_loss: 0.0018 - vqvae_loss: 0.0030 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 18/40\n",
-      "2164/2164 [==============================] - 727s 336ms/step - loss: 0.0048 - reconstruction_loss: 0.0018 - vqvae_loss: 0.0030 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 19/40\n",
-      "2164/2164 [==============================] - 704s 325ms/step - loss: 0.0047 - reconstruction_loss: 0.0018 - vqvae_loss: 0.0030 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 20/40\n",
-      "2164/2164 [==============================] - 728s 336ms/step - loss: 0.0047 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0029 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 21/40\n",
-      "2164/2164 [==============================] - 708s 327ms/step - loss: 0.0047 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0029 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 22/40\n",
-      "2164/2164 [==============================] - 706s 326ms/step - loss: 0.0046 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0029 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 23/40\n",
-      "2164/2164 [==============================] - 726s 336ms/step - loss: 0.0046 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0029 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 24/40\n",
-      "2164/2164 [==============================] - 710s 328ms/step - loss: 0.0046 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0029 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 25/40\n",
-      "2164/2164 [==============================] - 716s 331ms/step - loss: 0.0045 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0028 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 26/40\n",
-      "2164/2164 [==============================] - 695s 321ms/step - loss: 0.0045 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0028 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 27/40\n",
-      "2164/2164 [==============================] - 636s 294ms/step - loss: 0.0045 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0028 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 28/40\n",
-      "2164/2164 [==============================] - 597s 276ms/step - loss: 0.0045 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0028 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 29/40\n",
-      "2164/2164 [==============================] - 597s 276ms/step - loss: 0.0045 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0028 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 30/40\n",
-      "2164/2164 [==============================] - 597s 276ms/step - loss: 0.0044 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0028 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 31/40\n",
-      "2164/2164 [==============================] - 596s 275ms/step - loss: 0.0044 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0027 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 32/40\n",
-      "2164/2164 [==============================] - 596s 276ms/step - loss: 0.0044 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0027 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 33/40\n",
-      "2164/2164 [==============================] - 596s 275ms/step - loss: 0.0044 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0027 - val_val_reconstruction_loss: 0.0016\n",
-      "Epoch 34/40\n",
-      "2164/2164 [==============================] - 596s 275ms/step - loss: 0.0043 - reconstruction_loss: 0.0016 - vqvae_loss: 0.0027 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 35/40\n",
-      "2164/2164 [==============================] - 596s 276ms/step - loss: 0.0043 - reconstruction_loss: 0.0016 - vqvae_loss: 0.0027 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 36/40\n",
-      "2164/2164 [==============================] - 596s 275ms/step - loss: 0.0043 - reconstruction_loss: 0.0016 - vqvae_loss: 0.0026 - val_val_reconstruction_loss: 0.0016\n",
-      "Epoch 37/40\n",
-      "2164/2164 [==============================] - 594s 275ms/step - loss: 0.0043 - reconstruction_loss: 0.0016 - vqvae_loss: 0.0026 - val_val_reconstruction_loss: 0.0016\n",
-      "Epoch 38/40\n",
-      "2164/2164 [==============================] - 596s 275ms/step - loss: 0.0042 - reconstruction_loss: 0.0016 - vqvae_loss: 0.0026 - val_val_reconstruction_loss: 0.0016\n",
-      "Epoch 39/40\n",
-      "2164/2164 [==============================] - 596s 275ms/step - loss: 0.0042 - reconstruction_loss: 0.0016 - vqvae_loss: 0.0026 - val_val_reconstruction_loss: 0.0016\n",
-      "Epoch 40/40\n",
-      "2164/2164 [==============================] - 595s 275ms/step - loss: 0.0042 - reconstruction_loss: 0.0016 - vqvae_loss: 0.0026 - val_val_reconstruction_loss: 0.0016\n"
+      "('You must install pydot (`pip install pydot`) and install graphviz (see instructions at https://graphviz.gitlab.io/download/) ', 'for plot_model/model_to_dot to work.')\n",
+      "('You must install pydot (`pip install pydot`) and install graphviz (see instructions at https://graphviz.gitlab.io/download/) ', 'for plot_model/model_to_dot to work.')\n",
+      "('You must install pydot (`pip install pydot`) and install graphviz (see instructions at https://graphviz.gitlab.io/download/) ', 'for plot_model/model_to_dot to work.')\n",
+      "Epoch 1/240\n"
      ]
     },
     {
-     "data": {
-      "text/plain": [
-       "<tensorflow.python.keras.callbacks.History at 0x7f0360d20e20>"
-      ]
-     },
-     "execution_count": 23,
-     "metadata": {},
-     "output_type": "execute_result"
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "2021-12-14 14:37:58.440055: I tensorflow/stream_executor/cuda/cuda_dnn.cc:366] Loaded cuDNN version 8300\n",
+      "2021-12-14 14:38:00.186729: I tensorflow/stream_executor/cuda/cuda_blas.cc:1774] TensorFloat-32 will be used for the matrix multiplication. This will only be logged once.\n"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "371/541 [===================>..........] - ETA: 53s - loss: 0.0591 - reconstruction_loss: 0.0124 - vqvae_loss: 0.0420"
+     ]
     }
    ],
    "source": [
@@ -630,7 +489,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 12,
+   "execution_count": null,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -649,17 +508,9 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 13,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "{'encoder': 'models/vqvae_celeba/vq_vae_encoder.h5', 'decoder': 'models/vqvae_celeba/vq_vae_decoder.h5', 'embeddings': 'models/vqvae_celeba/vq_vae_embeddings.npy'}\n"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "\n",
     "#model=VQVAE((28,28,1),latent_dim=16,num_embeddings=128,train_variance=4)\n",
@@ -684,7 +535,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 14,
+   "execution_count": null,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -713,17 +564,9 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 15,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stderr",
-     "output_type": "stream",
-     "text": [
-      "100%|██████████| 2165/2165 [14:10<00:00,  2.55it/s]\n"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "encoded_outputs=[]\n",
     "\n",
@@ -735,37 +578,18 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 16,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "(8, 8, 512)"
-      ]
-     },
-     "execution_count": 16,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
+   "outputs": [],
    "source": [
     "encoded_outputs[0][0].shape"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 17,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stderr",
-     "output_type": "stream",
-     "text": [
-      "100%|██████████| 2165/2165 [07:50<00:00,  4.60it/s]\n"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "codebook_indices=[]\n",
     "for b in tqdm.tqdm(range(len(train_dataset))):\n",
@@ -781,18 +605,9 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 18,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "(8866880,)\n",
-      "Shape of the training data for PixelCNN: (138545, 8, 8)\n"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "codebook_indices = list(itertools.chain.from_iterable(codebook_indices))\n",
     "codebook_indices = np.array(codebook_indices)\n",
@@ -808,213 +623,12 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 41,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Model: \"model_7\"\n",
-      "_________________________________________________________________\n",
-      "Layer (type)                 Output Shape              Param #   \n",
-      "=================================================================\n",
-      "input_8 (InputLayer)         [(None, 8, 8)]            0         \n",
-      "_________________________________________________________________\n",
-      "tf.one_hot_7 (TFOpLambda)    (None, 8, 8, 256)         0         \n",
-      "_________________________________________________________________\n",
-      "pixel_conv_layer_21 (PixelCo (None, 8, 8, 128)         1605760   \n",
-      "_________________________________________________________________\n",
-      "residual_block_19 (ResidualB (None, 8, 8, 128)         98624     \n",
-      "_________________________________________________________________\n",
-      "residual_block_20 (ResidualB (None, 8, 8, 128)         98624     \n",
-      "_________________________________________________________________\n",
-      "residual_block_21 (ResidualB (None, 8, 8, 128)         98624     \n",
-      "_________________________________________________________________\n",
-      "residual_block_22 (ResidualB (None, 8, 8, 128)         98624     \n",
-      "_________________________________________________________________\n",
-      "residual_block_23 (ResidualB (None, 8, 8, 128)         98624     \n",
-      "_________________________________________________________________\n",
-      "pixel_conv_layer_27 (PixelCo (None, 8, 8, 128)         16512     \n",
-      "_________________________________________________________________\n",
-      "pixel_conv_layer_28 (PixelCo (None, 8, 8, 128)         16512     \n",
-      "_________________________________________________________________\n",
-      "pixel_conv_layer_29 (PixelCo (None, 8, 8, 128)         16512     \n",
-      "_________________________________________________________________\n",
-      "conv2d_102 (Conv2D)          (None, 8, 8, 256)         33024     \n",
-      "=================================================================\n",
-      "Total params: 2,181,440\n",
-      "Trainable params: 2,181,440\n",
-      "Non-trainable params: 0\n",
-      "_________________________________________________________________\n",
-      "None\n"
-     ]
-    },
-    {
-     "data": {
-      "text/html": [
-       "Finishing last run (ID:luzs6oci) before initializing another..."
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<br/>Waiting for W&B process to finish, PID 1284568<br/>Program ended successfully."
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "application/vnd.jupyter.widget-view+json": {
-       "model_id": "",
-       "version_major": 2,
-       "version_minor": 0
-      },
-      "text/plain": [
-       "VBox(children=(Label(value=' 0.09MB of 0.09MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Find user logs for this run at: <code>/home/matteo/NeuroGEN/TorVergataExperiments/Generative/wandb/run-20211129_142756-luzs6oci/logs/debug.log</code>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Find internal logs for this run at: <code>/home/matteo/NeuroGEN/TorVergataExperiments/Generative/wandb/run-20211129_142756-luzs6oci/logs/debug-internal.log</code>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<h3>Run summary:</h3><br/><style>\n",
-       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
-       "    </style><table class=\"wandb\">\n",
-       "<tr><td>epoch</td><td>2</td></tr><tr><td>loss</td><td>3.35581</td></tr><tr><td>accuracy</td><td>0.13274</td></tr><tr><td>val_loss</td><td>3.35721</td></tr><tr><td>val_accuracy</td><td>0.133</td></tr><tr><td>_runtime</td><td>144</td></tr><tr><td>_timestamp</td><td>1638192633</td></tr><tr><td>_step</td><td>2</td></tr><tr><td>best_val_loss</td><td>3.35721</td></tr><tr><td>best_epoch</td><td>2</td></tr></table>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<h3>Run history:</h3><br/><style>\n",
-       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
-       "    </style><table class=\"wandb\">\n",
-       "<tr><td>epoch</td><td>▁▅█</td></tr><tr><td>loss</td><td>█▃▁</td></tr><tr><td>accuracy</td><td>▁▇█</td></tr><tr><td>val_loss</td><td>█▂▁</td></tr><tr><td>val_accuracy</td><td>▁▅█</td></tr><tr><td>_runtime</td><td>▁▄█</td></tr><tr><td>_timestamp</td><td>▁▄█</td></tr><tr><td>_step</td><td>▁▅█</td></tr></table><br/>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Synced 7 W&B file(s), 1 media file(s), 0 artifact file(s) and 1 other file(s)"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "\n",
-       "                    <br/>Synced <strong style=\"color:#cdcd00\">bright-brook-383</strong>: <a href=\"https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/luzs6oci\" target=\"_blank\">https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/luzs6oci</a><br/>\n",
-       "                "
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "...Successfully finished last run (ID:luzs6oci). Initializing new run:<br/><br/>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "\n",
-       "                Tracking run with wandb version 0.11.2<br/>\n",
-       "                Syncing run <strong style=\"color:#cdcd00\">ancient-shadow-384</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-       "                Project page: <a href=\"https://wandb.ai/matteoferrante/TorVergataExperiment-Generative\" target=\"_blank\">https://wandb.ai/matteoferrante/TorVergataExperiment-Generative</a><br/>\n",
-       "                Run page: <a href=\"https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/tuf2bvqb\" target=\"_blank\">https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/tuf2bvqb</a><br/>\n",
-       "                Run data is saved locally in <code>/home/matteo/NeuroGEN/TorVergataExperiments/Generative/wandb/run-20211129_143130-tuf2bvqb</code><br/><br/>\n",
-       "            "
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<h1>Run(tuf2bvqb)</h1><iframe src=\"https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/tuf2bvqb\" style=\"border:none;width:100%;height:400px\"></iframe>"
-      ],
-      "text/plain": [
-       "<wandb.sdk.wandb_run.Run at 0x7f1ab4517310>"
-      ]
-     },
-     "execution_count": 41,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
+   "outputs": [],
    "source": [
-    "pixel_cnn = PixelCNN(input_dim=input_shape, n_embeddings=256, n_residual=5, n_convlayer=3)\n",
-    "opt = keras.optimizers.Adam(3e-3)\n",
+    "pixel_cnn = PixelCNN(input_dim=input_shape, n_embeddings=256, n_residual=8, n_convlayer=4)\n",
+    "opt = keras.optimizers.Adam(3e-4)\n",
     "pixel_cnn.compile(loss=keras.losses.SparseCategoricalCrossentropy(from_logits=True), optimizer=opt,metrics=\"accuracy\")\n",
     "\n",
     "wandb.init(project=\"TorVergataExperiment-Generative\",config=config)"
@@ -1022,7 +636,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 42,
+   "execution_count": null,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -1040,89 +654,9 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 43,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Epoch 1/30\n",
-      "1949/1949 [==============================] - 75s 36ms/step - loss: 3.7590 - accuracy: 0.0974 - val_loss: 3.4806 - val_accuracy: 0.1314\n"
-     ]
-    },
-    {
-     "name": "stderr",
-     "output_type": "stream",
-     "text": [
-      "\u001b[34m\u001b[1mwandb\u001b[0m: \u001b[32m\u001b[41mERROR\u001b[0m Can't save model, h5py returned error: Saving the model to HDF5 format requires the model to be a Functional model or a Sequential model. It does not work for subclassed models, because such models are defined via the body of a Python method, which isn't safely serializable. Consider saving to the Tensorflow SavedModel format (by setting save_format=\"tf\") or using `save_weights`.\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Epoch 2/30\n",
-      "1949/1949 [==============================] - 65s 33ms/step - loss: 3.4665 - accuracy: 0.1329 - val_loss: 3.4473 - val_accuracy: 0.1357\n",
-      "Epoch 3/30\n",
-      "1949/1949 [==============================] - 61s 31ms/step - loss: 3.4349 - accuracy: 0.1379 - val_loss: 3.4309 - val_accuracy: 0.1384\n",
-      "Epoch 4/30\n",
-      "1949/1949 [==============================] - 61s 31ms/step - loss: 3.4211 - accuracy: 0.1397 - val_loss: 3.4262 - val_accuracy: 0.1386\n",
-      "Epoch 5/30\n",
-      "1949/1949 [==============================] - 62s 32ms/step - loss: 3.4099 - accuracy: 0.1417 - val_loss: 3.4192 - val_accuracy: 0.1396\n",
-      "Epoch 6/30\n",
-      "1949/1949 [==============================] - 60s 31ms/step - loss: 3.4013 - accuracy: 0.1423 - val_loss: 3.4163 - val_accuracy: 0.1397\n",
-      "Epoch 7/30\n",
-      "1949/1949 [==============================] - 64s 33ms/step - loss: 3.3982 - accuracy: 0.1435 - val_loss: 3.4124 - val_accuracy: 0.1408\n",
-      "Epoch 8/30\n",
-      "1949/1949 [==============================] - 57s 29ms/step - loss: 3.3922 - accuracy: 0.1442 - val_loss: 3.4113 - val_accuracy: 0.1412\n",
-      "Epoch 9/30\n",
-      "1949/1949 [==============================] - 60s 31ms/step - loss: 3.3905 - accuracy: 0.1441 - val_loss: 3.4112 - val_accuracy: 0.1409\n",
-      "Epoch 10/30\n",
-      "1949/1949 [==============================] - 63s 32ms/step - loss: 3.3873 - accuracy: 0.1447 - val_loss: 3.4069 - val_accuracy: 0.1416\n",
-      "Epoch 11/30\n",
-      "1949/1949 [==============================] - 62s 32ms/step - loss: 3.3839 - accuracy: 0.1455 - val_loss: 3.4065 - val_accuracy: 0.1417\n",
-      "Epoch 12/30\n",
-      "1949/1949 [==============================] - 61s 31ms/step - loss: 3.3808 - accuracy: 0.1458 - val_loss: 3.4057 - val_accuracy: 0.1415\n",
-      "Epoch 13/30\n",
-      "1949/1949 [==============================] - 60s 31ms/step - loss: 3.3786 - accuracy: 0.1460 - val_loss: 3.4043 - val_accuracy: 0.1419\n",
-      "Epoch 14/30\n",
-      "1949/1949 [==============================] - 60s 31ms/step - loss: 3.3785 - accuracy: 0.1461 - val_loss: 3.4034 - val_accuracy: 0.1422\n",
-      "Epoch 15/30\n",
-      "1949/1949 [==============================] - 56s 29ms/step - loss: 3.3758 - accuracy: 0.1465 - val_loss: 3.4058 - val_accuracy: 0.1419\n",
-      "Epoch 16/30\n",
-      "1949/1949 [==============================] - 58s 30ms/step - loss: 3.3734 - accuracy: 0.1468 - val_loss: 3.4027 - val_accuracy: 0.1422\n",
-      "Epoch 17/30\n",
-      "1949/1949 [==============================] - 59s 30ms/step - loss: 3.3738 - accuracy: 0.1468 - val_loss: 3.4014 - val_accuracy: 0.1428\n",
-      "Epoch 18/30\n",
-      "1949/1949 [==============================] - 58s 30ms/step - loss: 3.3728 - accuracy: 0.1472 - val_loss: 3.4013 - val_accuracy: 0.1424\n",
-      "Epoch 19/30\n",
-      "1949/1949 [==============================] - 60s 31ms/step - loss: 3.3706 - accuracy: 0.1472 - val_loss: 3.4019 - val_accuracy: 0.1423\n",
-      "Epoch 20/30\n",
-      "1949/1949 [==============================] - 58s 30ms/step - loss: 3.3690 - accuracy: 0.1474 - val_loss: 3.4003 - val_accuracy: 0.1428\n",
-      "Epoch 21/30\n",
-      "1949/1949 [==============================] - 57s 29ms/step - loss: 3.3684 - accuracy: 0.1478 - val_loss: 3.4013 - val_accuracy: 0.1420\n",
-      "Epoch 22/30\n",
-      "1949/1949 [==============================] - 58s 30ms/step - loss: 3.3654 - accuracy: 0.1479 - val_loss: 3.3997 - val_accuracy: 0.1426\n",
-      "Epoch 23/30\n",
-      "1949/1949 [==============================] - 57s 29ms/step - loss: 3.3658 - accuracy: 0.1483 - val_loss: 3.4000 - val_accuracy: 0.1429\n",
-      "Epoch 24/30\n",
-      "1949/1949 [==============================] - 57s 29ms/step - loss: 3.3654 - accuracy: 0.1478 - val_loss: 3.3980 - val_accuracy: 0.1433\n",
-      "Epoch 25/30\n",
-      "1949/1949 [==============================] - 63s 33ms/step - loss: 3.3656 - accuracy: 0.1482 - val_loss: 3.3973 - val_accuracy: 0.1428\n",
-      "Epoch 26/30\n",
-      "1949/1949 [==============================] - 58s 30ms/step - loss: 3.3646 - accuracy: 0.1482 - val_loss: 3.4006 - val_accuracy: 0.1426\n",
-      "Epoch 27/30\n",
-      "1949/1949 [==============================] - 60s 31ms/step - loss: 3.3614 - accuracy: 0.1487 - val_loss: 3.3994 - val_accuracy: 0.1426\n",
-      "Epoch 28/30\n",
-      "1949/1949 [==============================] - 60s 31ms/step - loss: 3.3617 - accuracy: 0.1485 - val_loss: 3.3981 - val_accuracy: 0.1423\n",
-      "Epoch 29/30\n",
-      "1949/1949 [==============================] - 57s 29ms/step - loss: 3.3616 - accuracy: 0.1487 - val_loss: 3.3992 - val_accuracy: 0.1433\n",
-      "Epoch 30/30\n",
-      "1949/1949 [==============================] - 58s 30ms/step - loss: 3.3610 - accuracy: 0.1486 - val_loss: 3.3980 - val_accuracy: 0.1433\n"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "pixel_cnn_dir=\"models/vqvae_celeba/pixelcnn\"\n",
     "os.makedirs(pixel_cnn_dir,exist_ok=True)\n",
@@ -1144,17 +678,9 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 44,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "{'encoder': 'models/vqvae_celeba/vq_vae_encoder.h5', 'decoder': 'models/vqvae_celeba/vq_vae_decoder.h5', 'embeddings': 'models/vqvae_celeba/vq_vae_embeddings.npy'}\n"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "weights=map_models_weights(\"models/vqvae_celeba\")\n",
     "\n",
@@ -1167,50 +693,9 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 50,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "[CONFIG] PixelCNN models/vqvae_celeba/pixelcnn/dict.json\n",
-      "Model: \"model_8\"\n",
-      "_________________________________________________________________\n",
-      "Layer (type)                 Output Shape              Param #   \n",
-      "=================================================================\n",
-      "input_9 (InputLayer)         [(None, 8, 8)]            0         \n",
-      "_________________________________________________________________\n",
-      "tf.one_hot_8 (TFOpLambda)    (None, 8, 8, 256)         0         \n",
-      "_________________________________________________________________\n",
-      "pixel_conv_layer_30 (PixelCo (None, 8, 8, 128)         1605760   \n",
-      "_________________________________________________________________\n",
-      "residual_block_24 (ResidualB (None, 8, 8, 128)         98624     \n",
-      "_________________________________________________________________\n",
-      "residual_block_25 (ResidualB (None, 8, 8, 128)         98624     \n",
-      "_________________________________________________________________\n",
-      "residual_block_26 (ResidualB (None, 8, 8, 128)         98624     \n",
-      "_________________________________________________________________\n",
-      "residual_block_27 (ResidualB (None, 8, 8, 128)         98624     \n",
-      "_________________________________________________________________\n",
-      "residual_block_28 (ResidualB (None, 8, 8, 128)         98624     \n",
-      "_________________________________________________________________\n",
-      "pixel_conv_layer_36 (PixelCo (None, 8, 8, 128)         16512     \n",
-      "_________________________________________________________________\n",
-      "pixel_conv_layer_37 (PixelCo (None, 8, 8, 128)         16512     \n",
-      "_________________________________________________________________\n",
-      "pixel_conv_layer_38 (PixelCo (None, 8, 8, 128)         16512     \n",
-      "_________________________________________________________________\n",
-      "conv2d_122 (Conv2D)          (None, 8, 8, 256)         33024     \n",
-      "=================================================================\n",
-      "Total params: 2,181,440\n",
-      "Trainable params: 2,181,440\n",
-      "Non-trainable params: 0\n",
-      "_________________________________________________________________\n",
-      "None\n"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "pixel_cnn_dir=\"models/vqvae_celeba/pixelcnn\"\n",
     "\n",
@@ -1235,7 +720,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 55,
+   "execution_count": null,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -1251,32 +736,9 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 58,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "<matplotlib.image.AxesImage at 0x7f1a4c0d6d30>"
-      ]
-     },
-     "execution_count": 58,
-     "metadata": {},
-     "output_type": "execute_result"
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 432x288 with 1 Axes>"
-      ]
-     },
-     "metadata": {
-      "needs_background": "light"
-     },
-     "output_type": "display_data"
-    }
-   ],
+   "outputs": [],
    "source": [
     "import matplotlib.pyplot as plt\n",
     "plt.imshow(vis)"
@@ -1306,9 +768,9 @@
    "name": "python",
    "nbconvert_exporter": "python",
    "pygments_lexer": "ipython3",
-   "version": "3.8.11"
+   "version": "3.8.10"
   }
  },
  "nbformat": 4,
- "nbformat_minor": 1
+ "nbformat_minor": 4
 }
diff --git a/Generative/.ipynb_checkpoints/container_install-checkpoint.ipynb b/Generative/.ipynb_checkpoints/container_install-checkpoint.ipynb
index a13bd91..3c7e9a4 100644
--- a/Generative/.ipynb_checkpoints/container_install-checkpoint.ipynb
+++ b/Generative/.ipynb_checkpoints/container_install-checkpoint.ipynb
@@ -1,9 +1,86 @@
 {
  "cells": [
+  {
+   "cell_type": "code",
+   "execution_count": 3,
+   "id": "f9ffa1e1",
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Requirement already satisfied: wandb in /usr/local/lib/python3.8/dist-packages (0.12.7)\n",
+      "Requirement already satisfied: subprocess32>=3.5.3 in /usr/local/lib/python3.8/dist-packages (from wandb) (3.5.4)\n",
+      "Requirement already satisfied: protobuf>=3.12.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (3.17.3)\n",
+      "Requirement already satisfied: configparser>=3.8.1 in /usr/local/lib/python3.8/dist-packages (from wandb) (5.2.0)\n",
+      "Requirement already satisfied: python-dateutil>=2.6.1 in /usr/local/lib/python3.8/dist-packages (from wandb) (2.8.2)\n",
+      "Requirement already satisfied: sentry-sdk>=1.0.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (1.5.1)\n",
+      "Requirement already satisfied: promise<3,>=2.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (2.3)\n",
+      "Requirement already satisfied: six>=1.13.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (1.15.0)\n",
+      "Requirement already satisfied: requests<3,>=2.0.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (2.26.0)\n",
+      "Requirement already satisfied: docker-pycreds>=0.4.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (0.4.0)\n",
+      "Requirement already satisfied: shortuuid>=0.5.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (1.0.8)\n",
+      "Requirement already satisfied: pathtools in /usr/local/lib/python3.8/dist-packages (from wandb) (0.1.2)\n",
+      "Requirement already satisfied: yaspin>=1.0.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (2.1.0)\n",
+      "Requirement already satisfied: Click!=8.0.0,>=7.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (8.0.3)\n",
+      "Requirement already satisfied: PyYAML in /usr/local/lib/python3.8/dist-packages (from wandb) (6.0)\n",
+      "Requirement already satisfied: psutil>=5.0.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (5.7.0)\n",
+      "Requirement already satisfied: GitPython>=1.0.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (3.1.24)\n",
+      "Requirement already satisfied: gitdb<5,>=4.0.1 in /usr/local/lib/python3.8/dist-packages (from GitPython>=1.0.0->wandb) (4.0.9)\n",
+      "Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.8/dist-packages (from GitPython>=1.0.0->wandb) (3.7.4.3)\n",
+      "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.8/dist-packages (from requests<3,>=2.0.0->wandb) (2021.10.8)\n",
+      "Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.8/dist-packages (from requests<3,>=2.0.0->wandb) (1.26.7)\n",
+      "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.8/dist-packages (from requests<3,>=2.0.0->wandb) (3.3)\n",
+      "Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.8/dist-packages (from requests<3,>=2.0.0->wandb) (2.0.7)\n",
+      "Requirement already satisfied: termcolor<2.0.0,>=1.1.0 in /usr/local/lib/python3.8/dist-packages (from yaspin>=1.0.0->wandb) (1.1.0)\n",
+      "Requirement already satisfied: smmap<6,>=3.0.1 in /usr/local/lib/python3.8/dist-packages (from gitdb<5,>=4.0.1->GitPython>=1.0.0->wandb) (5.0.0)\n",
+      "\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\n",
+      "Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease\n",
+      "Hit:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease\n",
+      "Hit:3 http://archive.ubuntu.com/ubuntu focal-backports InRelease\n",
+      "Hit:4 http://security.ubuntu.com/ubuntu focal-security InRelease\n",
+      "Reading package lists... Done\n",
+      "Reading package lists... Done\n",
+      "Building dependency tree       \n",
+      "Reading state information... Done\n",
+      "python3-opencv is already the newest version (4.2.0+dfsg-5).\n",
+      "0 upgraded, 0 newly installed, 0 to remove and 17 not upgraded.\n",
+      "Requirement already satisfied: opencv-python in /usr/local/lib/python3.8/dist-packages (4.5.4.60)\n",
+      "Requirement already satisfied: numpy>=1.17.3 in /usr/local/lib/python3.8/dist-packages (from opencv-python) (1.19.4)\n",
+      "\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\n",
+      "Requirement already satisfied: imutils in /usr/local/lib/python3.8/dist-packages (0.5.4)\n",
+      "\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\n",
+      "Collecting tensorflow_probability\n",
+      "  Downloading tensorflow_probability-0.15.0-py2.py3-none-any.whl (5.7 MB)\n",
+      "     |████████████████████████████████| 5.7 MB 6.4 MB/s            \n",
+      "\u001b[?25hRequirement already satisfied: decorator in /usr/local/lib/python3.8/dist-packages (from tensorflow_probability) (5.1.0)\n",
+      "Requirement already satisfied: six>=1.10.0 in /usr/local/lib/python3.8/dist-packages (from tensorflow_probability) (1.15.0)\n",
+      "Requirement already satisfied: gast>=0.3.2 in /usr/local/lib/python3.8/dist-packages (from tensorflow_probability) (0.4.0)\n",
+      "Collecting dm-tree\n",
+      "  Downloading dm_tree-0.1.6-cp38-cp38-manylinux_2_24_x86_64.whl (94 kB)\n",
+      "     |████████████████████████████████| 94 kB 7.0 MB/s             \n",
+      "\u001b[?25hRequirement already satisfied: absl-py in /usr/local/lib/python3.8/dist-packages (from tensorflow_probability) (0.12.0)\n",
+      "Requirement already satisfied: cloudpickle>=1.3 in /usr/local/lib/python3.8/dist-packages (from tensorflow_probability) (2.0.0)\n",
+      "Requirement already satisfied: numpy>=1.13.3 in /usr/local/lib/python3.8/dist-packages (from tensorflow_probability) (1.19.4)\n",
+      "Installing collected packages: dm-tree, tensorflow-probability\n",
+      "Successfully installed dm-tree-0.1.6 tensorflow-probability-0.15.0\n",
+      "\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\n"
+     ]
+    }
+   ],
+   "source": [
+    "!pip install wandb\n",
+    "!apt-get update && apt-get install -y python3-opencv\n",
+    "!pip install opencv-python\n",
+    "!pip install imutils\n",
+    "!pip install tensorflow_probability"
+   ]
+  },
   {
    "cell_type": "code",
    "execution_count": null,
-   "id": "d468a8d4",
+   "id": "5c1eab9e",
    "metadata": {},
    "outputs": [],
    "source": []
diff --git a/Generative/VQ-VAE_celebA.ipynb b/Generative/VQ-VAE_celebA.ipynb
index 9b2e0f9..3843a88 100644
--- a/Generative/VQ-VAE_celebA.ipynb
+++ b/Generative/VQ-VAE_celebA.ipynb
@@ -21,7 +21,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 54,
+   "execution_count": 1,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -53,27 +53,26 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 5,
+   "execution_count": 2,
    "metadata": {},
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "0\n"
+      "1\n"
      ]
     }
    ],
    "source": [
     "#set the first GPU\n",
-    "os.environ[\"CUDA_VISIBLE_DEVICES\"]=\"0\"\n",
-    "\n",
+    "os.environ[\"CUDA_VISIBLE_DEVICES\"]=\"1\"\n",
     "print(os.environ.get(\"CUDA_VISIBLE_DEVICES\"))"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 6,
+   "execution_count": 3,
    "metadata": {},
    "outputs": [
     {
@@ -81,7 +80,21 @@
      "output_type": "stream",
      "text": [
       "Failed to detect the name of this notebook, you can set it manually with the WANDB_NOTEBOOK_NAME environment variable to enable code saving.\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mmatteoferrante\u001b[0m (use `wandb login --relogin` to force relogin)\n"
+      "\u001b[34m\u001b[1mwandb\u001b[0m: You can find your API key in your browser here: https://wandb.ai/authorize\n"
+     ]
+    },
+    {
+     "name": "stdin",
+     "output_type": "stream",
+     "text": [
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Paste an API key from your profile and hit enter, or press ctrl+c to quit:  ········································\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Appending key for api.wandb.ai to your netrc file: /root/.netrc\n"
      ]
     }
    ],
@@ -99,17 +112,18 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 7,
+   "execution_count": 4,
    "metadata": {},
    "outputs": [],
    "source": [
-    "BS = 64\n",
-    "EPOCHS=40\n",
-    "INIT_LR=1e-4\n",
+    "BS = 256\n",
+    "EPOCHS=240\n",
+    "INIT_LR=5e-5\n",
     "\n",
     "config[\"BS\"]=BS\n",
     "config[\"EPOCHS\"]=EPOCHS\n",
-    "config[\"INIT_LR\"]=INIT_LR"
+    "config[\"INIT_LR\"]=INIT_LR\n",
+    "config[\"nota\"]=\"DGX\""
    ]
   },
   {
@@ -121,7 +135,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 8,
+   "execution_count": 5,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -142,7 +156,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 9,
+   "execution_count": 6,
    "metadata": {},
    "outputs": [
     {
@@ -174,9 +188,19 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 10,
+   "execution_count": 7,
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "2021-12-14 14:36:53.239416: I tensorflow/core/platform/cpu_feature_guard.cc:151] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA\n",
+      "To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\n",
+      "2021-12-14 14:36:53.722178: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 79131 MB memory:  -> device: 0, name: NVIDIA A100-SXM-80GB, pci bus id: 0000:0f:00.0, compute capability: 8.0\n"
+     ]
+    }
+   ],
    "source": [
     "#TRAINING \n",
     "\n",
@@ -227,7 +251,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 11,
+   "execution_count": 8,
    "metadata": {},
    "outputs": [
     {
@@ -237,19 +261,24 @@
       "[INFO] Training VQ_VAE Model\n",
       "Model: \"encoder\"\n",
       "_________________________________________________________________\n",
-      "Layer (type)                 Output Shape              Param #   \n",
+      " Layer (type)                Output Shape              Param #   \n",
       "=================================================================\n",
-      "image_input (InputLayer)     [(None, 128, 128, 3)]     0         \n",
-      "_________________________________________________________________\n",
-      "conv_res_block (ConvResBlock (None, 64, 64, 64)        80320     \n",
-      "_________________________________________________________________\n",
-      "conv_res_block_1 (ConvResBlo (None, 32, 32, 128)       386560    \n",
-      "_________________________________________________________________\n",
-      "conv_res_block_2 (ConvResBlo (None, 16, 16, 256)       1543168   \n",
-      "_________________________________________________________________\n",
-      "conv_res_block_3 (ConvResBlo (None, 8, 8, 256)         4334080   \n",
-      "_________________________________________________________________\n",
-      "conv2d_34 (Conv2D)           (None, 8, 8, 512)         131584    \n",
+      " image_input (InputLayer)    [(None, 128, 128, 3)]     0         \n",
+      "                                                                 \n",
+      " conv_res_block (ConvResBloc  (None, 64, 64, 64)       80320     \n",
+      " k)                                                              \n",
+      "                                                                 \n",
+      " conv_res_block_1 (ConvResBl  (None, 32, 32, 128)      386560    \n",
+      " ock)                                                            \n",
+      "                                                                 \n",
+      " conv_res_block_2 (ConvResBl  (None, 16, 16, 256)      1543168   \n",
+      " ock)                                                            \n",
+      "                                                                 \n",
+      " conv_res_block_3 (ConvResBl  (None, 8, 8, 256)        4334080   \n",
+      " ock)                                                            \n",
+      "                                                                 \n",
+      " conv2d_22 (Conv2D)          (None, 8, 8, 512)         131584    \n",
+      "                                                                 \n",
       "=================================================================\n",
       "Total params: 6,475,712\n",
       "Trainable params: 6,470,848\n",
@@ -258,19 +287,25 @@
       "None\n",
       "Model: \"decoder\"\n",
       "_________________________________________________________________\n",
-      "Layer (type)                 Output Shape              Param #   \n",
+      " Layer (type)                Output Shape              Param #   \n",
       "=================================================================\n",
-      "latent_input (InputLayer)    [(None, 8, 8, 512)]       0         \n",
-      "_________________________________________________________________\n",
-      "conv_transpose_res_block (Co (None, 16, 16, 256)       4923904   \n",
-      "_________________________________________________________________\n",
-      "conv_transpose_res_block_1 ( (None, 32, 32, 256)       1838080   \n",
-      "_________________________________________________________________\n",
-      "conv_transpose_res_block_2 ( (None, 64, 64, 128)       607744    \n",
-      "_________________________________________________________________\n",
-      "conv_transpose_res_block_3 ( (None, 128, 128, 64)      152320    \n",
-      "_________________________________________________________________\n",
-      "conv2d_transpose_4 (Conv2DTr (None, 128, 128, 3)       1731      \n",
+      " latent_input (InputLayer)   [(None, 8, 8, 512)]       0         \n",
+      "                                                                 \n",
+      " conv_transpose_res_block (C  (None, 16, 16, 256)      4923904   \n",
+      " onvTransposeResBlock)                                           \n",
+      "                                                                 \n",
+      " conv_transpose_res_block_1   (None, 32, 32, 256)      1838080   \n",
+      " (ConvTransposeResBlock)                                         \n",
+      "                                                                 \n",
+      " conv_transpose_res_block_2   (None, 64, 64, 128)      607744    \n",
+      " (ConvTransposeResBlock)                                         \n",
+      "                                                                 \n",
+      " conv_transpose_res_block_3   (None, 128, 128, 64)     152320    \n",
+      " (ConvTransposeResBlock)                                         \n",
+      "                                                                 \n",
+      " conv2d_transpose_4 (Conv2DT  (None, 128, 128, 3)      1731      \n",
+      " ranspose)                                                       \n",
+      "                                                                 \n",
       "=================================================================\n",
       "Total params: 7,523,779\n",
       "Trainable params: 7,518,915\n",
@@ -319,127 +354,23 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 19,
+   "execution_count": 9,
    "metadata": {},
    "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "Finishing last run (ID:3oalngrd) before initializing another..."
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<br/>Waiting for W&B process to finish, PID 2779841<br/>Program ended successfully."
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "application/vnd.jupyter.widget-view+json": {
-       "model_id": "",
-       "version_major": 2,
-       "version_minor": 0
-      },
-      "text/plain": [
-       "VBox(children=(Label(value=' 0.06MB of 0.06MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Find user logs for this run at: <code>/home/matteo/NeuroGEN/TorVergataExperiments/Generative/wandb/run-20211126_163029-3oalngrd/logs/debug.log</code>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Find internal logs for this run at: <code>/home/matteo/NeuroGEN/TorVergataExperiments/Generative/wandb/run-20211126_163029-3oalngrd/logs/debug-internal.log</code>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Synced 7 W&B file(s), 0 media file(s), 0 artifact file(s) and 1 other file(s)"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "\n",
-       "                    <br/>Synced <strong style=\"color:#cdcd00\">crimson-terrain-364</strong>: <a href=\"https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/3oalngrd\" target=\"_blank\">https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/3oalngrd</a><br/>\n",
-       "                "
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "...Successfully finished last run (ID:3oalngrd). Initializing new run:<br/><br/>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "\u001b[34m\u001b[1mwandb\u001b[0m: wandb version 0.12.7 is available!  To upgrade, please run:\n",
-      "\u001b[34m\u001b[1mwandb\u001b[0m:  $ pip install wandb --upgrade\n"
+      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mmatteoferrante\u001b[0m (use `wandb login --relogin` to force relogin)\n"
      ]
     },
     {
      "data": {
       "text/html": [
        "\n",
-       "                Tracking run with wandb version 0.11.2<br/>\n",
-       "                Syncing run <strong style=\"color:#cdcd00\">fallen-durian-365</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-       "                Project page: <a href=\"https://wandb.ai/matteoferrante/TorVergataExperiment-Generative\" target=\"_blank\">https://wandb.ai/matteoferrante/TorVergataExperiment-Generative</a><br/>\n",
-       "                Run page: <a href=\"https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/tt3hsqxz\" target=\"_blank\">https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/tt3hsqxz</a><br/>\n",
-       "                Run data is saved locally in <code>/home/matteo/NeuroGEN/TorVergataExperiments/Generative/wandb/run-20211126_163558-tt3hsqxz</code><br/><br/>\n",
-       "            "
+       "                    Syncing run <strong><a href=\"https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/119lyngs\" target=\"_blank\">fast-firebrand-454</a></strong> to <a href=\"https://wandb.ai/matteoferrante/TorVergataExperiment-Generative\" target=\"_blank\">Weights & Biases</a> (<a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">docs</a>).<br/>\n",
+       "\n",
+       "                "
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -451,13 +382,13 @@
     {
      "data": {
       "text/html": [
-       "<h1>Run(tt3hsqxz)</h1><iframe src=\"https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/tt3hsqxz\" style=\"border:none;width:100%;height:400px\"></iframe>"
+       "<button onClick=\"this.nextSibling.style.display='block';this.style.display='none';\">Display W&B run</button><iframe src=\"https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/119lyngs?jupyter=true\" style=\"border:none;width:100%;height:420px;display:none;\"></iframe>"
       ],
       "text/plain": [
-       "<wandb.sdk.wandb_run.Run at 0x7f02d44adbb0>"
+       "<wandb.sdk.wandb_run.Run at 0x7fa1cee5a9d0>"
       ]
      },
-     "execution_count": 19,
+     "execution_count": 9,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -468,7 +399,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 21,
+   "execution_count": 10,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -505,113 +436,59 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 22,
+   "execution_count": 15,
    "metadata": {},
    "outputs": [],
    "source": [
-    "g.compile(keras.optimizers.Adam(INIT_LR))\n"
+    "g.compile(keras.optimizers.Adam(INIT_LR))\n",
+    "g.build(input_shape=(None,*input_shape))"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 23,
+   "execution_count": null,
    "metadata": {},
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Epoch 1/40\n",
-      "2164/2164 [==============================] - 706s 323ms/step - loss: 0.0340 - reconstruction_loss: 0.0050 - vqvae_loss: 0.0260 - val_val_reconstruction_loss: 0.0030\n",
-      "Epoch 2/40\n",
-      "2164/2164 [==============================] - 667s 308ms/step - loss: 0.0080 - reconstruction_loss: 0.0028 - vqvae_loss: 0.0050 - val_val_reconstruction_loss: 0.0025\n",
-      "Epoch 3/40\n",
-      "2164/2164 [==============================] - 645s 298ms/step - loss: 0.0066 - reconstruction_loss: 0.0025 - vqvae_loss: 0.0041 - val_val_reconstruction_loss: 0.0022\n",
-      "Epoch 4/40\n",
-      "2164/2164 [==============================] - 645s 298ms/step - loss: 0.0061 - reconstruction_loss: 0.0023 - vqvae_loss: 0.0037 - val_val_reconstruction_loss: 0.0021\n",
-      "Epoch 5/40\n",
-      "2164/2164 [==============================] - 645s 298ms/step - loss: 0.0057 - reconstruction_loss: 0.0022 - vqvae_loss: 0.0036 - val_val_reconstruction_loss: 0.0020\n",
-      "Epoch 6/40\n",
-      "2164/2164 [==============================] - 653s 302ms/step - loss: 0.0055 - reconstruction_loss: 0.0021 - vqvae_loss: 0.0034 - val_val_reconstruction_loss: 0.0019\n",
-      "Epoch 7/40\n",
-      "2164/2164 [==============================] - 642s 297ms/step - loss: 0.0054 - reconstruction_loss: 0.0020 - vqvae_loss: 0.0034 - val_val_reconstruction_loss: 0.0020\n",
-      "Epoch 8/40\n",
-      "2164/2164 [==============================] - 643s 297ms/step - loss: 0.0053 - reconstruction_loss: 0.0020 - vqvae_loss: 0.0034 - val_val_reconstruction_loss: 0.0019\n",
-      "Epoch 9/40\n",
-      "2164/2164 [==============================] - 643s 297ms/step - loss: 0.0053 - reconstruction_loss: 0.0019 - vqvae_loss: 0.0033 - val_val_reconstruction_loss: 0.0018\n",
-      "Epoch 10/40\n",
-      "2164/2164 [==============================] - 704s 325ms/step - loss: 0.0052 - reconstruction_loss: 0.0019 - vqvae_loss: 0.0033 - val_val_reconstruction_loss: 0.0018\n",
-      "Epoch 11/40\n",
-      "2164/2164 [==============================] - 700s 323ms/step - loss: 0.0051 - reconstruction_loss: 0.0019 - vqvae_loss: 0.0032 - val_val_reconstruction_loss: 0.0018\n",
-      "Epoch 12/40\n",
-      "2164/2164 [==============================] - 692s 320ms/step - loss: 0.0051 - reconstruction_loss: 0.0019 - vqvae_loss: 0.0032 - val_val_reconstruction_loss: 0.0018\n",
-      "Epoch 13/40\n",
-      "2164/2164 [==============================] - 726s 335ms/step - loss: 0.0050 - reconstruction_loss: 0.0018 - vqvae_loss: 0.0031 - val_val_reconstruction_loss: 0.0018\n",
-      "Epoch 14/40\n",
-      "2164/2164 [==============================] - 702s 325ms/step - loss: 0.0049 - reconstruction_loss: 0.0018 - vqvae_loss: 0.0031 - val_val_reconstruction_loss: 0.0018\n",
-      "Epoch 15/40\n",
-      "2164/2164 [==============================] - 710s 328ms/step - loss: 0.0049 - reconstruction_loss: 0.0018 - vqvae_loss: 0.0031 - val_val_reconstruction_loss: 0.0018\n",
-      "Epoch 16/40\n",
-      "2164/2164 [==============================] - 705s 326ms/step - loss: 0.0049 - reconstruction_loss: 0.0018 - vqvae_loss: 0.0031 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 17/40\n",
-      "2164/2164 [==============================] - 734s 339ms/step - loss: 0.0048 - reconstruction_loss: 0.0018 - vqvae_loss: 0.0030 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 18/40\n",
-      "2164/2164 [==============================] - 727s 336ms/step - loss: 0.0048 - reconstruction_loss: 0.0018 - vqvae_loss: 0.0030 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 19/40\n",
-      "2164/2164 [==============================] - 704s 325ms/step - loss: 0.0047 - reconstruction_loss: 0.0018 - vqvae_loss: 0.0030 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 20/40\n",
-      "2164/2164 [==============================] - 728s 336ms/step - loss: 0.0047 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0029 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 21/40\n",
-      "2164/2164 [==============================] - 708s 327ms/step - loss: 0.0047 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0029 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 22/40\n",
-      "2164/2164 [==============================] - 706s 326ms/step - loss: 0.0046 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0029 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 23/40\n",
-      "2164/2164 [==============================] - 726s 336ms/step - loss: 0.0046 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0029 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 24/40\n",
-      "2164/2164 [==============================] - 710s 328ms/step - loss: 0.0046 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0029 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 25/40\n",
-      "2164/2164 [==============================] - 716s 331ms/step - loss: 0.0045 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0028 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 26/40\n",
-      "2164/2164 [==============================] - 695s 321ms/step - loss: 0.0045 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0028 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 27/40\n",
-      "2164/2164 [==============================] - 636s 294ms/step - loss: 0.0045 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0028 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 28/40\n",
-      "2164/2164 [==============================] - 597s 276ms/step - loss: 0.0045 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0028 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 29/40\n",
-      "2164/2164 [==============================] - 597s 276ms/step - loss: 0.0045 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0028 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 30/40\n",
-      "2164/2164 [==============================] - 597s 276ms/step - loss: 0.0044 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0028 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 31/40\n",
-      "2164/2164 [==============================] - 596s 275ms/step - loss: 0.0044 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0027 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 32/40\n",
-      "2164/2164 [==============================] - 596s 276ms/step - loss: 0.0044 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0027 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 33/40\n",
-      "2164/2164 [==============================] - 596s 275ms/step - loss: 0.0044 - reconstruction_loss: 0.0017 - vqvae_loss: 0.0027 - val_val_reconstruction_loss: 0.0016\n",
-      "Epoch 34/40\n",
-      "2164/2164 [==============================] - 596s 275ms/step - loss: 0.0043 - reconstruction_loss: 0.0016 - vqvae_loss: 0.0027 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 35/40\n",
-      "2164/2164 [==============================] - 596s 276ms/step - loss: 0.0043 - reconstruction_loss: 0.0016 - vqvae_loss: 0.0027 - val_val_reconstruction_loss: 0.0017\n",
-      "Epoch 36/40\n",
-      "2164/2164 [==============================] - 596s 275ms/step - loss: 0.0043 - reconstruction_loss: 0.0016 - vqvae_loss: 0.0026 - val_val_reconstruction_loss: 0.0016\n",
-      "Epoch 37/40\n",
-      "2164/2164 [==============================] - 594s 275ms/step - loss: 0.0043 - reconstruction_loss: 0.0016 - vqvae_loss: 0.0026 - val_val_reconstruction_loss: 0.0016\n",
-      "Epoch 38/40\n",
-      "2164/2164 [==============================] - 596s 275ms/step - loss: 0.0042 - reconstruction_loss: 0.0016 - vqvae_loss: 0.0026 - val_val_reconstruction_loss: 0.0016\n",
-      "Epoch 39/40\n",
-      "2164/2164 [==============================] - 596s 275ms/step - loss: 0.0042 - reconstruction_loss: 0.0016 - vqvae_loss: 0.0026 - val_val_reconstruction_loss: 0.0016\n",
-      "Epoch 40/40\n",
-      "2164/2164 [==============================] - 595s 275ms/step - loss: 0.0042 - reconstruction_loss: 0.0016 - vqvae_loss: 0.0026 - val_val_reconstruction_loss: 0.0016\n"
+      "('You must install pydot (`pip install pydot`) and install graphviz (see instructions at https://graphviz.gitlab.io/download/) ', 'for plot_model/model_to_dot to work.')\n",
+      "('You must install pydot (`pip install pydot`) and install graphviz (see instructions at https://graphviz.gitlab.io/download/) ', 'for plot_model/model_to_dot to work.')\n",
+      "('You must install pydot (`pip install pydot`) and install graphviz (see instructions at https://graphviz.gitlab.io/download/) ', 'for plot_model/model_to_dot to work.')\n",
+      "Epoch 1/240\n"
      ]
     },
     {
-     "data": {
-      "text/plain": [
-       "<tensorflow.python.keras.callbacks.History at 0x7f0360d20e20>"
-      ]
-     },
-     "execution_count": 23,
-     "metadata": {},
-     "output_type": "execute_result"
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "2021-12-14 14:37:58.440055: I tensorflow/stream_executor/cuda/cuda_dnn.cc:366] Loaded cuDNN version 8300\n",
+      "2021-12-14 14:38:00.186729: I tensorflow/stream_executor/cuda/cuda_blas.cc:1774] TensorFloat-32 will be used for the matrix multiplication. This will only be logged once.\n"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "541/541 [==============================] - ETA: 0s - loss: 0.0689 - reconstruction_loss: 0.0105 - vqvae_loss: 0.0535"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "2021-12-14 14:41:00.760040: W tensorflow/core/kernels/data/cache_dataset_ops.cc:768] The calling iterator did not fully read the dataset being cached. In order to avoid unexpected truncation of the dataset, the partially cached contents of the dataset  will be discarded. This can happen if you have an input pipeline similar to `dataset.cache().take(k).repeat()`. You should use `dataset.take(k).cache().repeat()` instead.\n"
+     ]
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "541/541 [==============================] - 187s 327ms/step - loss: 0.0689 - reconstruction_loss: 0.0105 - vqvae_loss: 0.0536 - val_val_reconstruction_loss: 0.0059\n",
+      "Epoch 2/240\n",
+      "196/541 [=========>....................] - ETA: 1:44 - loss: 0.0456 - reconstruction_loss: 0.0052 - vqvae_loss: 0.0402"
+     ]
     }
    ],
    "source": [
@@ -628,7 +505,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 12,
+   "execution_count": null,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -647,17 +524,9 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 13,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "{'encoder': 'models/vqvae_celeba/vq_vae_encoder.h5', 'decoder': 'models/vqvae_celeba/vq_vae_decoder.h5', 'embeddings': 'models/vqvae_celeba/vq_vae_embeddings.npy'}\n"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "\n",
     "#model=VQVAE((28,28,1),latent_dim=16,num_embeddings=128,train_variance=4)\n",
@@ -682,7 +551,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 14,
+   "execution_count": null,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -711,17 +580,9 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 15,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stderr",
-     "output_type": "stream",
-     "text": [
-      "100%|██████████| 2165/2165 [14:10<00:00,  2.55it/s]\n"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "encoded_outputs=[]\n",
     "\n",
@@ -733,37 +594,18 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 16,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "(8, 8, 512)"
-      ]
-     },
-     "execution_count": 16,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
+   "outputs": [],
    "source": [
     "encoded_outputs[0][0].shape"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 17,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stderr",
-     "output_type": "stream",
-     "text": [
-      "100%|██████████| 2165/2165 [07:50<00:00,  4.60it/s]\n"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "codebook_indices=[]\n",
     "for b in tqdm.tqdm(range(len(train_dataset))):\n",
@@ -779,18 +621,9 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 18,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "(8866880,)\n",
-      "Shape of the training data for PixelCNN: (138545, 8, 8)\n"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "codebook_indices = list(itertools.chain.from_iterable(codebook_indices))\n",
     "codebook_indices = np.array(codebook_indices)\n",
@@ -806,213 +639,12 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 41,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Model: \"model_7\"\n",
-      "_________________________________________________________________\n",
-      "Layer (type)                 Output Shape              Param #   \n",
-      "=================================================================\n",
-      "input_8 (InputLayer)         [(None, 8, 8)]            0         \n",
-      "_________________________________________________________________\n",
-      "tf.one_hot_7 (TFOpLambda)    (None, 8, 8, 256)         0         \n",
-      "_________________________________________________________________\n",
-      "pixel_conv_layer_21 (PixelCo (None, 8, 8, 128)         1605760   \n",
-      "_________________________________________________________________\n",
-      "residual_block_19 (ResidualB (None, 8, 8, 128)         98624     \n",
-      "_________________________________________________________________\n",
-      "residual_block_20 (ResidualB (None, 8, 8, 128)         98624     \n",
-      "_________________________________________________________________\n",
-      "residual_block_21 (ResidualB (None, 8, 8, 128)         98624     \n",
-      "_________________________________________________________________\n",
-      "residual_block_22 (ResidualB (None, 8, 8, 128)         98624     \n",
-      "_________________________________________________________________\n",
-      "residual_block_23 (ResidualB (None, 8, 8, 128)         98624     \n",
-      "_________________________________________________________________\n",
-      "pixel_conv_layer_27 (PixelCo (None, 8, 8, 128)         16512     \n",
-      "_________________________________________________________________\n",
-      "pixel_conv_layer_28 (PixelCo (None, 8, 8, 128)         16512     \n",
-      "_________________________________________________________________\n",
-      "pixel_conv_layer_29 (PixelCo (None, 8, 8, 128)         16512     \n",
-      "_________________________________________________________________\n",
-      "conv2d_102 (Conv2D)          (None, 8, 8, 256)         33024     \n",
-      "=================================================================\n",
-      "Total params: 2,181,440\n",
-      "Trainable params: 2,181,440\n",
-      "Non-trainable params: 0\n",
-      "_________________________________________________________________\n",
-      "None\n"
-     ]
-    },
-    {
-     "data": {
-      "text/html": [
-       "Finishing last run (ID:luzs6oci) before initializing another..."
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<br/>Waiting for W&B process to finish, PID 1284568<br/>Program ended successfully."
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "application/vnd.jupyter.widget-view+json": {
-       "model_id": "",
-       "version_major": 2,
-       "version_minor": 0
-      },
-      "text/plain": [
-       "VBox(children=(Label(value=' 0.09MB of 0.09MB uploaded (0.00MB deduped)\\r'), FloatProgress(value=1.0, max=1.0)…"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Find user logs for this run at: <code>/home/matteo/NeuroGEN/TorVergataExperiments/Generative/wandb/run-20211129_142756-luzs6oci/logs/debug.log</code>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Find internal logs for this run at: <code>/home/matteo/NeuroGEN/TorVergataExperiments/Generative/wandb/run-20211129_142756-luzs6oci/logs/debug-internal.log</code>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<h3>Run summary:</h3><br/><style>\n",
-       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
-       "    </style><table class=\"wandb\">\n",
-       "<tr><td>epoch</td><td>2</td></tr><tr><td>loss</td><td>3.35581</td></tr><tr><td>accuracy</td><td>0.13274</td></tr><tr><td>val_loss</td><td>3.35721</td></tr><tr><td>val_accuracy</td><td>0.133</td></tr><tr><td>_runtime</td><td>144</td></tr><tr><td>_timestamp</td><td>1638192633</td></tr><tr><td>_step</td><td>2</td></tr><tr><td>best_val_loss</td><td>3.35721</td></tr><tr><td>best_epoch</td><td>2</td></tr></table>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<h3>Run history:</h3><br/><style>\n",
-       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: right }\n",
-       "    </style><table class=\"wandb\">\n",
-       "<tr><td>epoch</td><td>▁▅█</td></tr><tr><td>loss</td><td>█▃▁</td></tr><tr><td>accuracy</td><td>▁▇█</td></tr><tr><td>val_loss</td><td>█▂▁</td></tr><tr><td>val_accuracy</td><td>▁▅█</td></tr><tr><td>_runtime</td><td>▁▄█</td></tr><tr><td>_timestamp</td><td>▁▄█</td></tr><tr><td>_step</td><td>▁▅█</td></tr></table><br/>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "Synced 7 W&B file(s), 1 media file(s), 0 artifact file(s) and 1 other file(s)"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "\n",
-       "                    <br/>Synced <strong style=\"color:#cdcd00\">bright-brook-383</strong>: <a href=\"https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/luzs6oci\" target=\"_blank\">https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/luzs6oci</a><br/>\n",
-       "                "
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "...Successfully finished last run (ID:luzs6oci). Initializing new run:<br/><br/>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "\n",
-       "                Tracking run with wandb version 0.11.2<br/>\n",
-       "                Syncing run <strong style=\"color:#cdcd00\">ancient-shadow-384</strong> to <a href=\"https://wandb.ai\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-       "                Project page: <a href=\"https://wandb.ai/matteoferrante/TorVergataExperiment-Generative\" target=\"_blank\">https://wandb.ai/matteoferrante/TorVergataExperiment-Generative</a><br/>\n",
-       "                Run page: <a href=\"https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/tuf2bvqb\" target=\"_blank\">https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/tuf2bvqb</a><br/>\n",
-       "                Run data is saved locally in <code>/home/matteo/NeuroGEN/TorVergataExperiments/Generative/wandb/run-20211129_143130-tuf2bvqb</code><br/><br/>\n",
-       "            "
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/html": [
-       "<h1>Run(tuf2bvqb)</h1><iframe src=\"https://wandb.ai/matteoferrante/TorVergataExperiment-Generative/runs/tuf2bvqb\" style=\"border:none;width:100%;height:400px\"></iframe>"
-      ],
-      "text/plain": [
-       "<wandb.sdk.wandb_run.Run at 0x7f1ab4517310>"
-      ]
-     },
-     "execution_count": 41,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
+   "outputs": [],
    "source": [
-    "pixel_cnn = PixelCNN(input_dim=input_shape, n_embeddings=256, n_residual=5, n_convlayer=3)\n",
-    "opt = keras.optimizers.Adam(3e-3)\n",
+    "pixel_cnn = PixelCNN(input_dim=input_shape, n_embeddings=256, n_residual=8, n_convlayer=4)\n",
+    "opt = keras.optimizers.Adam(3e-4)\n",
     "pixel_cnn.compile(loss=keras.losses.SparseCategoricalCrossentropy(from_logits=True), optimizer=opt,metrics=\"accuracy\")\n",
     "\n",
     "wandb.init(project=\"TorVergataExperiment-Generative\",config=config)"
@@ -1020,7 +652,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 42,
+   "execution_count": null,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -1038,89 +670,9 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 43,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Epoch 1/30\n",
-      "1949/1949 [==============================] - 75s 36ms/step - loss: 3.7590 - accuracy: 0.0974 - val_loss: 3.4806 - val_accuracy: 0.1314\n"
-     ]
-    },
-    {
-     "name": "stderr",
-     "output_type": "stream",
-     "text": [
-      "\u001b[34m\u001b[1mwandb\u001b[0m: \u001b[32m\u001b[41mERROR\u001b[0m Can't save model, h5py returned error: Saving the model to HDF5 format requires the model to be a Functional model or a Sequential model. It does not work for subclassed models, because such models are defined via the body of a Python method, which isn't safely serializable. Consider saving to the Tensorflow SavedModel format (by setting save_format=\"tf\") or using `save_weights`.\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Epoch 2/30\n",
-      "1949/1949 [==============================] - 65s 33ms/step - loss: 3.4665 - accuracy: 0.1329 - val_loss: 3.4473 - val_accuracy: 0.1357\n",
-      "Epoch 3/30\n",
-      "1949/1949 [==============================] - 61s 31ms/step - loss: 3.4349 - accuracy: 0.1379 - val_loss: 3.4309 - val_accuracy: 0.1384\n",
-      "Epoch 4/30\n",
-      "1949/1949 [==============================] - 61s 31ms/step - loss: 3.4211 - accuracy: 0.1397 - val_loss: 3.4262 - val_accuracy: 0.1386\n",
-      "Epoch 5/30\n",
-      "1949/1949 [==============================] - 62s 32ms/step - loss: 3.4099 - accuracy: 0.1417 - val_loss: 3.4192 - val_accuracy: 0.1396\n",
-      "Epoch 6/30\n",
-      "1949/1949 [==============================] - 60s 31ms/step - loss: 3.4013 - accuracy: 0.1423 - val_loss: 3.4163 - val_accuracy: 0.1397\n",
-      "Epoch 7/30\n",
-      "1949/1949 [==============================] - 64s 33ms/step - loss: 3.3982 - accuracy: 0.1435 - val_loss: 3.4124 - val_accuracy: 0.1408\n",
-      "Epoch 8/30\n",
-      "1949/1949 [==============================] - 57s 29ms/step - loss: 3.3922 - accuracy: 0.1442 - val_loss: 3.4113 - val_accuracy: 0.1412\n",
-      "Epoch 9/30\n",
-      "1949/1949 [==============================] - 60s 31ms/step - loss: 3.3905 - accuracy: 0.1441 - val_loss: 3.4112 - val_accuracy: 0.1409\n",
-      "Epoch 10/30\n",
-      "1949/1949 [==============================] - 63s 32ms/step - loss: 3.3873 - accuracy: 0.1447 - val_loss: 3.4069 - val_accuracy: 0.1416\n",
-      "Epoch 11/30\n",
-      "1949/1949 [==============================] - 62s 32ms/step - loss: 3.3839 - accuracy: 0.1455 - val_loss: 3.4065 - val_accuracy: 0.1417\n",
-      "Epoch 12/30\n",
-      "1949/1949 [==============================] - 61s 31ms/step - loss: 3.3808 - accuracy: 0.1458 - val_loss: 3.4057 - val_accuracy: 0.1415\n",
-      "Epoch 13/30\n",
-      "1949/1949 [==============================] - 60s 31ms/step - loss: 3.3786 - accuracy: 0.1460 - val_loss: 3.4043 - val_accuracy: 0.1419\n",
-      "Epoch 14/30\n",
-      "1949/1949 [==============================] - 60s 31ms/step - loss: 3.3785 - accuracy: 0.1461 - val_loss: 3.4034 - val_accuracy: 0.1422\n",
-      "Epoch 15/30\n",
-      "1949/1949 [==============================] - 56s 29ms/step - loss: 3.3758 - accuracy: 0.1465 - val_loss: 3.4058 - val_accuracy: 0.1419\n",
-      "Epoch 16/30\n",
-      "1949/1949 [==============================] - 58s 30ms/step - loss: 3.3734 - accuracy: 0.1468 - val_loss: 3.4027 - val_accuracy: 0.1422\n",
-      "Epoch 17/30\n",
-      "1949/1949 [==============================] - 59s 30ms/step - loss: 3.3738 - accuracy: 0.1468 - val_loss: 3.4014 - val_accuracy: 0.1428\n",
-      "Epoch 18/30\n",
-      "1949/1949 [==============================] - 58s 30ms/step - loss: 3.3728 - accuracy: 0.1472 - val_loss: 3.4013 - val_accuracy: 0.1424\n",
-      "Epoch 19/30\n",
-      "1949/1949 [==============================] - 60s 31ms/step - loss: 3.3706 - accuracy: 0.1472 - val_loss: 3.4019 - val_accuracy: 0.1423\n",
-      "Epoch 20/30\n",
-      "1949/1949 [==============================] - 58s 30ms/step - loss: 3.3690 - accuracy: 0.1474 - val_loss: 3.4003 - val_accuracy: 0.1428\n",
-      "Epoch 21/30\n",
-      "1949/1949 [==============================] - 57s 29ms/step - loss: 3.3684 - accuracy: 0.1478 - val_loss: 3.4013 - val_accuracy: 0.1420\n",
-      "Epoch 22/30\n",
-      "1949/1949 [==============================] - 58s 30ms/step - loss: 3.3654 - accuracy: 0.1479 - val_loss: 3.3997 - val_accuracy: 0.1426\n",
-      "Epoch 23/30\n",
-      "1949/1949 [==============================] - 57s 29ms/step - loss: 3.3658 - accuracy: 0.1483 - val_loss: 3.4000 - val_accuracy: 0.1429\n",
-      "Epoch 24/30\n",
-      "1949/1949 [==============================] - 57s 29ms/step - loss: 3.3654 - accuracy: 0.1478 - val_loss: 3.3980 - val_accuracy: 0.1433\n",
-      "Epoch 25/30\n",
-      "1949/1949 [==============================] - 63s 33ms/step - loss: 3.3656 - accuracy: 0.1482 - val_loss: 3.3973 - val_accuracy: 0.1428\n",
-      "Epoch 26/30\n",
-      "1949/1949 [==============================] - 58s 30ms/step - loss: 3.3646 - accuracy: 0.1482 - val_loss: 3.4006 - val_accuracy: 0.1426\n",
-      "Epoch 27/30\n",
-      "1949/1949 [==============================] - 60s 31ms/step - loss: 3.3614 - accuracy: 0.1487 - val_loss: 3.3994 - val_accuracy: 0.1426\n",
-      "Epoch 28/30\n",
-      "1949/1949 [==============================] - 60s 31ms/step - loss: 3.3617 - accuracy: 0.1485 - val_loss: 3.3981 - val_accuracy: 0.1423\n",
-      "Epoch 29/30\n",
-      "1949/1949 [==============================] - 57s 29ms/step - loss: 3.3616 - accuracy: 0.1487 - val_loss: 3.3992 - val_accuracy: 0.1433\n",
-      "Epoch 30/30\n",
-      "1949/1949 [==============================] - 58s 30ms/step - loss: 3.3610 - accuracy: 0.1486 - val_loss: 3.3980 - val_accuracy: 0.1433\n"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "pixel_cnn_dir=\"models/vqvae_celeba/pixelcnn\"\n",
     "os.makedirs(pixel_cnn_dir,exist_ok=True)\n",
@@ -1142,17 +694,9 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 44,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "{'encoder': 'models/vqvae_celeba/vq_vae_encoder.h5', 'decoder': 'models/vqvae_celeba/vq_vae_decoder.h5', 'embeddings': 'models/vqvae_celeba/vq_vae_embeddings.npy'}\n"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "weights=map_models_weights(\"models/vqvae_celeba\")\n",
     "\n",
@@ -1165,50 +709,9 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 50,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "[CONFIG] PixelCNN models/vqvae_celeba/pixelcnn/dict.json\n",
-      "Model: \"model_8\"\n",
-      "_________________________________________________________________\n",
-      "Layer (type)                 Output Shape              Param #   \n",
-      "=================================================================\n",
-      "input_9 (InputLayer)         [(None, 8, 8)]            0         \n",
-      "_________________________________________________________________\n",
-      "tf.one_hot_8 (TFOpLambda)    (None, 8, 8, 256)         0         \n",
-      "_________________________________________________________________\n",
-      "pixel_conv_layer_30 (PixelCo (None, 8, 8, 128)         1605760   \n",
-      "_________________________________________________________________\n",
-      "residual_block_24 (ResidualB (None, 8, 8, 128)         98624     \n",
-      "_________________________________________________________________\n",
-      "residual_block_25 (ResidualB (None, 8, 8, 128)         98624     \n",
-      "_________________________________________________________________\n",
-      "residual_block_26 (ResidualB (None, 8, 8, 128)         98624     \n",
-      "_________________________________________________________________\n",
-      "residual_block_27 (ResidualB (None, 8, 8, 128)         98624     \n",
-      "_________________________________________________________________\n",
-      "residual_block_28 (ResidualB (None, 8, 8, 128)         98624     \n",
-      "_________________________________________________________________\n",
-      "pixel_conv_layer_36 (PixelCo (None, 8, 8, 128)         16512     \n",
-      "_________________________________________________________________\n",
-      "pixel_conv_layer_37 (PixelCo (None, 8, 8, 128)         16512     \n",
-      "_________________________________________________________________\n",
-      "pixel_conv_layer_38 (PixelCo (None, 8, 8, 128)         16512     \n",
-      "_________________________________________________________________\n",
-      "conv2d_122 (Conv2D)          (None, 8, 8, 256)         33024     \n",
-      "=================================================================\n",
-      "Total params: 2,181,440\n",
-      "Trainable params: 2,181,440\n",
-      "Non-trainable params: 0\n",
-      "_________________________________________________________________\n",
-      "None\n"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "pixel_cnn_dir=\"models/vqvae_celeba/pixelcnn\"\n",
     "\n",
@@ -1233,7 +736,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 55,
+   "execution_count": null,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -1249,32 +752,9 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 58,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "<matplotlib.image.AxesImage at 0x7f1a4c0d6d30>"
-      ]
-     },
-     "execution_count": 58,
-     "metadata": {},
-     "output_type": "execute_result"
-    },
-    {
-     "data": {
-      "image/png": "\n",
-      "text/plain": [
-       "<Figure size 432x288 with 1 Axes>"
-      ]
-     },
-     "metadata": {
-      "needs_background": "light"
-     },
-     "output_type": "display_data"
-    }
-   ],
+   "outputs": [],
    "source": [
     "import matplotlib.pyplot as plt\n",
     "plt.imshow(vis)"
diff --git a/Generative/container_install.ipynb b/Generative/container_install.ipynb
index 3c7e9a4..275a5a6 100644
--- a/Generative/container_install.ipynb
+++ b/Generative/container_install.ipynb
@@ -2,66 +2,1829 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 3,
-   "id": "f9ffa1e1",
+   "execution_count": 1,
+   "id": "75b44f21",
    "metadata": {},
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Requirement already satisfied: wandb in /usr/local/lib/python3.8/dist-packages (0.12.7)\n",
-      "Requirement already satisfied: subprocess32>=3.5.3 in /usr/local/lib/python3.8/dist-packages (from wandb) (3.5.4)\n",
+      "Collecting wandb\n",
+      "  Downloading wandb-0.12.7-py2.py3-none-any.whl (1.7 MB)\n",
+      "     |████████████████████████████████| 1.7 MB 3.3 MB/s            \n",
+      "\u001b[?25hCollecting yaspin>=1.0.0\n",
+      "  Downloading yaspin-2.1.0-py3-none-any.whl (18 kB)\n",
+      "Collecting GitPython>=1.0.0\n",
+      "  Downloading GitPython-3.1.24-py3-none-any.whl (180 kB)\n",
+      "     |████████████████████████████████| 180 kB 1.5 MB/s            \n",
+      "\u001b[?25hRequirement already satisfied: promise<3,>=2.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (2.3)\n",
       "Requirement already satisfied: protobuf>=3.12.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (3.17.3)\n",
-      "Requirement already satisfied: configparser>=3.8.1 in /usr/local/lib/python3.8/dist-packages (from wandb) (5.2.0)\n",
       "Requirement already satisfied: python-dateutil>=2.6.1 in /usr/local/lib/python3.8/dist-packages (from wandb) (2.8.2)\n",
-      "Requirement already satisfied: sentry-sdk>=1.0.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (1.5.1)\n",
-      "Requirement already satisfied: promise<3,>=2.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (2.3)\n",
-      "Requirement already satisfied: six>=1.13.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (1.15.0)\n",
-      "Requirement already satisfied: requests<3,>=2.0.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (2.26.0)\n",
-      "Requirement already satisfied: docker-pycreds>=0.4.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (0.4.0)\n",
-      "Requirement already satisfied: shortuuid>=0.5.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (1.0.8)\n",
-      "Requirement already satisfied: pathtools in /usr/local/lib/python3.8/dist-packages (from wandb) (0.1.2)\n",
-      "Requirement already satisfied: yaspin>=1.0.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (2.1.0)\n",
-      "Requirement already satisfied: Click!=8.0.0,>=7.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (8.0.3)\n",
       "Requirement already satisfied: PyYAML in /usr/local/lib/python3.8/dist-packages (from wandb) (6.0)\n",
+      "Requirement already satisfied: Click!=8.0.0,>=7.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (8.0.3)\n",
+      "Requirement already satisfied: requests<3,>=2.0.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (2.26.0)\n",
+      "Collecting shortuuid>=0.5.0\n",
+      "  Downloading shortuuid-1.0.8-py3-none-any.whl (9.5 kB)\n",
       "Requirement already satisfied: psutil>=5.0.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (5.7.0)\n",
-      "Requirement already satisfied: GitPython>=1.0.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (3.1.24)\n",
-      "Requirement already satisfied: gitdb<5,>=4.0.1 in /usr/local/lib/python3.8/dist-packages (from GitPython>=1.0.0->wandb) (4.0.9)\n",
+      "Collecting subprocess32>=3.5.3\n",
+      "  Downloading subprocess32-3.5.4.tar.gz (97 kB)\n",
+      "     |████████████████████████████████| 97 kB 2.9 MB/s             \n",
+      "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25ldone\n",
+      "\u001b[?25hCollecting configparser>=3.8.1\n",
+      "  Downloading configparser-5.2.0-py3-none-any.whl (19 kB)\n",
+      "Collecting docker-pycreds>=0.4.0\n",
+      "  Downloading docker_pycreds-0.4.0-py2.py3-none-any.whl (9.0 kB)\n",
+      "Collecting pathtools\n",
+      "  Downloading pathtools-0.1.2.tar.gz (11 kB)\n",
+      "  Preparing metadata (setup.py) ... \u001b[?25ldone\n",
+      "\u001b[?25hCollecting sentry-sdk>=1.0.0\n",
+      "  Downloading sentry_sdk-1.5.1-py2.py3-none-any.whl (140 kB)\n",
+      "     |████████████████████████████████| 140 kB 6.9 MB/s            \n",
+      "\u001b[?25hRequirement already satisfied: six>=1.13.0 in /usr/local/lib/python3.8/dist-packages (from wandb) (1.15.0)\n",
       "Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.8/dist-packages (from GitPython>=1.0.0->wandb) (3.7.4.3)\n",
+      "Collecting gitdb<5,>=4.0.1\n",
+      "  Downloading gitdb-4.0.9-py3-none-any.whl (63 kB)\n",
+      "     |████████████████████████████████| 63 kB 4.0 MB/s            \n",
+      "\u001b[?25hRequirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.8/dist-packages (from requests<3,>=2.0.0->wandb) (2.0.7)\n",
       "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.8/dist-packages (from requests<3,>=2.0.0->wandb) (2021.10.8)\n",
-      "Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.8/dist-packages (from requests<3,>=2.0.0->wandb) (1.26.7)\n",
       "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.8/dist-packages (from requests<3,>=2.0.0->wandb) (3.3)\n",
-      "Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.8/dist-packages (from requests<3,>=2.0.0->wandb) (2.0.7)\n",
+      "Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.8/dist-packages (from requests<3,>=2.0.0->wandb) (1.26.7)\n",
       "Requirement already satisfied: termcolor<2.0.0,>=1.1.0 in /usr/local/lib/python3.8/dist-packages (from yaspin>=1.0.0->wandb) (1.1.0)\n",
-      "Requirement already satisfied: smmap<6,>=3.0.1 in /usr/local/lib/python3.8/dist-packages (from gitdb<5,>=4.0.1->GitPython>=1.0.0->wandb) (5.0.0)\n",
+      "Collecting smmap<6,>=3.0.1\n",
+      "  Downloading smmap-5.0.0-py3-none-any.whl (24 kB)\n",
+      "Building wheels for collected packages: subprocess32, pathtools\n",
+      "  Building wheel for subprocess32 (setup.py) ... \u001b[?25ldone\n",
+      "\u001b[?25h  Created wheel for subprocess32: filename=subprocess32-3.5.4-py3-none-any.whl size=6502 sha256=56366adf52971f30fcee192b97c838300d2551c09ebc27fc2ae47a134d1290d1\n",
+      "  Stored in directory: /root/.cache/pip/wheels/9f/69/d1/50b39b308a87998eaf5c1d9095e5a5bd2ad98501e2b7936d36\n",
+      "  Building wheel for pathtools (setup.py) ... \u001b[?25ldone\n",
+      "\u001b[?25h  Created wheel for pathtools: filename=pathtools-0.1.2-py3-none-any.whl size=8807 sha256=4462358c75428337d67f4e9f8c0250d1e8134df748fee070e2818c2dff63dea9\n",
+      "  Stored in directory: /root/.cache/pip/wheels/4c/8e/7e/72fbc243e1aeecae64a96875432e70d4e92f3d2d18123be004\n",
+      "Successfully built subprocess32 pathtools\n",
+      "Installing collected packages: smmap, gitdb, yaspin, subprocess32, shortuuid, sentry-sdk, pathtools, GitPython, docker-pycreds, configparser, wandb\n",
+      "Successfully installed GitPython-3.1.24 configparser-5.2.0 docker-pycreds-0.4.0 gitdb-4.0.9 pathtools-0.1.2 sentry-sdk-1.5.1 shortuuid-1.0.8 smmap-5.0.0 subprocess32-3.5.4 wandb-0.12.7 yaspin-2.1.0\n",
       "\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\n",
-      "Hit:1 http://archive.ubuntu.com/ubuntu focal InRelease\n",
-      "Hit:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease\n",
-      "Hit:3 http://archive.ubuntu.com/ubuntu focal-backports InRelease\n",
-      "Hit:4 http://security.ubuntu.com/ubuntu focal-security InRelease\n",
+      "Get:1 http://archive.ubuntu.com/ubuntu focal InRelease [265 kB]\n",
+      "Get:2 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]        \n",
+      "Get:3 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]      \n",
+      "Get:4 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]\n",
+      "Get:5 http://archive.ubuntu.com/ubuntu focal/universe amd64 Packages [11.3 MB]\n",
+      "Get:6 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [825 kB]\n",
+      "Get:7 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1329 kB]\n",
+      "Get:8 http://archive.ubuntu.com/ubuntu focal/restricted amd64 Packages [33.4 kB]\n",
+      "Get:9 http://archive.ubuntu.com/ubuntu focal/multiverse amd64 Packages [177 kB]\n",
+      "Get:10 http://archive.ubuntu.com/ubuntu focal/main amd64 Packages [1275 kB]    \n",
+      "Get:11 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [726 kB]\n",
+      "Get:12 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [33.6 kB]\n",
+      "Get:13 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [788 kB]\n",
+      "Get:14 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1105 kB]\n",
+      "Get:15 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [30.1 kB]\n",
+      "Get:16 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1750 kB]\n",
+      "Get:17 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [21.7 kB]\n",
+      "Get:18 http://archive.ubuntu.com/ubuntu focal-backports/main amd64 Packages [50.0 kB]\n",
+      "Fetched 20.1 MB in 2s (8362 kB/s)                         \n",
       "Reading package lists... Done\n",
       "Reading package lists... Done\n",
       "Building dependency tree       \n",
       "Reading state information... Done\n",
-      "python3-opencv is already the newest version (4.2.0+dfsg-5).\n",
-      "0 upgraded, 0 newly installed, 0 to remove and 17 not upgraded.\n",
-      "Requirement already satisfied: opencv-python in /usr/local/lib/python3.8/dist-packages (4.5.4.60)\n",
-      "Requirement already satisfied: numpy>=1.17.3 in /usr/local/lib/python3.8/dist-packages (from opencv-python) (1.19.4)\n",
+      "The following additional packages will be installed:\n",
+      "  adwaita-icon-theme at-spi2-core autoconf automake autotools-dev dbus\n",
+      "  dbus-user-session dconf-gsettings-backend dconf-service dmsetup file\n",
+      "  fontconfig fontconfig-config fonts-dejavu-core gdal-data gir1.2-glib-2.0\n",
+      "  glib-networking glib-networking-common glib-networking-services\n",
+      "  gsettings-desktop-schemas gstreamer1.0-plugins-base gtk-update-icon-cache\n",
+      "  hicolor-icon-theme humanity-icon-theme i965-va-driver intel-media-va-driver\n",
+      "  iso-codes libaacs0 libaom0 libapparmor1 libargon2-1 libarmadillo9 libarpack2\n",
+      "  libatk-bridge2.0-0 libatk1.0-0 libatk1.0-data libatspi2.0-0 libavahi-client3\n",
+      "  libavahi-common-data libavahi-common3 libavcodec58 libavformat58 libavutil56\n",
+      "  libbdplus0 libbluray2 libcaf-openmpi-3 libcairo-gobject2 libcairo2 libcap2\n",
+      "  libcap2-bin libcdparanoia0 libcfitsio8 libcharls2 libchromaprint1\n",
+      "  libcoarrays-dev libcoarrays-openmpi-dev libcodec2-0.9 libcolord2\n",
+      "  libcryptsetup12 libcups2 libdap25 libdapclient6v5 libdatrie1 libdbus-1-3\n",
+      "  libdc1394-22 libdconf1 libdevmapper1.02.1 libdrm-amdgpu1 libdrm-common\n",
+      "  libdrm-intel1 libdrm-nouveau2 libdrm-radeon1 libdrm2 libelf1 libepoxy0\n",
+      "  libepsilon1 libevent-2.1-7 libevent-core-2.1-7 libevent-dev\n",
+      "  libevent-extra-2.1-7 libevent-openssl-2.1-7 libevent-pthreads-2.1-7\n",
+      "  libfabric1 libfontconfig1 libfreetype6 libfreexl1 libfribidi0 libfyba0\n",
+      "  libgdal26 libgdcm3.0 libgdk-pixbuf2.0-0 libgdk-pixbuf2.0-bin\n",
+      "  libgdk-pixbuf2.0-common libgeos-3.8.0 libgeos-c1v5 libgeotiff5 libgif7\n",
+      "  libgirepository-1.0-1 libgl1 libgl1-mesa-dri libgl2ps1.4 libglapi-mesa\n",
+      "  libglvnd0 libglx-mesa0 libglx0 libgme0 libgraphite2-3 libgsm1\n",
+      "  libgstreamer-plugins-base1.0-0 libgstreamer1.0-0 libgtk-3-0 libgtk-3-bin\n",
+      "  libgtk-3-common libharfbuzz0b libhdf4-0-alt libhdf5-openmpi-103 libhwloc-dev\n",
+      "  libhwloc-plugins libhwloc15 libice6 libigdgmm11 libilmbase24 libip4tc2\n",
+      "  libjbig0 libjson-c4 libjson-glib-1.0-0 libjson-glib-1.0-common libkmlbase1\n",
+      "  libkmldom1 libkmlengine1 libkmod2 liblcms2-2 liblept5 libllvm12 libltdl-dev\n",
+      "  libmagic-mgc libmagic1 libminizip1 libmp3lame0 libmpg123-0 libmysqlclient21\n",
+      "  libnetcdf-c++4 libnetcdf15 libnspr4 libnss-systemd libnss3 libodbc1\n",
+      "  libogdi4.1 libopencv-calib3d4.2 libopencv-contrib4.2 libopencv-core4.2\n",
+      "  libopencv-dnn4.2 libopencv-features2d4.2 libopencv-flann4.2\n",
+      "  libopencv-highgui4.2 libopencv-imgcodecs4.2 libopencv-imgproc4.2\n",
+      "  libopencv-ml4.2 libopencv-objdetect4.2 libopencv-photo4.2 libopencv-shape4.2\n",
+      "  libopencv-stitching4.2 libopencv-superres4.2 libopencv-video4.2\n",
+      "  libopencv-videoio4.2 libopencv-videostab4.2 libopencv-viz4.2 libopenexr24\n",
+      "  libopenjp2-7 libopenmpi-dev libopenmpi3 libopenmpt0 libopus0 liborc-0.4-0\n",
+      "  libpam-cap libpam-systemd libpango-1.0-0 libpangocairo-1.0-0\n",
+      "  libpangoft2-1.0-0 libpciaccess0 libpixman-1-0 libpmix2 libpng16-16\n",
+      "  libpoppler97 libpq5 libproj15 libprotobuf17 libproxy1v5 libpsm-infinipath1\n",
+      "  libpsm2-2 libqhull7 libraw1394-11 librest-0.7-0 librsvg2-2 librsvg2-common\n",
+      "  libsensors-config libsensors5 libshine3 libsigsegv2 libsm6 libsnappy1v5\n",
+      "  libsocket++1 libsoup-gnome2.4-1 libsoup2.4-1 libsoxr0 libspatialite7\n",
+      "  libspeex1 libssh-gcrypt-4 libsuperlu5 libswresample3 libswscale5 libtbb2\n",
+      "  libtesseract4 libthai-data libthai0 libtheora0 libtiff5 libtool libtwolame0\n",
+      "  liburiparser1 libusb-1.0-0 libva-drm2 libva-x11-2 libva2 libvdpau1\n",
+      "  libvisual-0.4-0 libvorbisenc2 libvpx6 libvtk6.3 libvulkan1 libwavpack1\n",
+      "  libwayland-client0 libwayland-cursor0 libwayland-egl1 libwebp6 libwebpmux3\n",
+      "  libx11-6 libx11-data libx11-xcb1 libx264-155 libx265-179 libxau6\n",
+      "  libxcb-dri2-0 libxcb-dri3-0 libxcb-glx0 libxcb-present0 libxcb-randr0\n",
+      "  libxcb-render0 libxcb-shm0 libxcb-sync1 libxcb-xfixes0 libxcb1\n",
+      "  libxcomposite1 libxcursor1 libxdamage1 libxdmcp6 libxerces-c3.2 libxext6\n",
+      "  libxfixes3 libxi6 libxinerama1 libxkbcommon0 libxnvctrl0 libxrandr2\n",
+      "  libxrender1 libxshmfence1 libxt6 libxtst6 libxvidcore4 libxxf86vm1\n",
+      "  libzvbi-common libzvbi0 m4 mesa-va-drivers mesa-vdpau-drivers\n",
+      "  mesa-vulkan-drivers mysql-common networkd-dispatcher ocl-icd-libopencl1\n",
+      "  odbcinst odbcinst1debian2 openmpi-bin openmpi-common poppler-data proj-bin\n",
+      "  proj-data python3-dbus python3-gi python3-numpy python3-pkg-resources\n",
+      "  shared-mime-info systemd systemd-sysv systemd-timesyncd ubuntu-mono ucf\n",
+      "  va-driver-all vdpau-driver-all x11-common xkb-data\n",
+      "Suggested packages:\n",
+      "  autoconf-archive gnu-standards autoconf-doc gettext gvfs\n",
+      "  i965-va-driver-shaders isoquery libbluray-bdj colord cups-common geotiff-bin\n",
+      "  gdal-bin libgeotiff-epsg libvisual-0.4-plugins gstreamer1.0-tools\n",
+      "  libhdf4-doc libhdf4-alt-dev hdf4-tools libhwloc-contrib-plugins\n",
+      "  liblcms2-utils libtool-doc libmyodbc odbc-postgresql tdsodbc unixodbc-bin\n",
+      "  ogdi-bin openmpi-doc opus-tools pciutils libraw1394-doc librsvg2-bin\n",
+      "  lm-sensors speex gcj-jdk mpi-default-bin m4-doc iw | wireless-tools\n",
+      "  opencl-icd poppler-utils ghostscript fonts-japanese-mincho\n",
+      "  | fonts-ipafont-mincho fonts-japanese-gothic | fonts-ipafont-gothic\n",
+      "  fonts-arphic-ukai fonts-arphic-uming fonts-nanum python-dbus-doc\n",
+      "  python3-dbus-dbg python-numpy-doc python3-pytest python3-numpy-dbg\n",
+      "  python3-setuptools systemd-container policykit-1 libvdpau-va-gl1\n",
+      "  nvidia-vdpau-driver nvidia-legacy-340xx-vdpau-driver\n",
+      "  nvidia-legacy-304xx-vdpau-driver\n",
+      "The following NEW packages will be installed:\n",
+      "  adwaita-icon-theme at-spi2-core autoconf automake autotools-dev dbus\n",
+      "  dbus-user-session dconf-gsettings-backend dconf-service dmsetup file\n",
+      "  fontconfig fontconfig-config fonts-dejavu-core gdal-data gir1.2-glib-2.0\n",
+      "  glib-networking glib-networking-common glib-networking-services\n",
+      "  gsettings-desktop-schemas gstreamer1.0-plugins-base gtk-update-icon-cache\n",
+      "  hicolor-icon-theme humanity-icon-theme i965-va-driver intel-media-va-driver\n",
+      "  iso-codes libaacs0 libaom0 libapparmor1 libargon2-1 libarmadillo9 libarpack2\n",
+      "  libatk-bridge2.0-0 libatk1.0-0 libatk1.0-data libatspi2.0-0 libavahi-client3\n",
+      "  libavahi-common-data libavahi-common3 libavcodec58 libavformat58 libavutil56\n",
+      "  libbdplus0 libbluray2 libcaf-openmpi-3 libcairo-gobject2 libcairo2 libcap2\n",
+      "  libcap2-bin libcdparanoia0 libcfitsio8 libcharls2 libchromaprint1\n",
+      "  libcoarrays-dev libcoarrays-openmpi-dev libcodec2-0.9 libcolord2\n",
+      "  libcryptsetup12 libcups2 libdap25 libdapclient6v5 libdatrie1 libdbus-1-3\n",
+      "  libdc1394-22 libdconf1 libdevmapper1.02.1 libdrm-amdgpu1 libdrm-common\n",
+      "  libdrm-intel1 libdrm-nouveau2 libdrm-radeon1 libdrm2 libelf1 libepoxy0\n",
+      "  libepsilon1 libevent-2.1-7 libevent-core-2.1-7 libevent-dev\n",
+      "  libevent-extra-2.1-7 libevent-openssl-2.1-7 libevent-pthreads-2.1-7\n",
+      "  libfabric1 libfontconfig1 libfreetype6 libfreexl1 libfribidi0 libfyba0\n",
+      "  libgdal26 libgdcm3.0 libgdk-pixbuf2.0-0 libgdk-pixbuf2.0-bin\n",
+      "  libgdk-pixbuf2.0-common libgeos-3.8.0 libgeos-c1v5 libgeotiff5 libgif7\n",
+      "  libgirepository-1.0-1 libgl1 libgl1-mesa-dri libgl2ps1.4 libglapi-mesa\n",
+      "  libglvnd0 libglx-mesa0 libglx0 libgme0 libgraphite2-3 libgsm1\n",
+      "  libgstreamer-plugins-base1.0-0 libgstreamer1.0-0 libgtk-3-0 libgtk-3-bin\n",
+      "  libgtk-3-common libharfbuzz0b libhdf4-0-alt libhdf5-openmpi-103 libhwloc-dev\n",
+      "  libhwloc-plugins libhwloc15 libice6 libigdgmm11 libilmbase24 libip4tc2\n",
+      "  libjbig0 libjson-c4 libjson-glib-1.0-0 libjson-glib-1.0-common libkmlbase1\n",
+      "  libkmldom1 libkmlengine1 libkmod2 liblcms2-2 liblept5 libllvm12 libltdl-dev\n",
+      "  libmagic-mgc libmagic1 libminizip1 libmp3lame0 libmpg123-0 libmysqlclient21\n",
+      "  libnetcdf-c++4 libnetcdf15 libnspr4 libnss-systemd libnss3 libodbc1\n",
+      "  libogdi4.1 libopencv-calib3d4.2 libopencv-contrib4.2 libopencv-core4.2\n",
+      "  libopencv-dnn4.2 libopencv-features2d4.2 libopencv-flann4.2\n",
+      "  libopencv-highgui4.2 libopencv-imgcodecs4.2 libopencv-imgproc4.2\n",
+      "  libopencv-ml4.2 libopencv-objdetect4.2 libopencv-photo4.2 libopencv-shape4.2\n",
+      "  libopencv-stitching4.2 libopencv-superres4.2 libopencv-video4.2\n",
+      "  libopencv-videoio4.2 libopencv-videostab4.2 libopencv-viz4.2 libopenexr24\n",
+      "  libopenjp2-7 libopenmpi-dev libopenmpi3 libopenmpt0 libopus0 liborc-0.4-0\n",
+      "  libpam-cap libpam-systemd libpango-1.0-0 libpangocairo-1.0-0\n",
+      "  libpangoft2-1.0-0 libpciaccess0 libpixman-1-0 libpmix2 libpng16-16\n",
+      "  libpoppler97 libpq5 libproj15 libprotobuf17 libproxy1v5 libpsm-infinipath1\n",
+      "  libpsm2-2 libqhull7 libraw1394-11 librest-0.7-0 librsvg2-2 librsvg2-common\n",
+      "  libsensors-config libsensors5 libshine3 libsigsegv2 libsm6 libsnappy1v5\n",
+      "  libsocket++1 libsoup-gnome2.4-1 libsoup2.4-1 libsoxr0 libspatialite7\n",
+      "  libspeex1 libssh-gcrypt-4 libsuperlu5 libswresample3 libswscale5 libtbb2\n",
+      "  libtesseract4 libthai-data libthai0 libtheora0 libtiff5 libtool libtwolame0\n",
+      "  liburiparser1 libusb-1.0-0 libva-drm2 libva-x11-2 libva2 libvdpau1\n",
+      "  libvisual-0.4-0 libvorbisenc2 libvpx6 libvtk6.3 libvulkan1 libwavpack1\n",
+      "  libwayland-client0 libwayland-cursor0 libwayland-egl1 libwebp6 libwebpmux3\n",
+      "  libx11-6 libx11-data libx11-xcb1 libx264-155 libx265-179 libxau6\n",
+      "  libxcb-dri2-0 libxcb-dri3-0 libxcb-glx0 libxcb-present0 libxcb-randr0\n",
+      "  libxcb-render0 libxcb-shm0 libxcb-sync1 libxcb-xfixes0 libxcb1\n",
+      "  libxcomposite1 libxcursor1 libxdamage1 libxdmcp6 libxerces-c3.2 libxext6\n",
+      "  libxfixes3 libxi6 libxinerama1 libxkbcommon0 libxnvctrl0 libxrandr2\n",
+      "  libxrender1 libxshmfence1 libxt6 libxtst6 libxvidcore4 libxxf86vm1\n",
+      "  libzvbi-common libzvbi0 m4 mesa-va-drivers mesa-vdpau-drivers\n",
+      "  mesa-vulkan-drivers mysql-common networkd-dispatcher ocl-icd-libopencl1\n",
+      "  odbcinst odbcinst1debian2 openmpi-bin openmpi-common poppler-data proj-bin\n",
+      "  proj-data python3-dbus python3-gi python3-numpy python3-opencv\n",
+      "  python3-pkg-resources shared-mime-info systemd systemd-sysv\n",
+      "  systemd-timesyncd ubuntu-mono ucf va-driver-all vdpau-driver-all x11-common\n",
+      "  xkb-data\n",
+      "0 upgraded, 301 newly installed, 0 to remove and 17 not upgraded.\n",
+      "Need to get 163 MB of archives.\n",
+      "After this operation, 1053 MB of additional disk space will be used.\n",
+      "Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libapparmor1 amd64 2.13.3-7ubuntu5.1 [34.1 kB]\n",
+      "Get:2 http://archive.ubuntu.com/ubuntu focal/main amd64 libcap2 amd64 1:2.32-1 [15.9 kB]\n",
+      "Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 libargon2-1 amd64 0~20171227-0.2 [19.2 kB]\n",
+      "Get:4 http://archive.ubuntu.com/ubuntu focal/main amd64 libdevmapper1.02.1 amd64 2:1.02.167-1ubuntu1 [127 kB]\n",
+      "Get:5 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libjson-c4 amd64 0.13.1+dfsg-7ubuntu0.3 [29.3 kB]\n",
+      "Get:6 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libcryptsetup12 amd64 2:2.2.2-3ubuntu2.3 [183 kB]\n",
+      "Get:7 http://archive.ubuntu.com/ubuntu focal/main amd64 libip4tc2 amd64 1.8.4-3ubuntu2 [18.8 kB]\n",
+      "Get:8 http://archive.ubuntu.com/ubuntu focal/main amd64 libkmod2 amd64 27-1ubuntu2 [44.3 kB]\n",
+      "Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 systemd-timesyncd amd64 245.4-4ubuntu3.13 [28.1 kB]\n",
+      "Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 systemd amd64 245.4-4ubuntu3.13 [3809 kB]\n",
+      "Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 systemd-sysv amd64 245.4-4ubuntu3.13 [10.3 kB]\n",
+      "Get:12 http://archive.ubuntu.com/ubuntu focal/main amd64 poppler-data all 0.4.9-2 [1475 kB]\n",
+      "Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libdbus-1-3 amd64 1.12.16-2ubuntu2.1 [179 kB]\n",
+      "Get:14 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 dbus amd64 1.12.16-2ubuntu2.1 [151 kB]\n",
+      "Get:15 http://archive.ubuntu.com/ubuntu focal/main amd64 dmsetup amd64 2:1.02.167-1ubuntu1 [75.6 kB]\n",
+      "Get:16 http://archive.ubuntu.com/ubuntu focal/main amd64 libmagic-mgc amd64 1:5.38-4 [218 kB]\n",
+      "Get:17 http://archive.ubuntu.com/ubuntu focal/main amd64 libmagic1 amd64 1:5.38-4 [75.9 kB]\n",
+      "Get:18 http://archive.ubuntu.com/ubuntu focal/main amd64 file amd64 1:5.38-4 [23.3 kB]\n",
+      "Get:19 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgirepository-1.0-1 amd64 1.64.1-1~ubuntu20.04.1 [85.7 kB]\n",
+      "Get:20 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 gir1.2-glib-2.0 amd64 1.64.1-1~ubuntu20.04.1 [134 kB]\n",
+      "Get:21 http://archive.ubuntu.com/ubuntu focal/main amd64 libcap2-bin amd64 1:2.32-1 [26.2 kB]\n",
+      "Get:22 http://archive.ubuntu.com/ubuntu focal/main amd64 libelf1 amd64 0.176-1.1build1 [44.0 kB]\n",
+      "Get:23 http://archive.ubuntu.com/ubuntu focal/main amd64 libfribidi0 amd64 1.0.8-2 [23.8 kB]\n",
+      "Get:24 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libnss-systemd amd64 245.4-4ubuntu3.13 [95.8 kB]\n",
+      "Get:25 http://archive.ubuntu.com/ubuntu focal/main amd64 libpam-cap amd64 1:2.32-1 [8352 B]\n",
+      "Get:26 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libpam-systemd amd64 245.4-4ubuntu3.13 [186 kB]\n",
+      "Get:27 http://archive.ubuntu.com/ubuntu focal/main amd64 python3-dbus amd64 1.2.16-1build1 [94.0 kB]\n",
+      "Get:28 http://archive.ubuntu.com/ubuntu focal/main amd64 python3-gi amd64 3.36.0-1 [165 kB]\n",
+      "Get:29 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 networkd-dispatcher all 2.1-2~ubuntu20.04.1 [14.6 kB]\n",
+      "Get:30 http://archive.ubuntu.com/ubuntu focal/main amd64 python3-pkg-resources all 45.2.0-1 [130 kB]\n",
+      "Get:31 http://archive.ubuntu.com/ubuntu focal/main amd64 shared-mime-info amd64 1.15-1 [430 kB]\n",
+      "Get:32 http://archive.ubuntu.com/ubuntu focal/main amd64 ucf all 3.0038+nmu1 [51.6 kB]\n",
+      "Get:33 http://archive.ubuntu.com/ubuntu focal/main amd64 xkb-data all 2.29-2 [349 kB]\n",
+      "Get:34 http://archive.ubuntu.com/ubuntu focal/main amd64 iso-codes all 4.4-1 [2695 kB]\n",
+      "Get:35 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libdrm-common all 2.4.105-3~20.04.2 [5552 B]\n",
+      "Get:36 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libdrm2 amd64 2.4.105-3~20.04.2 [32.3 kB]\n",
+      "Get:37 http://archive.ubuntu.com/ubuntu focal/main amd64 libpng16-16 amd64 1.6.37-2 [179 kB]\n",
+      "Get:38 http://archive.ubuntu.com/ubuntu focal/main amd64 libusb-1.0-0 amd64 2:1.0.23-2build1 [46.5 kB]\n",
+      "Get:39 http://archive.ubuntu.com/ubuntu focal/main amd64 libxau6 amd64 1:1.0.9-0ubuntu1 [7488 B]\n",
+      "Get:40 http://archive.ubuntu.com/ubuntu focal/main amd64 libxdmcp6 amd64 1:1.1.3-0ubuntu1 [10.6 kB]\n",
+      "Get:41 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcb1 amd64 1.14-2 [44.7 kB]\n",
+      "Get:42 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libx11-data all 2:1.6.9-2ubuntu1.2 [113 kB]\n",
+      "Get:43 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libx11-6 amd64 2:1.6.9-2ubuntu1.2 [575 kB]\n",
+      "Get:44 http://archive.ubuntu.com/ubuntu focal/main amd64 libxext6 amd64 2:1.3.4-0ubuntu1 [29.1 kB]\n",
+      "Get:45 http://archive.ubuntu.com/ubuntu focal/main amd64 hicolor-icon-theme all 0.17-2 [9976 B]\n",
+      "Get:46 http://archive.ubuntu.com/ubuntu focal/main amd64 libjbig0 amd64 2.1-3.1build1 [26.7 kB]\n",
+      "Get:47 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libwebp6 amd64 0.6.1-2ubuntu0.20.04.1 [185 kB]\n",
+      "Get:48 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libtiff5 amd64 4.1.0+git191117-2ubuntu0.20.04.2 [162 kB]\n",
+      "Get:49 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgdk-pixbuf2.0-common all 2.40.0+dfsg-3ubuntu0.2 [4652 B]\n",
+      "Get:50 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgdk-pixbuf2.0-0 amd64 2.40.0+dfsg-3ubuntu0.2 [168 kB]\n",
+      "Get:51 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 gtk-update-icon-cache amd64 3.24.20-0ubuntu1 [28.9 kB]\n",
+      "Get:52 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libfreetype6 amd64 2.10.1-2ubuntu0.1 [341 kB]\n",
+      "Get:53 http://archive.ubuntu.com/ubuntu focal/main amd64 fonts-dejavu-core all 2.37-1 [1041 kB]\n",
+      "Get:54 http://archive.ubuntu.com/ubuntu focal/main amd64 fontconfig-config all 2.13.1-2ubuntu3 [28.8 kB]\n",
+      "Get:55 http://archive.ubuntu.com/ubuntu focal/main amd64 libfontconfig1 amd64 2.13.1-2ubuntu3 [114 kB]\n",
+      "Get:56 http://archive.ubuntu.com/ubuntu focal/main amd64 libpixman-1-0 amd64 0.38.4-0ubuntu1 [227 kB]\n",
+      "Get:57 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcb-render0 amd64 1.14-2 [14.8 kB]\n",
+      "Get:58 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcb-shm0 amd64 1.14-2 [5584 B]\n",
+      "Get:59 http://archive.ubuntu.com/ubuntu focal/main amd64 libxrender1 amd64 1:0.9.10-1 [18.7 kB]\n",
+      "Get:60 http://archive.ubuntu.com/ubuntu focal/main amd64 libcairo2 amd64 1.16.0-4ubuntu1 [583 kB]\n",
+      "Get:61 http://archive.ubuntu.com/ubuntu focal/main amd64 libcairo-gobject2 amd64 1.16.0-4ubuntu1 [17.2 kB]\n",
+      "Get:62 http://archive.ubuntu.com/ubuntu focal/main amd64 fontconfig amd64 2.13.1-2ubuntu3 [171 kB]\n",
+      "Get:63 http://archive.ubuntu.com/ubuntu focal/main amd64 libgraphite2-3 amd64 1.3.13-11build1 [73.5 kB]\n",
+      "Get:64 http://archive.ubuntu.com/ubuntu focal/main amd64 libharfbuzz0b amd64 2.6.4-1ubuntu4 [391 kB]\n",
+      "Get:65 http://archive.ubuntu.com/ubuntu focal/main amd64 libthai-data all 0.1.28-3 [134 kB]\n",
+      "Get:66 http://archive.ubuntu.com/ubuntu focal/main amd64 libdatrie1 amd64 0.2.12-3 [18.7 kB]\n",
+      "Get:67 http://archive.ubuntu.com/ubuntu focal/main amd64 libthai0 amd64 0.1.28-3 [18.1 kB]\n",
+      "Get:68 http://archive.ubuntu.com/ubuntu focal/main amd64 libpango-1.0-0 amd64 1.44.7-2ubuntu4 [162 kB]\n",
+      "Get:69 http://archive.ubuntu.com/ubuntu focal/main amd64 libpangoft2-1.0-0 amd64 1.44.7-2ubuntu4 [34.9 kB]\n",
+      "Get:70 http://archive.ubuntu.com/ubuntu focal/main amd64 libpangocairo-1.0-0 amd64 1.44.7-2ubuntu4 [24.8 kB]\n",
+      "Get:71 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 librsvg2-2 amd64 2.48.9-1ubuntu0.20.04.1 [2253 kB]\n",
+      "Get:72 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 librsvg2-common amd64 2.48.9-1ubuntu0.20.04.1 [9212 B]\n",
+      "Get:73 http://archive.ubuntu.com/ubuntu focal/main amd64 humanity-icon-theme all 0.6.15 [1250 kB]\n",
+      "Get:74 http://archive.ubuntu.com/ubuntu focal/main amd64 ubuntu-mono all 19.04-0ubuntu3 [147 kB]\n",
+      "Get:75 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 adwaita-icon-theme all 3.36.1-2ubuntu0.20.04.2 [3441 kB]\n",
+      "Get:76 http://archive.ubuntu.com/ubuntu focal/main amd64 libatspi2.0-0 amd64 2.36.0-2 [64.2 kB]\n",
+      "Get:77 http://archive.ubuntu.com/ubuntu focal/main amd64 x11-common all 1:7.7+19ubuntu14 [22.3 kB]\n",
+      "Get:78 http://archive.ubuntu.com/ubuntu focal/main amd64 libxtst6 amd64 2:1.2.3-1 [12.8 kB]\n",
+      "Get:79 http://archive.ubuntu.com/ubuntu focal/main amd64 at-spi2-core amd64 2.36.0-2 [48.7 kB]\n",
+      "Get:80 http://archive.ubuntu.com/ubuntu focal/main amd64 libsigsegv2 amd64 2.12-2 [13.9 kB]\n",
+      "Get:81 http://archive.ubuntu.com/ubuntu focal/main amd64 m4 amd64 1.4.18-4 [199 kB]\n",
+      "Get:82 http://archive.ubuntu.com/ubuntu focal/main amd64 autoconf all 2.69-11.1 [321 kB]\n",
+      "Get:83 http://archive.ubuntu.com/ubuntu focal/main amd64 autotools-dev all 20180224.1 [39.6 kB]\n",
+      "Get:84 http://archive.ubuntu.com/ubuntu focal/main amd64 automake all 1:1.16.1-4ubuntu6 [522 kB]\n",
+      "Get:85 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 dbus-user-session amd64 1.12.16-2ubuntu2.1 [9428 B]\n",
+      "Get:86 http://archive.ubuntu.com/ubuntu focal/main amd64 libdconf1 amd64 0.36.0-1 [37.4 kB]\n",
+      "Get:87 http://archive.ubuntu.com/ubuntu focal/main amd64 dconf-service amd64 0.36.0-1 [29.8 kB]\n",
+      "Get:88 http://archive.ubuntu.com/ubuntu focal/main amd64 dconf-gsettings-backend amd64 0.36.0-1 [22.5 kB]\n",
+      "Get:89 http://archive.ubuntu.com/ubuntu focal/universe amd64 gdal-data all 3.0.4+dfsg-1build3 [186 kB]\n",
+      "Get:90 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libproxy1v5 amd64 0.4.15-10ubuntu1.2 [49.1 kB]\n",
+      "Get:91 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 glib-networking-common all 2.64.2-1ubuntu0.1 [5040 B]\n",
+      "Get:92 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 glib-networking-services amd64 2.64.2-1ubuntu0.1 [10.6 kB]\n",
+      "Get:93 http://archive.ubuntu.com/ubuntu focal/main amd64 gsettings-desktop-schemas all 3.36.0-1ubuntu1 [29.0 kB]\n",
+      "Get:94 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 glib-networking amd64 2.64.2-1ubuntu0.1 [58.2 kB]\n",
+      "Get:95 http://archive.ubuntu.com/ubuntu focal/main amd64 libcdparanoia0 amd64 3.10.2+debian-13 [46.7 kB]\n",
+      "Get:96 http://archive.ubuntu.com/ubuntu focal/main amd64 libgstreamer1.0-0 amd64 1.16.2-2 [890 kB]\n",
+      "Get:97 http://archive.ubuntu.com/ubuntu focal/main amd64 liborc-0.4-0 amd64 1:0.4.31-1 [188 kB]\n",
+      "Get:98 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgstreamer-plugins-base1.0-0 amd64 1.16.2-4ubuntu0.1 [735 kB]\n",
+      "Get:99 http://archive.ubuntu.com/ubuntu focal/main amd64 libopus0 amd64 1.3.1-0ubuntu1 [191 kB]\n",
+      "Get:100 http://archive.ubuntu.com/ubuntu focal/main amd64 libtheora0 amd64 1.1.1+dfsg.1-15ubuntu2 [162 kB]\n",
+      "Get:101 http://archive.ubuntu.com/ubuntu focal/main amd64 libvisual-0.4-0 amd64 0.4.0-17 [99.8 kB]\n",
+      "Get:102 http://archive.ubuntu.com/ubuntu focal/main amd64 libvorbisenc2 amd64 1.3.6-2ubuntu1 [70.7 kB]\n",
+      "Get:103 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 gstreamer1.0-plugins-base amd64 1.16.2-4ubuntu0.1 [620 kB]\n",
+      "Get:104 http://archive.ubuntu.com/ubuntu focal/universe amd64 libva2 amd64 2.7.0-2 [53.5 kB]\n",
+      "Get:105 http://archive.ubuntu.com/ubuntu focal/universe amd64 libigdgmm11 amd64 20.1.1+ds1-1 [111 kB]\n",
+      "Get:106 http://archive.ubuntu.com/ubuntu focal/main amd64 libpciaccess0 amd64 0.16-0ubuntu1 [17.9 kB]\n",
+      "Get:107 http://archive.ubuntu.com/ubuntu focal/universe amd64 intel-media-va-driver amd64 20.1.1+dfsg1-1 [1764 kB]\n",
+      "Get:108 http://archive.ubuntu.com/ubuntu focal/universe amd64 libaacs0 amd64 0.9.0-2 [50.1 kB]\n",
+      "Get:109 http://archive.ubuntu.com/ubuntu focal/universe amd64 libaom0 amd64 1.0.0.errata1-3build1 [1160 kB]\n",
+      "Get:110 http://archive.ubuntu.com/ubuntu focal/universe amd64 libarpack2 amd64 3.7.0-3 [92.8 kB]\n",
+      "Get:111 http://archive.ubuntu.com/ubuntu focal/universe amd64 libsuperlu5 amd64 5.2.1+dfsg1-4 [159 kB]\n",
+      "Get:112 http://archive.ubuntu.com/ubuntu focal/universe amd64 libarmadillo9 amd64 1:9.800.4+dfsg-1build1 [93.2 kB]\n",
+      "Get:113 http://archive.ubuntu.com/ubuntu focal/main amd64 libatk1.0-data all 2.35.1-1ubuntu2 [2964 B]\n",
+      "Get:114 http://archive.ubuntu.com/ubuntu focal/main amd64 libatk1.0-0 amd64 2.35.1-1ubuntu2 [45.5 kB]\n",
+      "Get:115 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libatk-bridge2.0-0 amd64 2.34.2-0ubuntu2~20.04.1 [58.2 kB]\n",
+      "Get:116 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libavahi-common-data amd64 0.7-4ubuntu7.1 [21.4 kB]\n",
+      "Get:117 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libavahi-common3 amd64 0.7-4ubuntu7.1 [21.7 kB]\n",
+      "Get:118 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libavahi-client3 amd64 0.7-4ubuntu7.1 [25.5 kB]\n",
+      "Get:119 http://archive.ubuntu.com/ubuntu focal/universe amd64 libva-drm2 amd64 2.7.0-2 [7044 B]\n",
+      "Get:120 http://archive.ubuntu.com/ubuntu focal/main amd64 libxfixes3 amd64 1:5.0.3-2 [10.9 kB]\n",
+      "Get:121 http://archive.ubuntu.com/ubuntu focal/universe amd64 libva-x11-2 amd64 2.7.0-2 [11.9 kB]\n",
+      "Get:122 http://archive.ubuntu.com/ubuntu focal/main amd64 libvdpau1 amd64 1.3-1ubuntu2 [25.6 kB]\n",
+      "Get:123 http://archive.ubuntu.com/ubuntu focal/main amd64 ocl-icd-libopencl1 amd64 2.2.11-1ubuntu1 [30.3 kB]\n",
+      "Get:124 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 libavutil56 amd64 7:4.2.4-1ubuntu0.1 [241 kB]\n",
+      "Get:125 http://archive.ubuntu.com/ubuntu focal/universe amd64 libcodec2-0.9 amd64 0.9.2-2 [7886 kB]\n",
+      "Get:126 http://archive.ubuntu.com/ubuntu focal/universe amd64 libgsm1 amd64 1.0.18-2 [24.4 kB]\n",
+      "Get:127 http://archive.ubuntu.com/ubuntu focal/main amd64 libmp3lame0 amd64 3.100-3 [133 kB]\n",
+      "Get:128 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libopenjp2-7 amd64 2.3.1-1ubuntu4.20.04.1 [141 kB]\n",
+      "Get:129 http://archive.ubuntu.com/ubuntu focal/universe amd64 libshine3 amd64 3.1.1-2 [23.2 kB]\n",
+      "Get:130 http://archive.ubuntu.com/ubuntu focal/main amd64 libsnappy1v5 amd64 1.1.8-1build1 [16.7 kB]\n",
+      "Get:131 http://archive.ubuntu.com/ubuntu focal/main amd64 libspeex1 amd64 1.2~rc1.2-1.1ubuntu1 [53.2 kB]\n",
+      "Get:132 http://archive.ubuntu.com/ubuntu focal/main amd64 libsoxr0 amd64 0.1.3-2build1 [78.0 kB]\n",
+      "Get:133 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 libswresample3 amd64 7:4.2.4-1ubuntu0.1 [57.1 kB]\n",
+      "Get:134 http://archive.ubuntu.com/ubuntu focal/main amd64 libtwolame0 amd64 0.4.0-2 [47.6 kB]\n",
+      "Get:135 http://archive.ubuntu.com/ubuntu focal/main amd64 libvpx6 amd64 1.8.2-1build1 [820 kB]\n",
+      "Get:136 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libwavpack1 amd64 5.2.0-1ubuntu0.1 [77.3 kB]\n",
+      "Get:137 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libwebpmux3 amd64 0.6.1-2ubuntu0.20.04.1 [19.5 kB]\n",
+      "Get:138 http://archive.ubuntu.com/ubuntu focal/universe amd64 libx264-155 amd64 2:0.155.2917+git0a84d98-2 [521 kB]\n",
+      "Get:139 http://archive.ubuntu.com/ubuntu focal/universe amd64 libx265-179 amd64 3.2.1-1build1 [1060 kB]\n",
+      "Get:140 http://archive.ubuntu.com/ubuntu focal/universe amd64 libxvidcore4 amd64 2:1.3.7-1 [201 kB]\n",
+      "Get:141 http://archive.ubuntu.com/ubuntu focal/universe amd64 libzvbi-common all 0.2.35-17 [32.5 kB]\n",
+      "Get:142 http://archive.ubuntu.com/ubuntu focal/universe amd64 libzvbi0 amd64 0.2.35-17 [237 kB]\n",
+      "Get:143 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 libavcodec58 amd64 7:4.2.4-1ubuntu0.1 [4876 kB]\n",
+      "Get:144 http://archive.ubuntu.com/ubuntu focal/universe amd64 libbluray2 amd64 1:1.2.0-1 [138 kB]\n",
+      "Get:145 http://archive.ubuntu.com/ubuntu focal/universe amd64 libchromaprint1 amd64 1.4.3-3build1 [37.6 kB]\n",
+      "Get:146 http://archive.ubuntu.com/ubuntu focal/universe amd64 libgme0 amd64 0.6.2-1build1 [123 kB]\n",
+      "Get:147 http://archive.ubuntu.com/ubuntu focal/main amd64 libmpg123-0 amd64 1.25.13-1 [124 kB]\n",
+      "Get:148 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenmpt0 amd64 0.4.11-1build1 [599 kB]\n",
+      "Get:149 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libssh-gcrypt-4 amd64 0.9.3-2ubuntu2.2 [202 kB]\n",
+      "Get:150 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 libavformat58 amd64 7:4.2.4-1ubuntu0.1 [981 kB]\n",
+      "Get:151 http://archive.ubuntu.com/ubuntu focal/universe amd64 libbdplus0 amd64 0.1.2-3 [47.3 kB]\n",
+      "Get:152 http://archive.ubuntu.com/ubuntu focal/main amd64 libevent-2.1-7 amd64 2.1.11-stable-1 [138 kB]\n",
+      "Get:153 http://archive.ubuntu.com/ubuntu focal/main amd64 libevent-core-2.1-7 amd64 2.1.11-stable-1 [89.1 kB]\n",
+      "Get:154 http://archive.ubuntu.com/ubuntu focal/main amd64 libevent-pthreads-2.1-7 amd64 2.1.11-stable-1 [7372 B]\n",
+      "Get:155 http://archive.ubuntu.com/ubuntu focal/universe amd64 libpsm-infinipath1 amd64 3.3+20.604758e7-6 [168 kB]\n",
+      "Get:156 http://archive.ubuntu.com/ubuntu focal/universe amd64 libpsm2-2 amd64 11.2.86-1 [178 kB]\n",
+      "Get:157 http://archive.ubuntu.com/ubuntu focal/universe amd64 libfabric1 amd64 1.6.2-3 [396 kB]\n",
+      "Get:158 http://archive.ubuntu.com/ubuntu focal/universe amd64 libhwloc15 amd64 2.1.0+dfsg-4 [134 kB]\n",
+      "Get:159 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libxnvctrl0 amd64 470.57.01-0ubuntu0.20.04.2 [11.1 kB]\n",
+      "Get:160 http://archive.ubuntu.com/ubuntu focal/universe amd64 libhwloc-plugins amd64 2.1.0+dfsg-4 [14.4 kB]\n",
+      "Get:161 http://archive.ubuntu.com/ubuntu focal/universe amd64 libpmix2 amd64 3.1.5-1 [442 kB]\n",
+      "Get:162 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenmpi3 amd64 4.0.3-0ubuntu1 [1978 kB]\n",
+      "Get:163 http://archive.ubuntu.com/ubuntu focal/universe amd64 libcaf-openmpi-3 amd64 2.8.0-1 [35.5 kB]\n",
+      "Get:164 http://archive.ubuntu.com/ubuntu focal/universe amd64 libcfitsio8 amd64 3.470-3 [466 kB]\n",
+      "Get:165 http://archive.ubuntu.com/ubuntu focal/universe amd64 libcharls2 amd64 2.0.0+dfsg-1build1 [74.1 kB]\n",
+      "Get:166 http://archive.ubuntu.com/ubuntu focal/universe amd64 libcoarrays-dev amd64 2.8.0-1 [28.2 kB]\n",
+      "Get:167 http://archive.ubuntu.com/ubuntu focal/universe amd64 openmpi-common all 4.0.3-0ubuntu1 [151 kB]\n",
+      "Get:168 http://archive.ubuntu.com/ubuntu focal/universe amd64 openmpi-bin amd64 4.0.3-0ubuntu1 [67.4 kB]\n",
+      "Get:169 http://archive.ubuntu.com/ubuntu focal/universe amd64 libcoarrays-openmpi-dev amd64 2.8.0-1 [34.2 kB]\n",
+      "Get:170 http://archive.ubuntu.com/ubuntu focal/main amd64 liblcms2-2 amd64 2.9-4 [140 kB]\n",
+      "Get:171 http://archive.ubuntu.com/ubuntu focal/main amd64 libcolord2 amd64 1.4.4-2 [133 kB]\n",
+      "Get:172 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libcups2 amd64 2.3.1-9ubuntu1.1 [233 kB]\n",
+      "Get:173 http://archive.ubuntu.com/ubuntu focal/universe amd64 libdap25 amd64 3.20.5-1 [435 kB]\n",
+      "Get:174 http://archive.ubuntu.com/ubuntu focal/universe amd64 libdapclient6v5 amd64 3.20.5-1 [92.2 kB]\n",
+      "Get:175 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libdrm-amdgpu1 amd64 2.4.105-3~20.04.2 [18.4 kB]\n",
+      "Get:176 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libdrm-intel1 amd64 2.4.105-3~20.04.2 [60.7 kB]\n",
+      "Get:177 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libdrm-nouveau2 amd64 2.4.105-3~20.04.2 [16.4 kB]\n",
+      "Get:178 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libdrm-radeon1 amd64 2.4.105-3~20.04.2 [19.7 kB]\n",
+      "Get:179 http://archive.ubuntu.com/ubuntu focal/main amd64 libepoxy0 amd64 1.5.4-1 [191 kB]\n",
+      "Get:180 http://archive.ubuntu.com/ubuntu focal/universe amd64 libepsilon1 amd64 0.9.2+dfsg-4 [41.0 kB]\n",
+      "Get:181 http://archive.ubuntu.com/ubuntu focal/main amd64 libevent-extra-2.1-7 amd64 2.1.11-stable-1 [60.0 kB]\n",
+      "Get:182 http://archive.ubuntu.com/ubuntu focal/main amd64 libevent-openssl-2.1-7 amd64 2.1.11-stable-1 [14.3 kB]\n",
+      "Get:183 http://archive.ubuntu.com/ubuntu focal/main amd64 libevent-dev amd64 2.1.11-stable-1 [261 kB]\n",
+      "Get:184 http://archive.ubuntu.com/ubuntu focal/universe amd64 libfyba0 amd64 4.1.1-6build1 [113 kB]\n",
+      "Get:185 http://archive.ubuntu.com/ubuntu focal/universe amd64 libfreexl1 amd64 1.0.5-3 [33.4 kB]\n",
+      "Get:186 http://archive.ubuntu.com/ubuntu focal/universe amd64 libgeos-3.8.0 amd64 3.8.0-1build1 [535 kB]\n",
+      "Get:187 http://archive.ubuntu.com/ubuntu focal/universe amd64 libgeos-c1v5 amd64 3.8.0-1build1 [69.9 kB]\n",
+      "Get:188 http://archive.ubuntu.com/ubuntu focal/universe amd64 proj-data all 6.3.1-1 [7647 kB]\n",
+      "Get:189 http://archive.ubuntu.com/ubuntu focal/universe amd64 libproj15 amd64 6.3.1-1 [925 kB]\n",
+      "Get:190 http://archive.ubuntu.com/ubuntu focal/universe amd64 libgeotiff5 amd64 1.5.1-2 [53.1 kB]\n",
+      "Get:191 http://archive.ubuntu.com/ubuntu focal/main amd64 libgif7 amd64 5.1.9-1 [32.2 kB]\n",
+      "Get:192 http://archive.ubuntu.com/ubuntu focal/universe amd64 libhdf4-0-alt amd64 4.2.14-1ubuntu1 [268 kB]\n",
+      "Get:193 http://archive.ubuntu.com/ubuntu focal/universe amd64 libminizip1 amd64 1.1-8build1 [20.2 kB]\n",
+      "Get:194 http://archive.ubuntu.com/ubuntu focal/universe amd64 liburiparser1 amd64 0.9.3-2 [39.3 kB]\n",
+      "Get:195 http://archive.ubuntu.com/ubuntu focal/universe amd64 libkmlbase1 amd64 1.3.0-8build1 [45.4 kB]\n",
+      "Get:196 http://archive.ubuntu.com/ubuntu focal/universe amd64 libkmldom1 amd64 1.3.0-8build1 [152 kB]\n",
+      "Get:197 http://archive.ubuntu.com/ubuntu focal/universe amd64 libkmlengine1 amd64 1.3.0-8build1 [72.5 kB]\n",
+      "Get:198 http://archive.ubuntu.com/ubuntu focal/main amd64 mysql-common all 5.8+1.0.5ubuntu2 [7496 B]\n",
+      "Get:199 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libmysqlclient21 amd64 8.0.27-0ubuntu0.20.04.1 [1291 kB]\n",
+      "Get:200 http://archive.ubuntu.com/ubuntu focal/universe amd64 libnetcdf15 amd64 1:4.7.3-1 [341 kB]\n",
+      "Get:201 http://archive.ubuntu.com/ubuntu focal/main amd64 libodbc1 amd64 2.3.6-0.1build1 [189 kB]\n",
+      "Get:202 http://archive.ubuntu.com/ubuntu focal/universe amd64 libogdi4.1 amd64 4.1.0+ds-1build1 [198 kB]\n",
+      "Get:203 http://archive.ubuntu.com/ubuntu focal/main amd64 libnspr4 amd64 2:4.25-1 [107 kB]\n",
+      "Get:204 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libnss3 amd64 2:3.49.1-1ubuntu1.6 [1256 kB]\n",
+      "Get:205 http://archive.ubuntu.com/ubuntu focal/main amd64 libpoppler97 amd64 0.86.1-0ubuntu1 [915 kB]\n",
+      "Get:206 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libpq5 amd64 12.9-0ubuntu0.20.04.1 [117 kB]\n",
+      "Get:207 http://archive.ubuntu.com/ubuntu focal/universe amd64 libqhull7 amd64 2015.2-4 [152 kB]\n",
+      "Get:208 http://archive.ubuntu.com/ubuntu focal/universe amd64 libspatialite7 amd64 4.3.0a-6build1 [1286 kB]\n",
+      "Get:209 http://archive.ubuntu.com/ubuntu focal/universe amd64 libxerces-c3.2 amd64 3.2.2+debian-1build3 [878 kB]\n",
+      "Get:210 http://archive.ubuntu.com/ubuntu focal/main amd64 odbcinst amd64 2.3.6-0.1build1 [14.8 kB]\n",
+      "Get:211 http://archive.ubuntu.com/ubuntu focal/main amd64 odbcinst1debian2 amd64 2.3.6-0.1build1 [41.1 kB]\n",
+      "Get:212 http://archive.ubuntu.com/ubuntu focal/universe amd64 libgdal26 amd64 3.0.4+dfsg-1build3 [6156 kB]\n",
+      "Get:213 http://archive.ubuntu.com/ubuntu focal/universe amd64 libsocket++1 amd64 1.12.13-10build1 [40.7 kB]\n",
+      "Get:214 http://archive.ubuntu.com/ubuntu focal/universe amd64 libgdcm3.0 amd64 3.0.5-1.1ubuntu2 [1871 kB]\n",
+      "Get:215 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgdk-pixbuf2.0-bin amd64 2.40.0+dfsg-3ubuntu0.2 [14.1 kB]\n",
+      "Get:216 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libglapi-mesa amd64 21.0.3-0ubuntu0.3~20.04.5 [26.8 kB]\n",
+      "Get:217 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libllvm12 amd64 1:12.0.0-3ubuntu1~20.04.4 [18.8 MB]\n",
+      "Get:218 http://archive.ubuntu.com/ubuntu focal/main amd64 libsensors-config all 1:3.6.0-2ubuntu1 [6092 B]\n",
+      "Get:219 http://archive.ubuntu.com/ubuntu focal/main amd64 libsensors5 amd64 1:3.6.0-2ubuntu1 [27.4 kB]\n",
+      "Get:220 http://archive.ubuntu.com/ubuntu focal/main amd64 libvulkan1 amd64 1.2.131.2-1 [93.3 kB]\n",
+      "Get:221 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgl1-mesa-dri amd64 21.0.3-0ubuntu0.3~20.04.5 [10.5 MB]\n",
+      "Get:222 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libglvnd0 amd64 1.3.2-1~ubuntu0.20.04.1 [51.4 kB]\n",
+      "Get:223 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libx11-xcb1 amd64 2:1.6.9-2ubuntu1.2 [9372 B]\n",
+      "Get:224 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcb-dri2-0 amd64 1.14-2 [6920 B]\n",
+      "Get:225 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcb-dri3-0 amd64 1.14-2 [6552 B]\n",
+      "Get:226 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcb-glx0 amd64 1.14-2 [22.1 kB]\n",
+      "Get:227 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcb-present0 amd64 1.14-2 [5560 B]\n",
+      "Get:228 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcb-sync1 amd64 1.14-2 [8884 B]\n",
+      "Get:229 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcb-xfixes0 amd64 1.14-2 [9296 B]\n",
+      "Get:230 http://archive.ubuntu.com/ubuntu focal/main amd64 libxshmfence1 amd64 1.3-1 [5028 B]\n",
+      "Get:231 http://archive.ubuntu.com/ubuntu focal/main amd64 libxxf86vm1 amd64 1:1.1.4-1build1 [10.2 kB]\n",
+      "Get:232 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libglx-mesa0 amd64 21.0.3-0ubuntu0.3~20.04.5 [138 kB]\n",
+      "Get:233 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libglx0 amd64 1.3.2-1~ubuntu0.20.04.1 [32.6 kB]\n",
+      "Get:234 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgl1 amd64 1.3.2-1~ubuntu0.20.04.1 [86.9 kB]\n",
+      "Get:235 http://archive.ubuntu.com/ubuntu focal/universe amd64 libgl2ps1.4 amd64 1.4.0+dfsg1-2 [38.2 kB]\n",
+      "Get:236 http://archive.ubuntu.com/ubuntu focal/main amd64 libjson-glib-1.0-common all 1.4.4-2ubuntu2 [3468 B]\n",
+      "Get:237 http://archive.ubuntu.com/ubuntu focal/main amd64 libjson-glib-1.0-0 amd64 1.4.4-2ubuntu2 [59.4 kB]\n",
+      "Get:238 http://archive.ubuntu.com/ubuntu focal/main amd64 libsoup2.4-1 amd64 2.70.0-1 [262 kB]\n",
+      "Get:239 http://archive.ubuntu.com/ubuntu focal/main amd64 libsoup-gnome2.4-1 amd64 2.70.0-1 [6136 B]\n",
+      "Get:240 http://archive.ubuntu.com/ubuntu focal/main amd64 librest-0.7-0 amd64 0.8.1-1 [32.2 kB]\n",
+      "Get:241 http://archive.ubuntu.com/ubuntu focal/main amd64 libwayland-client0 amd64 1.18.0-1 [23.9 kB]\n",
+      "Get:242 http://archive.ubuntu.com/ubuntu focal/main amd64 libwayland-cursor0 amd64 1.18.0-1 [10.3 kB]\n",
+      "Get:243 http://archive.ubuntu.com/ubuntu focal/main amd64 libwayland-egl1 amd64 1.18.0-1 [5692 B]\n",
+      "Get:244 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcomposite1 amd64 1:0.4.5-1 [6976 B]\n",
+      "Get:245 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcursor1 amd64 1:1.2.0-2 [20.1 kB]\n",
+      "Get:246 http://archive.ubuntu.com/ubuntu focal/main amd64 libxdamage1 amd64 1:1.1.5-2 [6996 B]\n",
+      "Get:247 http://archive.ubuntu.com/ubuntu focal/main amd64 libxi6 amd64 2:1.7.10-0ubuntu1 [29.9 kB]\n",
+      "Get:248 http://archive.ubuntu.com/ubuntu focal/main amd64 libxinerama1 amd64 2:1.1.4-2 [6904 B]\n",
+      "Get:249 http://archive.ubuntu.com/ubuntu focal/main amd64 libxkbcommon0 amd64 0.10.0-1 [98.4 kB]\n",
+      "Get:250 http://archive.ubuntu.com/ubuntu focal/main amd64 libxrandr2 amd64 2:1.5.2-0ubuntu1 [18.5 kB]\n",
+      "Get:251 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgtk-3-common all 3.24.20-0ubuntu1 [235 kB]\n",
+      "Get:252 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgtk-3-0 amd64 3.24.20-0ubuntu1 [2620 kB]\n",
+      "Get:253 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgtk-3-bin amd64 3.24.20-0ubuntu1 [61.9 kB]\n",
+      "Get:254 http://archive.ubuntu.com/ubuntu focal/universe amd64 libhdf5-openmpi-103 amd64 1.10.4+repack-11ubuntu1 [1355 kB]\n",
+      "Get:255 http://archive.ubuntu.com/ubuntu focal/main amd64 libice6 amd64 2:1.0.10-0ubuntu1 [41.0 kB]\n",
+      "Get:256 http://archive.ubuntu.com/ubuntu focal/universe amd64 libilmbase24 amd64 2.3.0-6build1 [75.1 kB]\n",
+      "Get:257 http://archive.ubuntu.com/ubuntu focal/universe amd64 liblept5 amd64 1.79.0-1 [999 kB]\n",
+      "Get:258 http://archive.ubuntu.com/ubuntu focal/main amd64 libltdl-dev amd64 2.4.6-14 [162 kB]\n",
+      "Get:259 http://archive.ubuntu.com/ubuntu focal/universe amd64 libnetcdf-c++4 amd64 4.2-11build2 [33.6 kB]\n",
+      "Get:260 http://archive.ubuntu.com/ubuntu focal/universe amd64 libtbb2 amd64 2020.1-2 [124 kB]\n",
+      "Get:261 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopencv-core4.2 amd64 4.2.0+dfsg-5 [1027 kB]\n",
+      "Get:262 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopencv-flann4.2 amd64 4.2.0+dfsg-5 [105 kB]\n",
+      "Get:263 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopencv-imgproc4.2 amd64 4.2.0+dfsg-5 [1290 kB]\n",
+      "Get:264 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 libopenexr24 amd64 2.3.0-6ubuntu0.5 [592 kB]\n",
+      "Get:265 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopencv-imgcodecs4.2 amd64 4.2.0+dfsg-5 [112 kB]\n",
+      "Get:266 http://archive.ubuntu.com/ubuntu focal/main amd64 libraw1394-11 amd64 2.1.2-1 [30.7 kB]\n",
+      "Get:267 http://archive.ubuntu.com/ubuntu focal/universe amd64 libdc1394-22 amd64 2.2.5-2.1 [79.6 kB]\n",
+      "Get:268 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 libswscale5 amd64 7:4.2.4-1ubuntu0.1 [156 kB]\n",
+      "Get:269 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopencv-videoio4.2 amd64 4.2.0+dfsg-5 [157 kB]\n",
+      "Get:270 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopencv-highgui4.2 amd64 4.2.0+dfsg-5 [32.5 kB]\n",
+      "Get:271 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopencv-ml4.2 amd64 4.2.0+dfsg-5 [238 kB]\n",
+      "Get:272 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopencv-features2d4.2 amd64 4.2.0+dfsg-5 [258 kB]\n",
+      "Get:273 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopencv-calib3d4.2 amd64 4.2.0+dfsg-5 [541 kB]\n",
+      "Get:274 http://archive.ubuntu.com/ubuntu focal/main amd64 libprotobuf17 amd64 3.6.1.3-2ubuntu5 [798 kB]\n",
+      "Get:275 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopencv-dnn4.2 amd64 4.2.0+dfsg-5 [873 kB]\n",
+      "Get:276 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopencv-objdetect4.2 amd64 4.2.0+dfsg-5 [149 kB]\n",
+      "Get:277 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopencv-photo4.2 amd64 4.2.0+dfsg-5 [200 kB]\n",
+      "Get:278 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopencv-video4.2 amd64 4.2.0+dfsg-5 [147 kB]\n",
+      "Get:279 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopencv-shape4.2 amd64 4.2.0+dfsg-5 [57.6 kB]\n",
+      "Get:280 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopencv-stitching4.2 amd64 4.2.0+dfsg-5 [213 kB]\n",
+      "Get:281 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopencv-superres4.2 amd64 4.2.0+dfsg-5 [48.4 kB]\n",
+      "Get:282 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopencv-videostab4.2 amd64 4.2.0+dfsg-5 [102 kB]\n",
+      "Get:283 http://archive.ubuntu.com/ubuntu focal/main amd64 libsm6 amd64 2:1.2.3-1 [16.1 kB]\n",
+      "Get:284 http://archive.ubuntu.com/ubuntu focal/main amd64 libxt6 amd64 1:1.1.5-1 [160 kB]\n",
+      "Get:285 http://archive.ubuntu.com/ubuntu focal/universe amd64 libvtk6.3 amd64 6.3.0+dfsg2-5build2 [16.4 MB]\n",
+      "Get:286 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopencv-viz4.2 amd64 4.2.0+dfsg-5 [122 kB]\n",
+      "Get:287 http://archive.ubuntu.com/ubuntu focal/universe amd64 libtesseract4 amd64 4.1.1-2build2 [1237 kB]\n",
+      "Get:288 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopencv-contrib4.2 amd64 4.2.0+dfsg-5 [3312 kB]\n",
+      "Get:289 http://archive.ubuntu.com/ubuntu focal/main amd64 libtool all 2.4.6-14 [161 kB]\n",
+      "Get:290 http://archive.ubuntu.com/ubuntu focal/main amd64 libxcb-randr0 amd64 1.14-2 [16.3 kB]\n",
+      "Get:291 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 mesa-va-drivers amd64 21.0.3-0ubuntu0.3~20.04.5 [2825 kB]\n",
+      "Get:292 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 mesa-vdpau-drivers amd64 21.0.3-0ubuntu0.3~20.04.5 [2944 kB]\n",
+      "Get:293 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 mesa-vulkan-drivers amd64 21.0.3-0ubuntu0.3~20.04.5 [4731 kB]\n",
+      "Get:294 http://archive.ubuntu.com/ubuntu focal/main amd64 python3-numpy amd64 1:1.17.4-5ubuntu3 [2725 kB]\n",
+      "Get:295 http://archive.ubuntu.com/ubuntu focal/universe amd64 python3-opencv amd64 4.2.0+dfsg-5 [1214 kB]\n",
+      "Get:296 http://archive.ubuntu.com/ubuntu focal/universe amd64 i965-va-driver amd64 2.4.0-0ubuntu1 [924 kB]\n",
+      "Get:297 http://archive.ubuntu.com/ubuntu focal/universe amd64 va-driver-all amd64 2.7.0-2 [4020 B]\n",
+      "Get:298 http://archive.ubuntu.com/ubuntu focal/main amd64 vdpau-driver-all amd64 1.3-1ubuntu2 [4596 B]\n",
+      "Get:299 http://archive.ubuntu.com/ubuntu focal/universe amd64 libhwloc-dev amd64 2.1.0+dfsg-4 [205 kB]\n",
+      "Get:300 http://archive.ubuntu.com/ubuntu focal/universe amd64 libopenmpi-dev amd64 4.0.3-0ubuntu1 [798 kB]\n",
+      "Get:301 http://archive.ubuntu.com/ubuntu focal/universe amd64 proj-bin amd64 6.3.1-1 [88.8 kB]\n",
+      "Fetched 163 MB in 16s (10.1 MB/s)                                              \n",
+      "debconf: unable to initialize frontend: Dialog\n",
+      "debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 76, <> line 301.)\n",
+      "debconf: falling back to frontend: Readline\n",
+      "Extracting templates from packages: 100%\n",
+      "Preconfiguring packages ...\n",
+      "Selecting previously unselected package libapparmor1:amd64.\n",
+      "(Reading database ... 41040 files and directories currently installed.)\n",
+      "Preparing to unpack .../0-libapparmor1_2.13.3-7ubuntu5.1_amd64.deb ...\n",
+      "Unpacking libapparmor1:amd64 (2.13.3-7ubuntu5.1) ...\n",
+      "Selecting previously unselected package libcap2:amd64.\n",
+      "Preparing to unpack .../1-libcap2_1%3a2.32-1_amd64.deb ...\n",
+      "Unpacking libcap2:amd64 (1:2.32-1) ...\n",
+      "Selecting previously unselected package libargon2-1:amd64.\n",
+      "Preparing to unpack .../2-libargon2-1_0~20171227-0.2_amd64.deb ...\n",
+      "Unpacking libargon2-1:amd64 (0~20171227-0.2) ...\n",
+      "Selecting previously unselected package libdevmapper1.02.1:amd64.\n",
+      "Preparing to unpack .../3-libdevmapper1.02.1_2%3a1.02.167-1ubuntu1_amd64.deb ...\n",
+      "Unpacking libdevmapper1.02.1:amd64 (2:1.02.167-1ubuntu1) ...\n",
+      "Selecting previously unselected package libjson-c4:amd64.\n",
+      "Preparing to unpack .../4-libjson-c4_0.13.1+dfsg-7ubuntu0.3_amd64.deb ...\n",
+      "Unpacking libjson-c4:amd64 (0.13.1+dfsg-7ubuntu0.3) ...\n",
+      "Selecting previously unselected package libcryptsetup12:amd64.\n",
+      "Preparing to unpack .../5-libcryptsetup12_2%3a2.2.2-3ubuntu2.3_amd64.deb ...\n",
+      "Unpacking libcryptsetup12:amd64 (2:2.2.2-3ubuntu2.3) ...\n",
+      "Selecting previously unselected package libip4tc2:amd64.\n",
+      "Preparing to unpack .../6-libip4tc2_1.8.4-3ubuntu2_amd64.deb ...\n",
+      "Unpacking libip4tc2:amd64 (1.8.4-3ubuntu2) ...\n",
+      "Selecting previously unselected package libkmod2:amd64.\n",
+      "Preparing to unpack .../7-libkmod2_27-1ubuntu2_amd64.deb ...\n",
+      "Unpacking libkmod2:amd64 (27-1ubuntu2) ...\n",
+      "Selecting previously unselected package systemd-timesyncd.\n",
+      "Preparing to unpack .../8-systemd-timesyncd_245.4-4ubuntu3.13_amd64.deb ...\n",
+      "Unpacking systemd-timesyncd (245.4-4ubuntu3.13) ...\n",
+      "Selecting previously unselected package systemd.\n",
+      "Preparing to unpack .../9-systemd_245.4-4ubuntu3.13_amd64.deb ...\n",
+      "Unpacking systemd (245.4-4ubuntu3.13) ...\n",
+      "Setting up libapparmor1:amd64 (2.13.3-7ubuntu5.1) ...\n",
+      "Setting up libcap2:amd64 (1:2.32-1) ...\n",
+      "Setting up libargon2-1:amd64 (0~20171227-0.2) ...\n",
+      "Setting up libdevmapper1.02.1:amd64 (2:1.02.167-1ubuntu1) ...\n",
+      "Setting up libjson-c4:amd64 (0.13.1+dfsg-7ubuntu0.3) ...\n",
+      "Setting up libcryptsetup12:amd64 (2:2.2.2-3ubuntu2.3) ...\n",
+      "Setting up libip4tc2:amd64 (1.8.4-3ubuntu2) ...\n",
+      "Setting up libkmod2:amd64 (27-1ubuntu2) ...\n",
+      "Setting up systemd-timesyncd (245.4-4ubuntu3.13) ...\n",
+      "Created symlink /etc/systemd/system/dbus-org.freedesktop.timesync1.service → /lib/systemd/system/systemd-timesyncd.service.\n",
+      "Created symlink /etc/systemd/system/sysinit.target.wants/systemd-timesyncd.service → /lib/systemd/system/systemd-timesyncd.service.\n",
+      "Setting up systemd (245.4-4ubuntu3.13) ...\n",
+      "Created symlink /etc/systemd/system/getty.target.wants/getty@tty1.service → /lib/systemd/system/getty@.service.\n",
+      "Created symlink /etc/systemd/system/multi-user.target.wants/remote-fs.target → /lib/systemd/system/remote-fs.target.\n",
+      "Created symlink /etc/systemd/system/dbus-org.freedesktop.resolve1.service → /lib/systemd/system/systemd-resolved.service.\n",
+      "Created symlink /etc/systemd/system/multi-user.target.wants/systemd-resolved.service → /lib/systemd/system/systemd-resolved.service.\n",
+      "ln: failed to create symbolic link '/etc/resolv.conf': Device or resource busy\n",
+      "Created symlink /etc/systemd/system/multi-user.target.wants/ondemand.service → /lib/systemd/system/ondemand.service.\n",
+      "Created symlink /etc/systemd/system/sysinit.target.wants/systemd-pstore.service → /lib/systemd/system/systemd-pstore.service.\n",
+      "Initializing machine ID from random generator.\n",
+      "Selecting previously unselected package systemd-sysv.\n",
+      "(Reading database ... 41836 files and directories currently installed.)\n",
+      "Preparing to unpack .../000-systemd-sysv_245.4-4ubuntu3.13_amd64.deb ...\n",
+      "Unpacking systemd-sysv (245.4-4ubuntu3.13) ...\n",
+      "Selecting previously unselected package poppler-data.\n",
+      "Preparing to unpack .../001-poppler-data_0.4.9-2_all.deb ...\n",
+      "Unpacking poppler-data (0.4.9-2) ...\n",
+      "Selecting previously unselected package libdbus-1-3:amd64.\n",
+      "Preparing to unpack .../002-libdbus-1-3_1.12.16-2ubuntu2.1_amd64.deb ...\n",
+      "Unpacking libdbus-1-3:amd64 (1.12.16-2ubuntu2.1) ...\n",
+      "Selecting previously unselected package dbus.\n",
+      "Preparing to unpack .../003-dbus_1.12.16-2ubuntu2.1_amd64.deb ...\n",
+      "Unpacking dbus (1.12.16-2ubuntu2.1) ...\n",
+      "Selecting previously unselected package dmsetup.\n",
+      "Preparing to unpack .../004-dmsetup_2%3a1.02.167-1ubuntu1_amd64.deb ...\n",
+      "Unpacking dmsetup (2:1.02.167-1ubuntu1) ...\n",
+      "Selecting previously unselected package libmagic-mgc.\n",
+      "Preparing to unpack .../005-libmagic-mgc_1%3a5.38-4_amd64.deb ...\n",
+      "Unpacking libmagic-mgc (1:5.38-4) ...\n",
+      "Selecting previously unselected package libmagic1:amd64.\n",
+      "Preparing to unpack .../006-libmagic1_1%3a5.38-4_amd64.deb ...\n",
+      "Unpacking libmagic1:amd64 (1:5.38-4) ...\n",
+      "Selecting previously unselected package file.\n",
+      "Preparing to unpack .../007-file_1%3a5.38-4_amd64.deb ...\n",
+      "Unpacking file (1:5.38-4) ...\n",
+      "Selecting previously unselected package libgirepository-1.0-1:amd64.\n",
+      "Preparing to unpack .../008-libgirepository-1.0-1_1.64.1-1~ubuntu20.04.1_amd64.deb ...\n",
+      "Unpacking libgirepository-1.0-1:amd64 (1.64.1-1~ubuntu20.04.1) ...\n",
+      "Selecting previously unselected package gir1.2-glib-2.0:amd64.\n",
+      "Preparing to unpack .../009-gir1.2-glib-2.0_1.64.1-1~ubuntu20.04.1_amd64.deb ...\n",
+      "Unpacking gir1.2-glib-2.0:amd64 (1.64.1-1~ubuntu20.04.1) ...\n",
+      "Selecting previously unselected package libcap2-bin.\n",
+      "Preparing to unpack .../010-libcap2-bin_1%3a2.32-1_amd64.deb ...\n",
+      "Unpacking libcap2-bin (1:2.32-1) ...\n",
+      "Selecting previously unselected package libelf1:amd64.\n",
+      "Preparing to unpack .../011-libelf1_0.176-1.1build1_amd64.deb ...\n",
+      "Unpacking libelf1:amd64 (0.176-1.1build1) ...\n",
+      "Selecting previously unselected package libfribidi0:amd64.\n",
+      "Preparing to unpack .../012-libfribidi0_1.0.8-2_amd64.deb ...\n",
+      "Unpacking libfribidi0:amd64 (1.0.8-2) ...\n",
+      "Selecting previously unselected package libnss-systemd:amd64.\n",
+      "Preparing to unpack .../013-libnss-systemd_245.4-4ubuntu3.13_amd64.deb ...\n",
+      "Unpacking libnss-systemd:amd64 (245.4-4ubuntu3.13) ...\n",
+      "Selecting previously unselected package libpam-cap:amd64.\n",
+      "Preparing to unpack .../014-libpam-cap_1%3a2.32-1_amd64.deb ...\n",
+      "Unpacking libpam-cap:amd64 (1:2.32-1) ...\n",
+      "Selecting previously unselected package libpam-systemd:amd64.\n",
+      "Preparing to unpack .../015-libpam-systemd_245.4-4ubuntu3.13_amd64.deb ...\n",
+      "Unpacking libpam-systemd:amd64 (245.4-4ubuntu3.13) ...\n",
+      "Selecting previously unselected package python3-dbus.\n",
+      "Preparing to unpack .../016-python3-dbus_1.2.16-1build1_amd64.deb ...\n",
+      "Unpacking python3-dbus (1.2.16-1build1) ...\n",
+      "Selecting previously unselected package python3-gi.\n",
+      "Preparing to unpack .../017-python3-gi_3.36.0-1_amd64.deb ...\n",
+      "Unpacking python3-gi (3.36.0-1) ...\n",
+      "Selecting previously unselected package networkd-dispatcher.\n",
+      "Preparing to unpack .../018-networkd-dispatcher_2.1-2~ubuntu20.04.1_all.deb ...\n",
+      "Unpacking networkd-dispatcher (2.1-2~ubuntu20.04.1) ...\n",
+      "Selecting previously unselected package python3-pkg-resources.\n",
+      "Preparing to unpack .../019-python3-pkg-resources_45.2.0-1_all.deb ...\n",
+      "Unpacking python3-pkg-resources (45.2.0-1) ...\n",
+      "Selecting previously unselected package shared-mime-info.\n",
+      "Preparing to unpack .../020-shared-mime-info_1.15-1_amd64.deb ...\n",
+      "Unpacking shared-mime-info (1.15-1) ...\n",
+      "Selecting previously unselected package ucf.\n",
+      "Preparing to unpack .../021-ucf_3.0038+nmu1_all.deb ...\n",
+      "Moving old data out of the way\n",
+      "Unpacking ucf (3.0038+nmu1) ...\n",
+      "Selecting previously unselected package xkb-data.\n",
+      "Preparing to unpack .../022-xkb-data_2.29-2_all.deb ...\n",
+      "Unpacking xkb-data (2.29-2) ...\n",
+      "Selecting previously unselected package iso-codes.\n",
+      "Preparing to unpack .../023-iso-codes_4.4-1_all.deb ...\n",
+      "Unpacking iso-codes (4.4-1) ...\n",
+      "Selecting previously unselected package libdrm-common.\n",
+      "Preparing to unpack .../024-libdrm-common_2.4.105-3~20.04.2_all.deb ...\n",
+      "Unpacking libdrm-common (2.4.105-3~20.04.2) ...\n",
+      "Selecting previously unselected package libdrm2:amd64.\n",
+      "Preparing to unpack .../025-libdrm2_2.4.105-3~20.04.2_amd64.deb ...\n",
+      "Unpacking libdrm2:amd64 (2.4.105-3~20.04.2) ...\n",
+      "Selecting previously unselected package libpng16-16:amd64.\n",
+      "Preparing to unpack .../026-libpng16-16_1.6.37-2_amd64.deb ...\n",
+      "Unpacking libpng16-16:amd64 (1.6.37-2) ...\n",
+      "Selecting previously unselected package libusb-1.0-0:amd64.\n",
+      "Preparing to unpack .../027-libusb-1.0-0_2%3a1.0.23-2build1_amd64.deb ...\n",
+      "Unpacking libusb-1.0-0:amd64 (2:1.0.23-2build1) ...\n",
+      "Selecting previously unselected package libxau6:amd64.\n",
+      "Preparing to unpack .../028-libxau6_1%3a1.0.9-0ubuntu1_amd64.deb ...\n",
+      "Unpacking libxau6:amd64 (1:1.0.9-0ubuntu1) ...\n",
+      "Selecting previously unselected package libxdmcp6:amd64.\n",
+      "Preparing to unpack .../029-libxdmcp6_1%3a1.1.3-0ubuntu1_amd64.deb ...\n",
+      "Unpacking libxdmcp6:amd64 (1:1.1.3-0ubuntu1) ...\n",
+      "Selecting previously unselected package libxcb1:amd64.\n",
+      "Preparing to unpack .../030-libxcb1_1.14-2_amd64.deb ...\n",
+      "Unpacking libxcb1:amd64 (1.14-2) ...\n",
+      "Selecting previously unselected package libx11-data.\n",
+      "Preparing to unpack .../031-libx11-data_2%3a1.6.9-2ubuntu1.2_all.deb ...\n",
+      "Unpacking libx11-data (2:1.6.9-2ubuntu1.2) ...\n",
+      "Selecting previously unselected package libx11-6:amd64.\n",
+      "Preparing to unpack .../032-libx11-6_2%3a1.6.9-2ubuntu1.2_amd64.deb ...\n",
+      "Unpacking libx11-6:amd64 (2:1.6.9-2ubuntu1.2) ...\n",
+      "Selecting previously unselected package libxext6:amd64.\n",
+      "Preparing to unpack .../033-libxext6_2%3a1.3.4-0ubuntu1_amd64.deb ...\n",
+      "Unpacking libxext6:amd64 (2:1.3.4-0ubuntu1) ...\n",
+      "Selecting previously unselected package hicolor-icon-theme.\n",
+      "Preparing to unpack .../034-hicolor-icon-theme_0.17-2_all.deb ...\n",
+      "Unpacking hicolor-icon-theme (0.17-2) ...\n",
+      "Selecting previously unselected package libjbig0:amd64.\n",
+      "Preparing to unpack .../035-libjbig0_2.1-3.1build1_amd64.deb ...\n",
+      "Unpacking libjbig0:amd64 (2.1-3.1build1) ...\n",
+      "Selecting previously unselected package libwebp6:amd64.\n",
+      "Preparing to unpack .../036-libwebp6_0.6.1-2ubuntu0.20.04.1_amd64.deb ...\n",
+      "Unpacking libwebp6:amd64 (0.6.1-2ubuntu0.20.04.1) ...\n",
+      "Selecting previously unselected package libtiff5:amd64.\n",
+      "Preparing to unpack .../037-libtiff5_4.1.0+git191117-2ubuntu0.20.04.2_amd64.deb ...\n",
+      "Unpacking libtiff5:amd64 (4.1.0+git191117-2ubuntu0.20.04.2) ...\n",
+      "Selecting previously unselected package libgdk-pixbuf2.0-common.\n",
+      "Preparing to unpack .../038-libgdk-pixbuf2.0-common_2.40.0+dfsg-3ubuntu0.2_all.deb ...\n",
+      "Unpacking libgdk-pixbuf2.0-common (2.40.0+dfsg-3ubuntu0.2) ...\n",
+      "Selecting previously unselected package libgdk-pixbuf2.0-0:amd64.\n",
+      "Preparing to unpack .../039-libgdk-pixbuf2.0-0_2.40.0+dfsg-3ubuntu0.2_amd64.deb ...\n",
+      "Unpacking libgdk-pixbuf2.0-0:amd64 (2.40.0+dfsg-3ubuntu0.2) ...\n",
+      "Selecting previously unselected package gtk-update-icon-cache.\n",
+      "Preparing to unpack .../040-gtk-update-icon-cache_3.24.20-0ubuntu1_amd64.deb ...\n",
+      "No diversion 'diversion of /usr/sbin/update-icon-caches to /usr/sbin/update-icon-caches.gtk2 by libgtk-3-bin', none removed.\n",
+      "No diversion 'diversion of /usr/share/man/man8/update-icon-caches.8.gz to /usr/share/man/man8/update-icon-caches.gtk2.8.gz by libgtk-3-bin', none removed.\n",
+      "Unpacking gtk-update-icon-cache (3.24.20-0ubuntu1) ...\n",
+      "Selecting previously unselected package libfreetype6:amd64.\n",
+      "Preparing to unpack .../041-libfreetype6_2.10.1-2ubuntu0.1_amd64.deb ...\n",
+      "Unpacking libfreetype6:amd64 (2.10.1-2ubuntu0.1) ...\n",
+      "Selecting previously unselected package fonts-dejavu-core.\n",
+      "Preparing to unpack .../042-fonts-dejavu-core_2.37-1_all.deb ...\n",
+      "Unpacking fonts-dejavu-core (2.37-1) ...\n",
+      "Selecting previously unselected package fontconfig-config.\n",
+      "Preparing to unpack .../043-fontconfig-config_2.13.1-2ubuntu3_all.deb ...\n",
+      "Unpacking fontconfig-config (2.13.1-2ubuntu3) ...\n",
+      "Selecting previously unselected package libfontconfig1:amd64.\n",
+      "Preparing to unpack .../044-libfontconfig1_2.13.1-2ubuntu3_amd64.deb ...\n",
+      "Unpacking libfontconfig1:amd64 (2.13.1-2ubuntu3) ...\n",
+      "Selecting previously unselected package libpixman-1-0:amd64.\n",
+      "Preparing to unpack .../045-libpixman-1-0_0.38.4-0ubuntu1_amd64.deb ...\n",
+      "Unpacking libpixman-1-0:amd64 (0.38.4-0ubuntu1) ...\n",
+      "Selecting previously unselected package libxcb-render0:amd64.\n",
+      "Preparing to unpack .../046-libxcb-render0_1.14-2_amd64.deb ...\n",
+      "Unpacking libxcb-render0:amd64 (1.14-2) ...\n",
+      "Selecting previously unselected package libxcb-shm0:amd64.\n",
+      "Preparing to unpack .../047-libxcb-shm0_1.14-2_amd64.deb ...\n",
+      "Unpacking libxcb-shm0:amd64 (1.14-2) ...\n",
+      "Selecting previously unselected package libxrender1:amd64.\n",
+      "Preparing to unpack .../048-libxrender1_1%3a0.9.10-1_amd64.deb ...\n",
+      "Unpacking libxrender1:amd64 (1:0.9.10-1) ...\n",
+      "Selecting previously unselected package libcairo2:amd64.\n",
+      "Preparing to unpack .../049-libcairo2_1.16.0-4ubuntu1_amd64.deb ...\n",
+      "Unpacking libcairo2:amd64 (1.16.0-4ubuntu1) ...\n",
+      "Selecting previously unselected package libcairo-gobject2:amd64.\n",
+      "Preparing to unpack .../050-libcairo-gobject2_1.16.0-4ubuntu1_amd64.deb ...\n",
+      "Unpacking libcairo-gobject2:amd64 (1.16.0-4ubuntu1) ...\n",
+      "Selecting previously unselected package fontconfig.\n",
+      "Preparing to unpack .../051-fontconfig_2.13.1-2ubuntu3_amd64.deb ...\n",
+      "Unpacking fontconfig (2.13.1-2ubuntu3) ...\n",
+      "Selecting previously unselected package libgraphite2-3:amd64.\n",
+      "Preparing to unpack .../052-libgraphite2-3_1.3.13-11build1_amd64.deb ...\n",
+      "Unpacking libgraphite2-3:amd64 (1.3.13-11build1) ...\n",
+      "Selecting previously unselected package libharfbuzz0b:amd64.\n",
+      "Preparing to unpack .../053-libharfbuzz0b_2.6.4-1ubuntu4_amd64.deb ...\n",
+      "Unpacking libharfbuzz0b:amd64 (2.6.4-1ubuntu4) ...\n",
+      "Selecting previously unselected package libthai-data.\n",
+      "Preparing to unpack .../054-libthai-data_0.1.28-3_all.deb ...\n",
+      "Unpacking libthai-data (0.1.28-3) ...\n",
+      "Selecting previously unselected package libdatrie1:amd64.\n",
+      "Preparing to unpack .../055-libdatrie1_0.2.12-3_amd64.deb ...\n",
+      "Unpacking libdatrie1:amd64 (0.2.12-3) ...\n",
+      "Selecting previously unselected package libthai0:amd64.\n",
+      "Preparing to unpack .../056-libthai0_0.1.28-3_amd64.deb ...\n",
+      "Unpacking libthai0:amd64 (0.1.28-3) ...\n",
+      "Selecting previously unselected package libpango-1.0-0:amd64.\n",
+      "Preparing to unpack .../057-libpango-1.0-0_1.44.7-2ubuntu4_amd64.deb ...\n",
+      "Unpacking libpango-1.0-0:amd64 (1.44.7-2ubuntu4) ...\n",
+      "Selecting previously unselected package libpangoft2-1.0-0:amd64.\n",
+      "Preparing to unpack .../058-libpangoft2-1.0-0_1.44.7-2ubuntu4_amd64.deb ...\n",
+      "Unpacking libpangoft2-1.0-0:amd64 (1.44.7-2ubuntu4) ...\n",
+      "Selecting previously unselected package libpangocairo-1.0-0:amd64.\n",
+      "Preparing to unpack .../059-libpangocairo-1.0-0_1.44.7-2ubuntu4_amd64.deb ...\n",
+      "Unpacking libpangocairo-1.0-0:amd64 (1.44.7-2ubuntu4) ...\n",
+      "Selecting previously unselected package librsvg2-2:amd64.\n",
+      "Preparing to unpack .../060-librsvg2-2_2.48.9-1ubuntu0.20.04.1_amd64.deb ...\n",
+      "Unpacking librsvg2-2:amd64 (2.48.9-1ubuntu0.20.04.1) ...\n",
+      "Selecting previously unselected package librsvg2-common:amd64.\n",
+      "Preparing to unpack .../061-librsvg2-common_2.48.9-1ubuntu0.20.04.1_amd64.deb ...\n",
+      "Unpacking librsvg2-common:amd64 (2.48.9-1ubuntu0.20.04.1) ...\n",
+      "Selecting previously unselected package humanity-icon-theme.\n",
+      "Preparing to unpack .../062-humanity-icon-theme_0.6.15_all.deb ...\n",
+      "Unpacking humanity-icon-theme (0.6.15) ...\n",
+      "Selecting previously unselected package ubuntu-mono.\n",
+      "Preparing to unpack .../063-ubuntu-mono_19.04-0ubuntu3_all.deb ...\n",
+      "Unpacking ubuntu-mono (19.04-0ubuntu3) ...\n",
+      "Selecting previously unselected package adwaita-icon-theme.\n",
+      "Preparing to unpack .../064-adwaita-icon-theme_3.36.1-2ubuntu0.20.04.2_all.deb ...\n",
+      "Unpacking adwaita-icon-theme (3.36.1-2ubuntu0.20.04.2) ...\n",
+      "Selecting previously unselected package libatspi2.0-0:amd64.\n",
+      "Preparing to unpack .../065-libatspi2.0-0_2.36.0-2_amd64.deb ...\n",
+      "Unpacking libatspi2.0-0:amd64 (2.36.0-2) ...\n",
+      "Selecting previously unselected package x11-common.\n",
+      "Preparing to unpack .../066-x11-common_1%3a7.7+19ubuntu14_all.deb ...\n",
+      "dpkg-query: no packages found matching nux-tools\n",
+      "Unpacking x11-common (1:7.7+19ubuntu14) ...\n",
+      "Selecting previously unselected package libxtst6:amd64.\n",
+      "Preparing to unpack .../067-libxtst6_2%3a1.2.3-1_amd64.deb ...\n",
+      "Unpacking libxtst6:amd64 (2:1.2.3-1) ...\n",
+      "Selecting previously unselected package at-spi2-core.\n",
+      "Preparing to unpack .../068-at-spi2-core_2.36.0-2_amd64.deb ...\n",
+      "Unpacking at-spi2-core (2.36.0-2) ...\n",
+      "Selecting previously unselected package libsigsegv2:amd64.\n",
+      "Preparing to unpack .../069-libsigsegv2_2.12-2_amd64.deb ...\n",
+      "Unpacking libsigsegv2:amd64 (2.12-2) ...\n",
+      "Selecting previously unselected package m4.\n",
+      "Preparing to unpack .../070-m4_1.4.18-4_amd64.deb ...\n",
+      "Unpacking m4 (1.4.18-4) ...\n",
+      "Selecting previously unselected package autoconf.\n",
+      "Preparing to unpack .../071-autoconf_2.69-11.1_all.deb ...\n",
+      "Unpacking autoconf (2.69-11.1) ...\n",
+      "Selecting previously unselected package autotools-dev.\n",
+      "Preparing to unpack .../072-autotools-dev_20180224.1_all.deb ...\n",
+      "Unpacking autotools-dev (20180224.1) ...\n",
+      "Selecting previously unselected package automake.\n",
+      "Preparing to unpack .../073-automake_1%3a1.16.1-4ubuntu6_all.deb ...\n",
+      "Unpacking automake (1:1.16.1-4ubuntu6) ...\n",
+      "Selecting previously unselected package dbus-user-session.\n",
+      "Preparing to unpack .../074-dbus-user-session_1.12.16-2ubuntu2.1_amd64.deb ...\n",
+      "Unpacking dbus-user-session (1.12.16-2ubuntu2.1) ...\n",
+      "Selecting previously unselected package libdconf1:amd64.\n",
+      "Preparing to unpack .../075-libdconf1_0.36.0-1_amd64.deb ...\n",
+      "Unpacking libdconf1:amd64 (0.36.0-1) ...\n",
+      "Selecting previously unselected package dconf-service.\n",
+      "Preparing to unpack .../076-dconf-service_0.36.0-1_amd64.deb ...\n",
+      "Unpacking dconf-service (0.36.0-1) ...\n",
+      "Selecting previously unselected package dconf-gsettings-backend:amd64.\n",
+      "Preparing to unpack .../077-dconf-gsettings-backend_0.36.0-1_amd64.deb ...\n",
+      "Unpacking dconf-gsettings-backend:amd64 (0.36.0-1) ...\n",
+      "Selecting previously unselected package gdal-data.\n",
+      "Preparing to unpack .../078-gdal-data_3.0.4+dfsg-1build3_all.deb ...\n",
+      "Unpacking gdal-data (3.0.4+dfsg-1build3) ...\n",
+      "Selecting previously unselected package libproxy1v5:amd64.\n",
+      "Preparing to unpack .../079-libproxy1v5_0.4.15-10ubuntu1.2_amd64.deb ...\n",
+      "Unpacking libproxy1v5:amd64 (0.4.15-10ubuntu1.2) ...\n",
+      "Selecting previously unselected package glib-networking-common.\n",
+      "Preparing to unpack .../080-glib-networking-common_2.64.2-1ubuntu0.1_all.deb ...\n",
+      "Unpacking glib-networking-common (2.64.2-1ubuntu0.1) ...\n",
+      "Selecting previously unselected package glib-networking-services.\n",
+      "Preparing to unpack .../081-glib-networking-services_2.64.2-1ubuntu0.1_amd64.deb ...\n",
+      "Unpacking glib-networking-services (2.64.2-1ubuntu0.1) ...\n",
+      "Selecting previously unselected package gsettings-desktop-schemas.\n",
+      "Preparing to unpack .../082-gsettings-desktop-schemas_3.36.0-1ubuntu1_all.deb ...\n",
+      "Unpacking gsettings-desktop-schemas (3.36.0-1ubuntu1) ...\n",
+      "Selecting previously unselected package glib-networking:amd64.\n",
+      "Preparing to unpack .../083-glib-networking_2.64.2-1ubuntu0.1_amd64.deb ...\n",
+      "Unpacking glib-networking:amd64 (2.64.2-1ubuntu0.1) ...\n",
+      "Selecting previously unselected package libcdparanoia0:amd64.\n",
+      "Preparing to unpack .../084-libcdparanoia0_3.10.2+debian-13_amd64.deb ...\n",
+      "Unpacking libcdparanoia0:amd64 (3.10.2+debian-13) ...\n",
+      "Selecting previously unselected package libgstreamer1.0-0:amd64.\n",
+      "Preparing to unpack .../085-libgstreamer1.0-0_1.16.2-2_amd64.deb ...\n",
+      "Unpacking libgstreamer1.0-0:amd64 (1.16.2-2) ...\n",
+      "Selecting previously unselected package liborc-0.4-0:amd64.\n",
+      "Preparing to unpack .../086-liborc-0.4-0_1%3a0.4.31-1_amd64.deb ...\n",
+      "Unpacking liborc-0.4-0:amd64 (1:0.4.31-1) ...\n",
+      "Selecting previously unselected package libgstreamer-plugins-base1.0-0:amd64.\n",
+      "Preparing to unpack .../087-libgstreamer-plugins-base1.0-0_1.16.2-4ubuntu0.1_amd64.deb ...\n",
+      "Unpacking libgstreamer-plugins-base1.0-0:amd64 (1.16.2-4ubuntu0.1) ...\n",
+      "Selecting previously unselected package libopus0:amd64.\n",
+      "Preparing to unpack .../088-libopus0_1.3.1-0ubuntu1_amd64.deb ...\n",
+      "Unpacking libopus0:amd64 (1.3.1-0ubuntu1) ...\n",
+      "Selecting previously unselected package libtheora0:amd64.\n",
+      "Preparing to unpack .../089-libtheora0_1.1.1+dfsg.1-15ubuntu2_amd64.deb ...\n",
+      "Unpacking libtheora0:amd64 (1.1.1+dfsg.1-15ubuntu2) ...\n",
+      "Selecting previously unselected package libvisual-0.4-0:amd64.\n",
+      "Preparing to unpack .../090-libvisual-0.4-0_0.4.0-17_amd64.deb ...\n",
+      "Unpacking libvisual-0.4-0:amd64 (0.4.0-17) ...\n",
+      "Selecting previously unselected package libvorbisenc2:amd64.\n",
+      "Preparing to unpack .../091-libvorbisenc2_1.3.6-2ubuntu1_amd64.deb ...\n",
+      "Unpacking libvorbisenc2:amd64 (1.3.6-2ubuntu1) ...\n",
+      "Selecting previously unselected package gstreamer1.0-plugins-base:amd64.\n",
+      "Preparing to unpack .../092-gstreamer1.0-plugins-base_1.16.2-4ubuntu0.1_amd64.deb ...\n",
+      "Unpacking gstreamer1.0-plugins-base:amd64 (1.16.2-4ubuntu0.1) ...\n",
+      "Selecting previously unselected package libva2:amd64.\n",
+      "Preparing to unpack .../093-libva2_2.7.0-2_amd64.deb ...\n",
+      "Unpacking libva2:amd64 (2.7.0-2) ...\n",
+      "Selecting previously unselected package libigdgmm11:amd64.\n",
+      "Preparing to unpack .../094-libigdgmm11_20.1.1+ds1-1_amd64.deb ...\n",
+      "Unpacking libigdgmm11:amd64 (20.1.1+ds1-1) ...\n",
+      "Selecting previously unselected package libpciaccess0:amd64.\n",
+      "Preparing to unpack .../095-libpciaccess0_0.16-0ubuntu1_amd64.deb ...\n",
+      "Unpacking libpciaccess0:amd64 (0.16-0ubuntu1) ...\n",
+      "Selecting previously unselected package intel-media-va-driver:amd64.\n",
+      "Preparing to unpack .../096-intel-media-va-driver_20.1.1+dfsg1-1_amd64.deb ...\n",
+      "Unpacking intel-media-va-driver:amd64 (20.1.1+dfsg1-1) ...\n",
+      "Selecting previously unselected package libaacs0:amd64.\n",
+      "Preparing to unpack .../097-libaacs0_0.9.0-2_amd64.deb ...\n",
+      "Unpacking libaacs0:amd64 (0.9.0-2) ...\n",
+      "Selecting previously unselected package libaom0:amd64.\n",
+      "Preparing to unpack .../098-libaom0_1.0.0.errata1-3build1_amd64.deb ...\n",
+      "Unpacking libaom0:amd64 (1.0.0.errata1-3build1) ...\n",
+      "Selecting previously unselected package libarpack2:amd64.\n",
+      "Preparing to unpack .../099-libarpack2_3.7.0-3_amd64.deb ...\n",
+      "Unpacking libarpack2:amd64 (3.7.0-3) ...\n",
+      "Selecting previously unselected package libsuperlu5:amd64.\n",
+      "Preparing to unpack .../100-libsuperlu5_5.2.1+dfsg1-4_amd64.deb ...\n",
+      "Unpacking libsuperlu5:amd64 (5.2.1+dfsg1-4) ...\n",
+      "Selecting previously unselected package libarmadillo9.\n",
+      "Preparing to unpack .../101-libarmadillo9_1%3a9.800.4+dfsg-1build1_amd64.deb ...\n",
+      "Unpacking libarmadillo9 (1:9.800.4+dfsg-1build1) ...\n",
+      "Selecting previously unselected package libatk1.0-data.\n",
+      "Preparing to unpack .../102-libatk1.0-data_2.35.1-1ubuntu2_all.deb ...\n",
+      "Unpacking libatk1.0-data (2.35.1-1ubuntu2) ...\n",
+      "Selecting previously unselected package libatk1.0-0:amd64.\n",
+      "Preparing to unpack .../103-libatk1.0-0_2.35.1-1ubuntu2_amd64.deb ...\n",
+      "Unpacking libatk1.0-0:amd64 (2.35.1-1ubuntu2) ...\n",
+      "Selecting previously unselected package libatk-bridge2.0-0:amd64.\n",
+      "Preparing to unpack .../104-libatk-bridge2.0-0_2.34.2-0ubuntu2~20.04.1_amd64.deb ...\n",
+      "Unpacking libatk-bridge2.0-0:amd64 (2.34.2-0ubuntu2~20.04.1) ...\n",
+      "Selecting previously unselected package libavahi-common-data:amd64.\n",
+      "Preparing to unpack .../105-libavahi-common-data_0.7-4ubuntu7.1_amd64.deb ...\n",
+      "Unpacking libavahi-common-data:amd64 (0.7-4ubuntu7.1) ...\n",
+      "Selecting previously unselected package libavahi-common3:amd64.\n",
+      "Preparing to unpack .../106-libavahi-common3_0.7-4ubuntu7.1_amd64.deb ...\n",
+      "Unpacking libavahi-common3:amd64 (0.7-4ubuntu7.1) ...\n",
+      "Selecting previously unselected package libavahi-client3:amd64.\n",
+      "Preparing to unpack .../107-libavahi-client3_0.7-4ubuntu7.1_amd64.deb ...\n",
+      "Unpacking libavahi-client3:amd64 (0.7-4ubuntu7.1) ...\n",
+      "Selecting previously unselected package libva-drm2:amd64.\n",
+      "Preparing to unpack .../108-libva-drm2_2.7.0-2_amd64.deb ...\n",
+      "Unpacking libva-drm2:amd64 (2.7.0-2) ...\n",
+      "Selecting previously unselected package libxfixes3:amd64.\n",
+      "Preparing to unpack .../109-libxfixes3_1%3a5.0.3-2_amd64.deb ...\n",
+      "Unpacking libxfixes3:amd64 (1:5.0.3-2) ...\n",
+      "Selecting previously unselected package libva-x11-2:amd64.\n",
+      "Preparing to unpack .../110-libva-x11-2_2.7.0-2_amd64.deb ...\n",
+      "Unpacking libva-x11-2:amd64 (2.7.0-2) ...\n",
+      "Selecting previously unselected package libvdpau1:amd64.\n",
+      "Preparing to unpack .../111-libvdpau1_1.3-1ubuntu2_amd64.deb ...\n",
+      "Unpacking libvdpau1:amd64 (1.3-1ubuntu2) ...\n",
+      "Selecting previously unselected package ocl-icd-libopencl1:amd64.\n",
+      "Preparing to unpack .../112-ocl-icd-libopencl1_2.2.11-1ubuntu1_amd64.deb ...\n",
+      "Unpacking ocl-icd-libopencl1:amd64 (2.2.11-1ubuntu1) ...\n",
+      "Selecting previously unselected package libavutil56:amd64.\n",
+      "Preparing to unpack .../113-libavutil56_7%3a4.2.4-1ubuntu0.1_amd64.deb ...\n",
+      "Unpacking libavutil56:amd64 (7:4.2.4-1ubuntu0.1) ...\n",
+      "Selecting previously unselected package libcodec2-0.9:amd64.\n",
+      "Preparing to unpack .../114-libcodec2-0.9_0.9.2-2_amd64.deb ...\n",
+      "Unpacking libcodec2-0.9:amd64 (0.9.2-2) ...\n",
+      "Selecting previously unselected package libgsm1:amd64.\n",
+      "Preparing to unpack .../115-libgsm1_1.0.18-2_amd64.deb ...\n",
+      "Unpacking libgsm1:amd64 (1.0.18-2) ...\n",
+      "Selecting previously unselected package libmp3lame0:amd64.\n",
+      "Preparing to unpack .../116-libmp3lame0_3.100-3_amd64.deb ...\n",
+      "Unpacking libmp3lame0:amd64 (3.100-3) ...\n",
+      "Selecting previously unselected package libopenjp2-7:amd64.\n",
+      "Preparing to unpack .../117-libopenjp2-7_2.3.1-1ubuntu4.20.04.1_amd64.deb ...\n",
+      "Unpacking libopenjp2-7:amd64 (2.3.1-1ubuntu4.20.04.1) ...\n",
+      "Selecting previously unselected package libshine3:amd64.\n",
+      "Preparing to unpack .../118-libshine3_3.1.1-2_amd64.deb ...\n",
+      "Unpacking libshine3:amd64 (3.1.1-2) ...\n",
+      "Selecting previously unselected package libsnappy1v5:amd64.\n",
+      "Preparing to unpack .../119-libsnappy1v5_1.1.8-1build1_amd64.deb ...\n",
+      "Unpacking libsnappy1v5:amd64 (1.1.8-1build1) ...\n",
+      "Selecting previously unselected package libspeex1:amd64.\n",
+      "Preparing to unpack .../120-libspeex1_1.2~rc1.2-1.1ubuntu1_amd64.deb ...\n",
+      "Unpacking libspeex1:amd64 (1.2~rc1.2-1.1ubuntu1) ...\n",
+      "Selecting previously unselected package libsoxr0:amd64.\n",
+      "Preparing to unpack .../121-libsoxr0_0.1.3-2build1_amd64.deb ...\n",
+      "Unpacking libsoxr0:amd64 (0.1.3-2build1) ...\n",
+      "Selecting previously unselected package libswresample3:amd64.\n",
+      "Preparing to unpack .../122-libswresample3_7%3a4.2.4-1ubuntu0.1_amd64.deb ...\n",
+      "Unpacking libswresample3:amd64 (7:4.2.4-1ubuntu0.1) ...\n",
+      "Selecting previously unselected package libtwolame0:amd64.\n",
+      "Preparing to unpack .../123-libtwolame0_0.4.0-2_amd64.deb ...\n",
+      "Unpacking libtwolame0:amd64 (0.4.0-2) ...\n",
+      "Selecting previously unselected package libvpx6:amd64.\n",
+      "Preparing to unpack .../124-libvpx6_1.8.2-1build1_amd64.deb ...\n",
+      "Unpacking libvpx6:amd64 (1.8.2-1build1) ...\n",
+      "Selecting previously unselected package libwavpack1:amd64.\n",
+      "Preparing to unpack .../125-libwavpack1_5.2.0-1ubuntu0.1_amd64.deb ...\n",
+      "Unpacking libwavpack1:amd64 (5.2.0-1ubuntu0.1) ...\n",
+      "Selecting previously unselected package libwebpmux3:amd64.\n",
+      "Preparing to unpack .../126-libwebpmux3_0.6.1-2ubuntu0.20.04.1_amd64.deb ...\n",
+      "Unpacking libwebpmux3:amd64 (0.6.1-2ubuntu0.20.04.1) ...\n",
+      "Selecting previously unselected package libx264-155:amd64.\n",
+      "Preparing to unpack .../127-libx264-155_2%3a0.155.2917+git0a84d98-2_amd64.deb ...\n",
+      "Unpacking libx264-155:amd64 (2:0.155.2917+git0a84d98-2) ...\n",
+      "Selecting previously unselected package libx265-179:amd64.\n",
+      "Preparing to unpack .../128-libx265-179_3.2.1-1build1_amd64.deb ...\n",
+      "Unpacking libx265-179:amd64 (3.2.1-1build1) ...\n",
+      "Selecting previously unselected package libxvidcore4:amd64.\n",
+      "Preparing to unpack .../129-libxvidcore4_2%3a1.3.7-1_amd64.deb ...\n",
+      "Unpacking libxvidcore4:amd64 (2:1.3.7-1) ...\n",
+      "Selecting previously unselected package libzvbi-common.\n",
+      "Preparing to unpack .../130-libzvbi-common_0.2.35-17_all.deb ...\n",
+      "Unpacking libzvbi-common (0.2.35-17) ...\n",
+      "Selecting previously unselected package libzvbi0:amd64.\n",
+      "Preparing to unpack .../131-libzvbi0_0.2.35-17_amd64.deb ...\n",
+      "Unpacking libzvbi0:amd64 (0.2.35-17) ...\n",
+      "Selecting previously unselected package libavcodec58:amd64.\n",
+      "Preparing to unpack .../132-libavcodec58_7%3a4.2.4-1ubuntu0.1_amd64.deb ...\n",
+      "Unpacking libavcodec58:amd64 (7:4.2.4-1ubuntu0.1) ...\n",
+      "Selecting previously unselected package libbluray2:amd64.\n",
+      "Preparing to unpack .../133-libbluray2_1%3a1.2.0-1_amd64.deb ...\n",
+      "Unpacking libbluray2:amd64 (1:1.2.0-1) ...\n",
+      "Selecting previously unselected package libchromaprint1:amd64.\n",
+      "Preparing to unpack .../134-libchromaprint1_1.4.3-3build1_amd64.deb ...\n",
+      "Unpacking libchromaprint1:amd64 (1.4.3-3build1) ...\n",
+      "Selecting previously unselected package libgme0:amd64.\n",
+      "Preparing to unpack .../135-libgme0_0.6.2-1build1_amd64.deb ...\n",
+      "Unpacking libgme0:amd64 (0.6.2-1build1) ...\n",
+      "Selecting previously unselected package libmpg123-0:amd64.\n",
+      "Preparing to unpack .../136-libmpg123-0_1.25.13-1_amd64.deb ...\n",
+      "Unpacking libmpg123-0:amd64 (1.25.13-1) ...\n",
+      "Selecting previously unselected package libopenmpt0:amd64.\n",
+      "Preparing to unpack .../137-libopenmpt0_0.4.11-1build1_amd64.deb ...\n",
+      "Unpacking libopenmpt0:amd64 (0.4.11-1build1) ...\n",
+      "Selecting previously unselected package libssh-gcrypt-4:amd64.\n",
+      "Preparing to unpack .../138-libssh-gcrypt-4_0.9.3-2ubuntu2.2_amd64.deb ...\n",
+      "Unpacking libssh-gcrypt-4:amd64 (0.9.3-2ubuntu2.2) ...\n",
+      "Selecting previously unselected package libavformat58:amd64.\n",
+      "Preparing to unpack .../139-libavformat58_7%3a4.2.4-1ubuntu0.1_amd64.deb ...\n",
+      "Unpacking libavformat58:amd64 (7:4.2.4-1ubuntu0.1) ...\n",
+      "Selecting previously unselected package libbdplus0:amd64.\n",
+      "Preparing to unpack .../140-libbdplus0_0.1.2-3_amd64.deb ...\n",
+      "Unpacking libbdplus0:amd64 (0.1.2-3) ...\n",
+      "Selecting previously unselected package libevent-2.1-7:amd64.\n",
+      "Preparing to unpack .../141-libevent-2.1-7_2.1.11-stable-1_amd64.deb ...\n",
+      "Unpacking libevent-2.1-7:amd64 (2.1.11-stable-1) ...\n",
+      "Selecting previously unselected package libevent-core-2.1-7:amd64.\n",
+      "Preparing to unpack .../142-libevent-core-2.1-7_2.1.11-stable-1_amd64.deb ...\n",
+      "Unpacking libevent-core-2.1-7:amd64 (2.1.11-stable-1) ...\n",
+      "Selecting previously unselected package libevent-pthreads-2.1-7:amd64.\n",
+      "Preparing to unpack .../143-libevent-pthreads-2.1-7_2.1.11-stable-1_amd64.deb ...\n",
+      "Unpacking libevent-pthreads-2.1-7:amd64 (2.1.11-stable-1) ...\n",
+      "Selecting previously unselected package libpsm-infinipath1.\n",
+      "Preparing to unpack .../144-libpsm-infinipath1_3.3+20.604758e7-6_amd64.deb ...\n",
+      "Unpacking libpsm-infinipath1 (3.3+20.604758e7-6) ...\n",
+      "Selecting previously unselected package libpsm2-2.\n",
+      "Preparing to unpack .../145-libpsm2-2_11.2.86-1_amd64.deb ...\n",
+      "Unpacking libpsm2-2 (11.2.86-1) ...\n",
+      "Selecting previously unselected package libfabric1.\n",
+      "Preparing to unpack .../146-libfabric1_1.6.2-3_amd64.deb ...\n",
+      "Unpacking libfabric1 (1.6.2-3) ...\n",
+      "Selecting previously unselected package libhwloc15:amd64.\n",
+      "Preparing to unpack .../147-libhwloc15_2.1.0+dfsg-4_amd64.deb ...\n",
+      "Unpacking libhwloc15:amd64 (2.1.0+dfsg-4) ...\n",
+      "Selecting previously unselected package libxnvctrl0:amd64.\n",
+      "Preparing to unpack .../148-libxnvctrl0_470.57.01-0ubuntu0.20.04.2_amd64.deb ...\n",
+      "Unpacking libxnvctrl0:amd64 (470.57.01-0ubuntu0.20.04.2) ...\n",
+      "Selecting previously unselected package libhwloc-plugins:amd64.\n",
+      "Preparing to unpack .../149-libhwloc-plugins_2.1.0+dfsg-4_amd64.deb ...\n",
+      "Unpacking libhwloc-plugins:amd64 (2.1.0+dfsg-4) ...\n",
+      "Selecting previously unselected package libpmix2:amd64.\n",
+      "Preparing to unpack .../150-libpmix2_3.1.5-1_amd64.deb ...\n",
+      "Unpacking libpmix2:amd64 (3.1.5-1) ...\n",
+      "Selecting previously unselected package libopenmpi3:amd64.\n",
+      "Preparing to unpack .../151-libopenmpi3_4.0.3-0ubuntu1_amd64.deb ...\n",
+      "Unpacking libopenmpi3:amd64 (4.0.3-0ubuntu1) ...\n",
+      "Selecting previously unselected package libcaf-openmpi-3:amd64.\n",
+      "Preparing to unpack .../152-libcaf-openmpi-3_2.8.0-1_amd64.deb ...\n",
+      "Unpacking libcaf-openmpi-3:amd64 (2.8.0-1) ...\n",
+      "Selecting previously unselected package libcfitsio8:amd64.\n",
+      "Preparing to unpack .../153-libcfitsio8_3.470-3_amd64.deb ...\n",
+      "Unpacking libcfitsio8:amd64 (3.470-3) ...\n",
+      "Selecting previously unselected package libcharls2:amd64.\n",
+      "Preparing to unpack .../154-libcharls2_2.0.0+dfsg-1build1_amd64.deb ...\n",
+      "Unpacking libcharls2:amd64 (2.0.0+dfsg-1build1) ...\n",
+      "Selecting previously unselected package libcoarrays-dev:amd64.\n",
+      "Preparing to unpack .../155-libcoarrays-dev_2.8.0-1_amd64.deb ...\n",
+      "Unpacking libcoarrays-dev:amd64 (2.8.0-1) ...\n",
+      "Selecting previously unselected package openmpi-common.\n",
+      "Preparing to unpack .../156-openmpi-common_4.0.3-0ubuntu1_all.deb ...\n",
+      "Unpacking openmpi-common (4.0.3-0ubuntu1) ...\n",
+      "Selecting previously unselected package openmpi-bin.\n",
+      "Preparing to unpack .../157-openmpi-bin_4.0.3-0ubuntu1_amd64.deb ...\n",
+      "Unpacking openmpi-bin (4.0.3-0ubuntu1) ...\n",
+      "Selecting previously unselected package libcoarrays-openmpi-dev:amd64.\n",
+      "Preparing to unpack .../158-libcoarrays-openmpi-dev_2.8.0-1_amd64.deb ...\n",
+      "Unpacking libcoarrays-openmpi-dev:amd64 (2.8.0-1) ...\n",
+      "Selecting previously unselected package liblcms2-2:amd64.\n",
+      "Preparing to unpack .../159-liblcms2-2_2.9-4_amd64.deb ...\n",
+      "Unpacking liblcms2-2:amd64 (2.9-4) ...\n",
+      "Selecting previously unselected package libcolord2:amd64.\n",
+      "Preparing to unpack .../160-libcolord2_1.4.4-2_amd64.deb ...\n",
+      "Unpacking libcolord2:amd64 (1.4.4-2) ...\n",
+      "Selecting previously unselected package libcups2:amd64.\n",
+      "Preparing to unpack .../161-libcups2_2.3.1-9ubuntu1.1_amd64.deb ...\n",
+      "Unpacking libcups2:amd64 (2.3.1-9ubuntu1.1) ...\n",
+      "Selecting previously unselected package libdap25:amd64.\n",
+      "Preparing to unpack .../162-libdap25_3.20.5-1_amd64.deb ...\n",
+      "Unpacking libdap25:amd64 (3.20.5-1) ...\n",
+      "Selecting previously unselected package libdapclient6v5:amd64.\n",
+      "Preparing to unpack .../163-libdapclient6v5_3.20.5-1_amd64.deb ...\n",
+      "Unpacking libdapclient6v5:amd64 (3.20.5-1) ...\n",
+      "Selecting previously unselected package libdrm-amdgpu1:amd64.\n",
+      "Preparing to unpack .../164-libdrm-amdgpu1_2.4.105-3~20.04.2_amd64.deb ...\n",
+      "Unpacking libdrm-amdgpu1:amd64 (2.4.105-3~20.04.2) ...\n",
+      "Selecting previously unselected package libdrm-intel1:amd64.\n",
+      "Preparing to unpack .../165-libdrm-intel1_2.4.105-3~20.04.2_amd64.deb ...\n",
+      "Unpacking libdrm-intel1:amd64 (2.4.105-3~20.04.2) ...\n",
+      "Selecting previously unselected package libdrm-nouveau2:amd64.\n",
+      "Preparing to unpack .../166-libdrm-nouveau2_2.4.105-3~20.04.2_amd64.deb ...\n",
+      "Unpacking libdrm-nouveau2:amd64 (2.4.105-3~20.04.2) ...\n",
+      "Selecting previously unselected package libdrm-radeon1:amd64.\n",
+      "Preparing to unpack .../167-libdrm-radeon1_2.4.105-3~20.04.2_amd64.deb ...\n",
+      "Unpacking libdrm-radeon1:amd64 (2.4.105-3~20.04.2) ...\n",
+      "Selecting previously unselected package libepoxy0:amd64.\n",
+      "Preparing to unpack .../168-libepoxy0_1.5.4-1_amd64.deb ...\n",
+      "Unpacking libepoxy0:amd64 (1.5.4-1) ...\n",
+      "Selecting previously unselected package libepsilon1:amd64.\n",
+      "Preparing to unpack .../169-libepsilon1_0.9.2+dfsg-4_amd64.deb ...\n",
+      "Unpacking libepsilon1:amd64 (0.9.2+dfsg-4) ...\n",
+      "Selecting previously unselected package libevent-extra-2.1-7:amd64.\n",
+      "Preparing to unpack .../170-libevent-extra-2.1-7_2.1.11-stable-1_amd64.deb ...\n",
+      "Unpacking libevent-extra-2.1-7:amd64 (2.1.11-stable-1) ...\n",
+      "Selecting previously unselected package libevent-openssl-2.1-7:amd64.\n",
+      "Preparing to unpack .../171-libevent-openssl-2.1-7_2.1.11-stable-1_amd64.deb ...\n",
+      "Unpacking libevent-openssl-2.1-7:amd64 (2.1.11-stable-1) ...\n",
+      "Selecting previously unselected package libevent-dev.\n",
+      "Preparing to unpack .../172-libevent-dev_2.1.11-stable-1_amd64.deb ...\n",
+      "Unpacking libevent-dev (2.1.11-stable-1) ...\n",
+      "Selecting previously unselected package libfyba0:amd64.\n",
+      "Preparing to unpack .../173-libfyba0_4.1.1-6build1_amd64.deb ...\n",
+      "Unpacking libfyba0:amd64 (4.1.1-6build1) ...\n",
+      "Selecting previously unselected package libfreexl1:amd64.\n",
+      "Preparing to unpack .../174-libfreexl1_1.0.5-3_amd64.deb ...\n",
+      "Unpacking libfreexl1:amd64 (1.0.5-3) ...\n",
+      "Selecting previously unselected package libgeos-3.8.0:amd64.\n",
+      "Preparing to unpack .../175-libgeos-3.8.0_3.8.0-1build1_amd64.deb ...\n",
+      "Unpacking libgeos-3.8.0:amd64 (3.8.0-1build1) ...\n",
+      "Selecting previously unselected package libgeos-c1v5:amd64.\n",
+      "Preparing to unpack .../176-libgeos-c1v5_3.8.0-1build1_amd64.deb ...\n",
+      "Unpacking libgeos-c1v5:amd64 (3.8.0-1build1) ...\n",
+      "Selecting previously unselected package proj-data.\n",
+      "Preparing to unpack .../177-proj-data_6.3.1-1_all.deb ...\n",
+      "Unpacking proj-data (6.3.1-1) ...\n",
+      "Selecting previously unselected package libproj15:amd64.\n",
+      "Preparing to unpack .../178-libproj15_6.3.1-1_amd64.deb ...\n",
+      "Unpacking libproj15:amd64 (6.3.1-1) ...\n",
+      "Selecting previously unselected package libgeotiff5:amd64.\n",
+      "Preparing to unpack .../179-libgeotiff5_1.5.1-2_amd64.deb ...\n",
+      "Unpacking libgeotiff5:amd64 (1.5.1-2) ...\n",
+      "Selecting previously unselected package libgif7:amd64.\n",
+      "Preparing to unpack .../180-libgif7_5.1.9-1_amd64.deb ...\n",
+      "Unpacking libgif7:amd64 (5.1.9-1) ...\n",
+      "Selecting previously unselected package libhdf4-0-alt.\n",
+      "Preparing to unpack .../181-libhdf4-0-alt_4.2.14-1ubuntu1_amd64.deb ...\n",
+      "Unpacking libhdf4-0-alt (4.2.14-1ubuntu1) ...\n",
+      "Selecting previously unselected package libminizip1:amd64.\n",
+      "Preparing to unpack .../182-libminizip1_1.1-8build1_amd64.deb ...\n",
+      "Unpacking libminizip1:amd64 (1.1-8build1) ...\n",
+      "Selecting previously unselected package liburiparser1:amd64.\n",
+      "Preparing to unpack .../183-liburiparser1_0.9.3-2_amd64.deb ...\n",
+      "Unpacking liburiparser1:amd64 (0.9.3-2) ...\n",
+      "Selecting previously unselected package libkmlbase1:amd64.\n",
+      "Preparing to unpack .../184-libkmlbase1_1.3.0-8build1_amd64.deb ...\n",
+      "Unpacking libkmlbase1:amd64 (1.3.0-8build1) ...\n",
+      "Selecting previously unselected package libkmldom1:amd64.\n",
+      "Preparing to unpack .../185-libkmldom1_1.3.0-8build1_amd64.deb ...\n",
+      "Unpacking libkmldom1:amd64 (1.3.0-8build1) ...\n",
+      "Selecting previously unselected package libkmlengine1:amd64.\n",
+      "Preparing to unpack .../186-libkmlengine1_1.3.0-8build1_amd64.deb ...\n",
+      "Unpacking libkmlengine1:amd64 (1.3.0-8build1) ...\n",
+      "Selecting previously unselected package mysql-common.\n",
+      "Preparing to unpack .../187-mysql-common_5.8+1.0.5ubuntu2_all.deb ...\n",
+      "Unpacking mysql-common (5.8+1.0.5ubuntu2) ...\n",
+      "Selecting previously unselected package libmysqlclient21:amd64.\n",
+      "Preparing to unpack .../188-libmysqlclient21_8.0.27-0ubuntu0.20.04.1_amd64.deb ...\n",
+      "Unpacking libmysqlclient21:amd64 (8.0.27-0ubuntu0.20.04.1) ...\n",
+      "Selecting previously unselected package libnetcdf15:amd64.\n",
+      "Preparing to unpack .../189-libnetcdf15_1%3a4.7.3-1_amd64.deb ...\n",
+      "Unpacking libnetcdf15:amd64 (1:4.7.3-1) ...\n",
+      "Selecting previously unselected package libodbc1:amd64.\n",
+      "Preparing to unpack .../190-libodbc1_2.3.6-0.1build1_amd64.deb ...\n",
+      "Unpacking libodbc1:amd64 (2.3.6-0.1build1) ...\n",
+      "Selecting previously unselected package libogdi4.1.\n",
+      "Preparing to unpack .../191-libogdi4.1_4.1.0+ds-1build1_amd64.deb ...\n",
+      "Unpacking libogdi4.1 (4.1.0+ds-1build1) ...\n",
+      "Selecting previously unselected package libnspr4:amd64.\n",
+      "Preparing to unpack .../192-libnspr4_2%3a4.25-1_amd64.deb ...\n",
+      "Unpacking libnspr4:amd64 (2:4.25-1) ...\n",
+      "Selecting previously unselected package libnss3:amd64.\n",
+      "Preparing to unpack .../193-libnss3_2%3a3.49.1-1ubuntu1.6_amd64.deb ...\n",
+      "Unpacking libnss3:amd64 (2:3.49.1-1ubuntu1.6) ...\n",
+      "Selecting previously unselected package libpoppler97:amd64.\n",
+      "Preparing to unpack .../194-libpoppler97_0.86.1-0ubuntu1_amd64.deb ...\n",
+      "Unpacking libpoppler97:amd64 (0.86.1-0ubuntu1) ...\n",
+      "Selecting previously unselected package libpq5:amd64.\n",
+      "Preparing to unpack .../195-libpq5_12.9-0ubuntu0.20.04.1_amd64.deb ...\n",
+      "Unpacking libpq5:amd64 (12.9-0ubuntu0.20.04.1) ...\n",
+      "Selecting previously unselected package libqhull7:amd64.\n",
+      "Preparing to unpack .../196-libqhull7_2015.2-4_amd64.deb ...\n",
+      "Unpacking libqhull7:amd64 (2015.2-4) ...\n",
+      "Selecting previously unselected package libspatialite7:amd64.\n",
+      "Preparing to unpack .../197-libspatialite7_4.3.0a-6build1_amd64.deb ...\n",
+      "Unpacking libspatialite7:amd64 (4.3.0a-6build1) ...\n",
+      "Selecting previously unselected package libxerces-c3.2:amd64.\n",
+      "Preparing to unpack .../198-libxerces-c3.2_3.2.2+debian-1build3_amd64.deb ...\n",
+      "Unpacking libxerces-c3.2:amd64 (3.2.2+debian-1build3) ...\n",
+      "Selecting previously unselected package odbcinst.\n",
+      "Preparing to unpack .../199-odbcinst_2.3.6-0.1build1_amd64.deb ...\n",
+      "Unpacking odbcinst (2.3.6-0.1build1) ...\n",
+      "Selecting previously unselected package odbcinst1debian2:amd64.\n",
+      "Preparing to unpack .../200-odbcinst1debian2_2.3.6-0.1build1_amd64.deb ...\n",
+      "Unpacking odbcinst1debian2:amd64 (2.3.6-0.1build1) ...\n",
+      "Selecting previously unselected package libgdal26.\n",
+      "Preparing to unpack .../201-libgdal26_3.0.4+dfsg-1build3_amd64.deb ...\n",
+      "Unpacking libgdal26 (3.0.4+dfsg-1build3) ...\n",
+      "Selecting previously unselected package libsocket++1:amd64.\n",
+      "Preparing to unpack .../202-libsocket++1_1.12.13-10build1_amd64.deb ...\n",
+      "Unpacking libsocket++1:amd64 (1.12.13-10build1) ...\n",
+      "Selecting previously unselected package libgdcm3.0:amd64.\n",
+      "Preparing to unpack .../203-libgdcm3.0_3.0.5-1.1ubuntu2_amd64.deb ...\n",
+      "Unpacking libgdcm3.0:amd64 (3.0.5-1.1ubuntu2) ...\n",
+      "Selecting previously unselected package libgdk-pixbuf2.0-bin.\n",
+      "Preparing to unpack .../204-libgdk-pixbuf2.0-bin_2.40.0+dfsg-3ubuntu0.2_amd64.deb ...\n",
+      "Unpacking libgdk-pixbuf2.0-bin (2.40.0+dfsg-3ubuntu0.2) ...\n",
+      "Selecting previously unselected package libglapi-mesa:amd64.\n",
+      "Preparing to unpack .../205-libglapi-mesa_21.0.3-0ubuntu0.3~20.04.5_amd64.deb ...\n",
+      "Unpacking libglapi-mesa:amd64 (21.0.3-0ubuntu0.3~20.04.5) ...\n",
+      "Selecting previously unselected package libllvm12:amd64.\n",
+      "Preparing to unpack .../206-libllvm12_1%3a12.0.0-3ubuntu1~20.04.4_amd64.deb ...\n",
+      "Unpacking libllvm12:amd64 (1:12.0.0-3ubuntu1~20.04.4) ...\n",
+      "Selecting previously unselected package libsensors-config.\n",
+      "Preparing to unpack .../207-libsensors-config_1%3a3.6.0-2ubuntu1_all.deb ...\n",
+      "Unpacking libsensors-config (1:3.6.0-2ubuntu1) ...\n",
+      "Selecting previously unselected package libsensors5:amd64.\n",
+      "Preparing to unpack .../208-libsensors5_1%3a3.6.0-2ubuntu1_amd64.deb ...\n",
+      "Unpacking libsensors5:amd64 (1:3.6.0-2ubuntu1) ...\n",
+      "Selecting previously unselected package libvulkan1:amd64.\n",
+      "Preparing to unpack .../209-libvulkan1_1.2.131.2-1_amd64.deb ...\n",
+      "Unpacking libvulkan1:amd64 (1.2.131.2-1) ...\n",
+      "Selecting previously unselected package libgl1-mesa-dri:amd64.\n",
+      "Preparing to unpack .../210-libgl1-mesa-dri_21.0.3-0ubuntu0.3~20.04.5_amd64.deb ...\n",
+      "Unpacking libgl1-mesa-dri:amd64 (21.0.3-0ubuntu0.3~20.04.5) ...\n",
+      "Selecting previously unselected package libglvnd0:amd64.\n",
+      "Preparing to unpack .../211-libglvnd0_1.3.2-1~ubuntu0.20.04.1_amd64.deb ...\n",
+      "Unpacking libglvnd0:amd64 (1.3.2-1~ubuntu0.20.04.1) ...\n",
+      "Selecting previously unselected package libx11-xcb1:amd64.\n",
+      "Preparing to unpack .../212-libx11-xcb1_2%3a1.6.9-2ubuntu1.2_amd64.deb ...\n",
+      "Unpacking libx11-xcb1:amd64 (2:1.6.9-2ubuntu1.2) ...\n",
+      "Selecting previously unselected package libxcb-dri2-0:amd64.\n",
+      "Preparing to unpack .../213-libxcb-dri2-0_1.14-2_amd64.deb ...\n",
+      "Unpacking libxcb-dri2-0:amd64 (1.14-2) ...\n",
+      "Selecting previously unselected package libxcb-dri3-0:amd64.\n",
+      "Preparing to unpack .../214-libxcb-dri3-0_1.14-2_amd64.deb ...\n",
+      "Unpacking libxcb-dri3-0:amd64 (1.14-2) ...\n",
+      "Selecting previously unselected package libxcb-glx0:amd64.\n",
+      "Preparing to unpack .../215-libxcb-glx0_1.14-2_amd64.deb ...\n",
+      "Unpacking libxcb-glx0:amd64 (1.14-2) ...\n",
+      "Selecting previously unselected package libxcb-present0:amd64.\n",
+      "Preparing to unpack .../216-libxcb-present0_1.14-2_amd64.deb ...\n",
+      "Unpacking libxcb-present0:amd64 (1.14-2) ...\n",
+      "Selecting previously unselected package libxcb-sync1:amd64.\n",
+      "Preparing to unpack .../217-libxcb-sync1_1.14-2_amd64.deb ...\n",
+      "Unpacking libxcb-sync1:amd64 (1.14-2) ...\n",
+      "Selecting previously unselected package libxcb-xfixes0:amd64.\n",
+      "Preparing to unpack .../218-libxcb-xfixes0_1.14-2_amd64.deb ...\n",
+      "Unpacking libxcb-xfixes0:amd64 (1.14-2) ...\n",
+      "Selecting previously unselected package libxshmfence1:amd64.\n",
+      "Preparing to unpack .../219-libxshmfence1_1.3-1_amd64.deb ...\n",
+      "Unpacking libxshmfence1:amd64 (1.3-1) ...\n",
+      "Selecting previously unselected package libxxf86vm1:amd64.\n",
+      "Preparing to unpack .../220-libxxf86vm1_1%3a1.1.4-1build1_amd64.deb ...\n",
+      "Unpacking libxxf86vm1:amd64 (1:1.1.4-1build1) ...\n",
+      "Selecting previously unselected package libglx-mesa0:amd64.\n",
+      "Preparing to unpack .../221-libglx-mesa0_21.0.3-0ubuntu0.3~20.04.5_amd64.deb ...\n",
+      "Unpacking libglx-mesa0:amd64 (21.0.3-0ubuntu0.3~20.04.5) ...\n",
+      "Selecting previously unselected package libglx0:amd64.\n",
+      "Preparing to unpack .../222-libglx0_1.3.2-1~ubuntu0.20.04.1_amd64.deb ...\n",
+      "Unpacking libglx0:amd64 (1.3.2-1~ubuntu0.20.04.1) ...\n",
+      "Selecting previously unselected package libgl1:amd64.\n",
+      "Preparing to unpack .../223-libgl1_1.3.2-1~ubuntu0.20.04.1_amd64.deb ...\n",
+      "Unpacking libgl1:amd64 (1.3.2-1~ubuntu0.20.04.1) ...\n",
+      "Selecting previously unselected package libgl2ps1.4.\n",
+      "Preparing to unpack .../224-libgl2ps1.4_1.4.0+dfsg1-2_amd64.deb ...\n",
+      "Unpacking libgl2ps1.4 (1.4.0+dfsg1-2) ...\n",
+      "Selecting previously unselected package libjson-glib-1.0-common.\n",
+      "Preparing to unpack .../225-libjson-glib-1.0-common_1.4.4-2ubuntu2_all.deb ...\n",
+      "Unpacking libjson-glib-1.0-common (1.4.4-2ubuntu2) ...\n",
+      "Selecting previously unselected package libjson-glib-1.0-0:amd64.\n",
+      "Preparing to unpack .../226-libjson-glib-1.0-0_1.4.4-2ubuntu2_amd64.deb ...\n",
+      "Unpacking libjson-glib-1.0-0:amd64 (1.4.4-2ubuntu2) ...\n",
+      "Selecting previously unselected package libsoup2.4-1:amd64.\n",
+      "Preparing to unpack .../227-libsoup2.4-1_2.70.0-1_amd64.deb ...\n",
+      "Unpacking libsoup2.4-1:amd64 (2.70.0-1) ...\n",
+      "Selecting previously unselected package libsoup-gnome2.4-1:amd64.\n",
+      "Preparing to unpack .../228-libsoup-gnome2.4-1_2.70.0-1_amd64.deb ...\n",
+      "Unpacking libsoup-gnome2.4-1:amd64 (2.70.0-1) ...\n",
+      "Selecting previously unselected package librest-0.7-0:amd64.\n",
+      "Preparing to unpack .../229-librest-0.7-0_0.8.1-1_amd64.deb ...\n",
+      "Unpacking librest-0.7-0:amd64 (0.8.1-1) ...\n",
+      "Selecting previously unselected package libwayland-client0:amd64.\n",
+      "Preparing to unpack .../230-libwayland-client0_1.18.0-1_amd64.deb ...\n",
+      "Unpacking libwayland-client0:amd64 (1.18.0-1) ...\n",
+      "Selecting previously unselected package libwayland-cursor0:amd64.\n",
+      "Preparing to unpack .../231-libwayland-cursor0_1.18.0-1_amd64.deb ...\n",
+      "Unpacking libwayland-cursor0:amd64 (1.18.0-1) ...\n",
+      "Selecting previously unselected package libwayland-egl1:amd64.\n",
+      "Preparing to unpack .../232-libwayland-egl1_1.18.0-1_amd64.deb ...\n",
+      "Unpacking libwayland-egl1:amd64 (1.18.0-1) ...\n",
+      "Selecting previously unselected package libxcomposite1:amd64.\n",
+      "Preparing to unpack .../233-libxcomposite1_1%3a0.4.5-1_amd64.deb ...\n",
+      "Unpacking libxcomposite1:amd64 (1:0.4.5-1) ...\n",
+      "Selecting previously unselected package libxcursor1:amd64.\n",
+      "Preparing to unpack .../234-libxcursor1_1%3a1.2.0-2_amd64.deb ...\n",
+      "Unpacking libxcursor1:amd64 (1:1.2.0-2) ...\n",
+      "Selecting previously unselected package libxdamage1:amd64.\n",
+      "Preparing to unpack .../235-libxdamage1_1%3a1.1.5-2_amd64.deb ...\n",
+      "Unpacking libxdamage1:amd64 (1:1.1.5-2) ...\n",
+      "Selecting previously unselected package libxi6:amd64.\n",
+      "Preparing to unpack .../236-libxi6_2%3a1.7.10-0ubuntu1_amd64.deb ...\n",
+      "Unpacking libxi6:amd64 (2:1.7.10-0ubuntu1) ...\n",
+      "Selecting previously unselected package libxinerama1:amd64.\n",
+      "Preparing to unpack .../237-libxinerama1_2%3a1.1.4-2_amd64.deb ...\n",
+      "Unpacking libxinerama1:amd64 (2:1.1.4-2) ...\n",
+      "Selecting previously unselected package libxkbcommon0:amd64.\n",
+      "Preparing to unpack .../238-libxkbcommon0_0.10.0-1_amd64.deb ...\n",
+      "Unpacking libxkbcommon0:amd64 (0.10.0-1) ...\n",
+      "Selecting previously unselected package libxrandr2:amd64.\n",
+      "Preparing to unpack .../239-libxrandr2_2%3a1.5.2-0ubuntu1_amd64.deb ...\n",
+      "Unpacking libxrandr2:amd64 (2:1.5.2-0ubuntu1) ...\n",
+      "Selecting previously unselected package libgtk-3-common.\n",
+      "Preparing to unpack .../240-libgtk-3-common_3.24.20-0ubuntu1_all.deb ...\n",
+      "Unpacking libgtk-3-common (3.24.20-0ubuntu1) ...\n",
+      "Selecting previously unselected package libgtk-3-0:amd64.\n",
+      "Preparing to unpack .../241-libgtk-3-0_3.24.20-0ubuntu1_amd64.deb ...\n",
+      "Unpacking libgtk-3-0:amd64 (3.24.20-0ubuntu1) ...\n",
+      "Selecting previously unselected package libgtk-3-bin.\n",
+      "Preparing to unpack .../242-libgtk-3-bin_3.24.20-0ubuntu1_amd64.deb ...\n",
+      "Unpacking libgtk-3-bin (3.24.20-0ubuntu1) ...\n",
+      "Selecting previously unselected package libhdf5-openmpi-103:amd64.\n",
+      "Preparing to unpack .../243-libhdf5-openmpi-103_1.10.4+repack-11ubuntu1_amd64.deb ...\n",
+      "Unpacking libhdf5-openmpi-103:amd64 (1.10.4+repack-11ubuntu1) ...\n",
+      "Selecting previously unselected package libice6:amd64.\n",
+      "Preparing to unpack .../244-libice6_2%3a1.0.10-0ubuntu1_amd64.deb ...\n",
+      "Unpacking libice6:amd64 (2:1.0.10-0ubuntu1) ...\n",
+      "Selecting previously unselected package libilmbase24:amd64.\n",
+      "Preparing to unpack .../245-libilmbase24_2.3.0-6build1_amd64.deb ...\n",
+      "Unpacking libilmbase24:amd64 (2.3.0-6build1) ...\n",
+      "Selecting previously unselected package liblept5:amd64.\n",
+      "Preparing to unpack .../246-liblept5_1.79.0-1_amd64.deb ...\n",
+      "Unpacking liblept5:amd64 (1.79.0-1) ...\n",
+      "Selecting previously unselected package libltdl-dev:amd64.\n",
+      "Preparing to unpack .../247-libltdl-dev_2.4.6-14_amd64.deb ...\n",
+      "Unpacking libltdl-dev:amd64 (2.4.6-14) ...\n",
+      "Selecting previously unselected package libnetcdf-c++4.\n",
+      "Preparing to unpack .../248-libnetcdf-c++4_4.2-11build2_amd64.deb ...\n",
+      "Unpacking libnetcdf-c++4 (4.2-11build2) ...\n",
+      "Selecting previously unselected package libtbb2:amd64.\n",
+      "Preparing to unpack .../249-libtbb2_2020.1-2_amd64.deb ...\n",
+      "Unpacking libtbb2:amd64 (2020.1-2) ...\n",
+      "Selecting previously unselected package libopencv-core4.2:amd64.\n",
+      "Preparing to unpack .../250-libopencv-core4.2_4.2.0+dfsg-5_amd64.deb ...\n",
+      "Unpacking libopencv-core4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Selecting previously unselected package libopencv-flann4.2:amd64.\n",
+      "Preparing to unpack .../251-libopencv-flann4.2_4.2.0+dfsg-5_amd64.deb ...\n",
+      "Unpacking libopencv-flann4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Selecting previously unselected package libopencv-imgproc4.2:amd64.\n",
+      "Preparing to unpack .../252-libopencv-imgproc4.2_4.2.0+dfsg-5_amd64.deb ...\n",
+      "Unpacking libopencv-imgproc4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Selecting previously unselected package libopenexr24:amd64.\n",
+      "Preparing to unpack .../253-libopenexr24_2.3.0-6ubuntu0.5_amd64.deb ...\n",
+      "Unpacking libopenexr24:amd64 (2.3.0-6ubuntu0.5) ...\n",
+      "Selecting previously unselected package libopencv-imgcodecs4.2:amd64.\n",
+      "Preparing to unpack .../254-libopencv-imgcodecs4.2_4.2.0+dfsg-5_amd64.deb ...\n",
+      "Unpacking libopencv-imgcodecs4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Selecting previously unselected package libraw1394-11:amd64.\n",
+      "Preparing to unpack .../255-libraw1394-11_2.1.2-1_amd64.deb ...\n",
+      "Unpacking libraw1394-11:amd64 (2.1.2-1) ...\n",
+      "Selecting previously unselected package libdc1394-22:amd64.\n",
+      "Preparing to unpack .../256-libdc1394-22_2.2.5-2.1_amd64.deb ...\n",
+      "Unpacking libdc1394-22:amd64 (2.2.5-2.1) ...\n",
+      "Selecting previously unselected package libswscale5:amd64.\n",
+      "Preparing to unpack .../257-libswscale5_7%3a4.2.4-1ubuntu0.1_amd64.deb ...\n",
+      "Unpacking libswscale5:amd64 (7:4.2.4-1ubuntu0.1) ...\n",
+      "Selecting previously unselected package libopencv-videoio4.2:amd64.\n",
+      "Preparing to unpack .../258-libopencv-videoio4.2_4.2.0+dfsg-5_amd64.deb ...\n",
+      "Unpacking libopencv-videoio4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Selecting previously unselected package libopencv-highgui4.2:amd64.\n",
+      "Preparing to unpack .../259-libopencv-highgui4.2_4.2.0+dfsg-5_amd64.deb ...\n",
+      "Unpacking libopencv-highgui4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Selecting previously unselected package libopencv-ml4.2:amd64.\n",
+      "Preparing to unpack .../260-libopencv-ml4.2_4.2.0+dfsg-5_amd64.deb ...\n",
+      "Unpacking libopencv-ml4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Selecting previously unselected package libopencv-features2d4.2:amd64.\n",
+      "Preparing to unpack .../261-libopencv-features2d4.2_4.2.0+dfsg-5_amd64.deb ...\n",
+      "Unpacking libopencv-features2d4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Selecting previously unselected package libopencv-calib3d4.2:amd64.\n",
+      "Preparing to unpack .../262-libopencv-calib3d4.2_4.2.0+dfsg-5_amd64.deb ...\n",
+      "Unpacking libopencv-calib3d4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Selecting previously unselected package libprotobuf17:amd64.\n",
+      "Preparing to unpack .../263-libprotobuf17_3.6.1.3-2ubuntu5_amd64.deb ...\n",
+      "Unpacking libprotobuf17:amd64 (3.6.1.3-2ubuntu5) ...\n",
+      "Selecting previously unselected package libopencv-dnn4.2:amd64.\n",
+      "Preparing to unpack .../264-libopencv-dnn4.2_4.2.0+dfsg-5_amd64.deb ...\n",
+      "Unpacking libopencv-dnn4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Selecting previously unselected package libopencv-objdetect4.2:amd64.\n",
+      "Preparing to unpack .../265-libopencv-objdetect4.2_4.2.0+dfsg-5_amd64.deb ...\n",
+      "Unpacking libopencv-objdetect4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Selecting previously unselected package libopencv-photo4.2:amd64.\n",
+      "Preparing to unpack .../266-libopencv-photo4.2_4.2.0+dfsg-5_amd64.deb ...\n",
+      "Unpacking libopencv-photo4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Selecting previously unselected package libopencv-video4.2:amd64.\n",
+      "Preparing to unpack .../267-libopencv-video4.2_4.2.0+dfsg-5_amd64.deb ...\n",
+      "Unpacking libopencv-video4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Selecting previously unselected package libopencv-shape4.2:amd64.\n",
+      "Preparing to unpack .../268-libopencv-shape4.2_4.2.0+dfsg-5_amd64.deb ...\n",
+      "Unpacking libopencv-shape4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Selecting previously unselected package libopencv-stitching4.2:amd64.\n",
+      "Preparing to unpack .../269-libopencv-stitching4.2_4.2.0+dfsg-5_amd64.deb ...\n",
+      "Unpacking libopencv-stitching4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Selecting previously unselected package libopencv-superres4.2:amd64.\n",
+      "Preparing to unpack .../270-libopencv-superres4.2_4.2.0+dfsg-5_amd64.deb ...\n",
+      "Unpacking libopencv-superres4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Selecting previously unselected package libopencv-videostab4.2:amd64.\n",
+      "Preparing to unpack .../271-libopencv-videostab4.2_4.2.0+dfsg-5_amd64.deb ...\n",
+      "Unpacking libopencv-videostab4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Selecting previously unselected package libsm6:amd64.\n",
+      "Preparing to unpack .../272-libsm6_2%3a1.2.3-1_amd64.deb ...\n",
+      "Unpacking libsm6:amd64 (2:1.2.3-1) ...\n",
+      "Selecting previously unselected package libxt6:amd64.\n",
+      "Preparing to unpack .../273-libxt6_1%3a1.1.5-1_amd64.deb ...\n",
+      "Unpacking libxt6:amd64 (1:1.1.5-1) ...\n",
+      "Selecting previously unselected package libvtk6.3.\n",
+      "Preparing to unpack .../274-libvtk6.3_6.3.0+dfsg2-5build2_amd64.deb ...\n",
+      "Unpacking libvtk6.3 (6.3.0+dfsg2-5build2) ...\n",
+      "Selecting previously unselected package libopencv-viz4.2:amd64.\n",
+      "Preparing to unpack .../275-libopencv-viz4.2_4.2.0+dfsg-5_amd64.deb ...\n",
+      "Unpacking libopencv-viz4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Selecting previously unselected package libtesseract4:amd64.\n",
+      "Preparing to unpack .../276-libtesseract4_4.1.1-2build2_amd64.deb ...\n",
+      "Unpacking libtesseract4:amd64 (4.1.1-2build2) ...\n",
+      "Selecting previously unselected package libopencv-contrib4.2:amd64.\n",
+      "Preparing to unpack .../277-libopencv-contrib4.2_4.2.0+dfsg-5_amd64.deb ...\n",
+      "Unpacking libopencv-contrib4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Selecting previously unselected package libtool.\n",
+      "Preparing to unpack .../278-libtool_2.4.6-14_all.deb ...\n",
+      "Unpacking libtool (2.4.6-14) ...\n",
+      "Selecting previously unselected package libxcb-randr0:amd64.\n",
+      "Preparing to unpack .../279-libxcb-randr0_1.14-2_amd64.deb ...\n",
+      "Unpacking libxcb-randr0:amd64 (1.14-2) ...\n",
+      "Selecting previously unselected package mesa-va-drivers:amd64.\n",
+      "Preparing to unpack .../280-mesa-va-drivers_21.0.3-0ubuntu0.3~20.04.5_amd64.deb ...\n",
+      "Unpacking mesa-va-drivers:amd64 (21.0.3-0ubuntu0.3~20.04.5) ...\n",
+      "Selecting previously unselected package mesa-vdpau-drivers:amd64.\n",
+      "Preparing to unpack .../281-mesa-vdpau-drivers_21.0.3-0ubuntu0.3~20.04.5_amd64.deb ...\n",
+      "Unpacking mesa-vdpau-drivers:amd64 (21.0.3-0ubuntu0.3~20.04.5) ...\n",
+      "Selecting previously unselected package mesa-vulkan-drivers:amd64.\n",
+      "Preparing to unpack .../282-mesa-vulkan-drivers_21.0.3-0ubuntu0.3~20.04.5_amd64.deb ...\n",
+      "Unpacking mesa-vulkan-drivers:amd64 (21.0.3-0ubuntu0.3~20.04.5) ...\n",
+      "Selecting previously unselected package python3-numpy.\n",
+      "Preparing to unpack .../283-python3-numpy_1%3a1.17.4-5ubuntu3_amd64.deb ...\n",
+      "Unpacking python3-numpy (1:1.17.4-5ubuntu3) ...\n",
+      "Selecting previously unselected package python3-opencv.\n",
+      "Preparing to unpack .../284-python3-opencv_4.2.0+dfsg-5_amd64.deb ...\n",
+      "Unpacking python3-opencv (4.2.0+dfsg-5) ...\n",
+      "Selecting previously unselected package i965-va-driver:amd64.\n",
+      "Preparing to unpack .../285-i965-va-driver_2.4.0-0ubuntu1_amd64.deb ...\n",
+      "Unpacking i965-va-driver:amd64 (2.4.0-0ubuntu1) ...\n",
+      "Selecting previously unselected package va-driver-all:amd64.\n",
+      "Preparing to unpack .../286-va-driver-all_2.7.0-2_amd64.deb ...\n",
+      "Unpacking va-driver-all:amd64 (2.7.0-2) ...\n",
+      "Selecting previously unselected package vdpau-driver-all:amd64.\n",
+      "Preparing to unpack .../287-vdpau-driver-all_1.3-1ubuntu2_amd64.deb ...\n",
+      "Unpacking vdpau-driver-all:amd64 (1.3-1ubuntu2) ...\n",
+      "Selecting previously unselected package libhwloc-dev:amd64.\n",
+      "Preparing to unpack .../288-libhwloc-dev_2.1.0+dfsg-4_amd64.deb ...\n",
+      "Unpacking libhwloc-dev:amd64 (2.1.0+dfsg-4) ...\n",
+      "Selecting previously unselected package libopenmpi-dev:amd64.\n",
+      "Preparing to unpack .../289-libopenmpi-dev_4.0.3-0ubuntu1_amd64.deb ...\n",
+      "Unpacking libopenmpi-dev:amd64 (4.0.3-0ubuntu1) ...\n",
+      "Selecting previously unselected package proj-bin.\n",
+      "Preparing to unpack .../290-proj-bin_6.3.1-1_amd64.deb ...\n",
+      "Unpacking proj-bin (6.3.1-1) ...\n",
+      "Setting up libgme0:amd64 (0.6.2-1build1) ...\n",
+      "Setting up python3-pkg-resources (45.2.0-1) ...\n",
+      "Setting up libssh-gcrypt-4:amd64 (0.9.3-2ubuntu2.2) ...\n",
+      "Setting up libgraphite2-3:amd64 (1.3.13-11build1) ...\n",
+      "Setting up liblcms2-2:amd64 (2.9-4) ...\n",
+      "Setting up libpixman-1-0:amd64 (0.38.4-0ubuntu1) ...\n",
+      "Setting up libcdparanoia0:amd64 (3.10.2+debian-13) ...\n",
+      "Setting up libx11-xcb1:amd64 (2:1.6.9-2ubuntu1.2) ...\n",
+      "Setting up libpciaccess0:amd64 (0.16-0ubuntu1) ...\n",
+      "Setting up mysql-common (5.8+1.0.5ubuntu2) ...\n",
+      "update-alternatives: using /etc/mysql/my.cnf.fallback to provide /etc/mysql/my.cnf (my.cnf) in auto mode\n",
+      "Setting up systemd-sysv (245.4-4ubuntu3.13) ...\n",
+      "Setting up libmysqlclient21:amd64 (8.0.27-0ubuntu0.20.04.1) ...\n",
+      "Setting up libxau6:amd64 (1:1.0.9-0ubuntu1) ...\n",
+      "Setting up libxdmcp6:amd64 (1:1.1.3-0ubuntu1) ...\n",
+      "Setting up libraw1394-11:amd64 (2.1.2-1) ...\n",
+      "Setting up libproxy1v5:amd64 (0.4.15-10ubuntu1.2) ...\n",
+      "Setting up libxcb1:amd64 (1.14-2) ...\n",
+      "Setting up libmpg123-0:amd64 (1.25.13-1) ...\n",
+      "Setting up libxcb-xfixes0:amd64 (1.14-2) ...\n",
+      "Setting up libxerces-c3.2:amd64 (3.2.2+debian-1build3) ...\n",
+      "Setting up libspeex1:amd64 (1.2~rc1.2-1.1ubuntu1) ...\n",
+      "Setting up proj-data (6.3.1-1) ...\n",
+      "Setting up libshine3:amd64 (3.1.1-2) ...\n",
+      "Setting up hicolor-icon-theme (0.17-2) ...\n",
+      "Setting up libtwolame0:amd64 (0.4.0-2) ...\n",
+      "Setting up libgeos-3.8.0:amd64 (3.8.0-1build1) ...\n",
+      "Setting up libdatrie1:amd64 (0.2.12-3) ...\n",
+      "Setting up libmagic-mgc (1:5.38-4) ...\n",
+      "Setting up libogdi4.1 (4.1.0+ds-1build1) ...\n",
+      "Setting up libgsm1:amd64 (1.0.18-2) ...\n",
+      "Setting up libx264-155:amd64 (2:0.155.2917+git0a84d98-2) ...\n",
+      "Setting up libcharls2:amd64 (2.0.0+dfsg-1build1) ...\n",
+      "Setting up libminizip1:amd64 (1.1-8build1) ...\n",
+      "Setting up libx265-179:amd64 (3.2.1-1build1) ...\n",
+      "Setting up libvisual-0.4-0:amd64 (0.4.0-17) ...\n",
+      "Setting up libxcb-render0:amd64 (1.14-2) ...\n",
+      "Setting up libsoxr0:amd64 (0.1.3-2build1) ...\n",
+      "Setting up libcoarrays-dev:amd64 (2.8.0-1) ...\n",
+      "Setting up libglvnd0:amd64 (1.3.2-1~ubuntu0.20.04.1) ...\n",
+      "Setting up libxcb-glx0:amd64 (1.14-2) ...\n",
+      "Setting up libaom0:amd64 (1.0.0.errata1-3build1) ...\n",
+      "Setting up libgdk-pixbuf2.0-common (2.40.0+dfsg-3ubuntu0.2) ...\n",
+      "Setting up libtbb2:amd64 (2020.1-2) ...\n",
+      "Setting up libarpack2:amd64 (3.7.0-3) ...\n",
+      "Setting up x11-common (1:7.7+19ubuntu14) ...\n",
+      "debconf: unable to initialize frontend: Dialog\n",
+      "debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 76.)\n",
+      "debconf: falling back to frontend: Readline\n",
+      "update-rc.d: warning: start and stop actions are no longer supported; falling back to defaults\n",
+      "invoke-rc.d: could not determine current runlevel\n",
+      "invoke-rc.d: policy-rc.d denied execution of start.\n",
+      "Setting up libsensors-config (1:3.6.0-2ubuntu1) ...\n",
+      "Setting up libmagic1:amd64 (1:5.38-4) ...\n",
+      "Setting up libpq5:amd64 (12.9-0ubuntu0.20.04.1) ...\n",
+      "Setting up libsuperlu5:amd64 (5.2.1+dfsg1-4) ...\n",
+      "Setting up libdap25:amd64 (3.20.5-1) ...\n",
+      "Setting up libnss-systemd:amd64 (245.4-4ubuntu3.13) ...\n",
+      "First installation detected...\n",
+      "Checking NSS setup...\n",
+      "Setting up xkb-data (2.29-2) ...\n",
+      "Setting up libqhull7:amd64 (2015.2-4) ...\n",
+      "Setting up libxcb-shm0:amd64 (1.14-2) ...\n",
+      "Setting up file (1:5.38-4) ...\n",
+      "Setting up libxvidcore4:amd64 (2:1.3.7-1) ...\n",
+      "Setting up libepsilon1:amd64 (0.9.2+dfsg-4) ...\n",
+      "Setting up libilmbase24:amd64 (2.3.0-6build1) ...\n",
+      "Setting up libjbig0:amd64 (2.1-3.1build1) ...\n",
+      "Setting up libcolord2:amd64 (1.4.4-2) ...\n",
+      "Setting up gdal-data (3.0.4+dfsg-1build3) ...\n",
+      "Setting up libsnappy1v5:amd64 (1.1.8-1build1) ...\n",
+      "Setting up poppler-data (0.4.9-2) ...\n",
+      "Setting up libcap2-bin (1:2.32-1) ...\n",
+      "Setting up libxcb-present0:amd64 (1.14-2) ...\n",
+      "Setting up libnetcdf15:amd64 (1:4.7.3-1) ...\n",
+      "Setting up libdconf1:amd64 (0.36.0-1) ...\n",
+      "Setting up autotools-dev (20180224.1) ...\n",
+      "Setting up libcfitsio8:amd64 (3.470-3) ...\n",
+      "Setting up libopenexr24:amd64 (2.3.0-6ubuntu0.5) ...\n",
+      "Setting up libva2:amd64 (2.7.0-2) ...\n",
+      "Setting up libigdgmm11:amd64 (20.1.1+ds1-1) ...\n",
+      "Setting up libx11-data (2:1.6.9-2ubuntu1.2) ...\n",
+      "Setting up libepoxy0:amd64 (1.5.4-1) ...\n",
+      "Setting up libnspr4:amd64 (2:4.25-1) ...\n",
+      "Setting up libxcb-sync1:amd64 (1.14-2) ...\n",
+      "Setting up libcodec2-0.9:amd64 (0.9.2-2) ...\n",
+      "Setting up libavahi-common-data:amd64 (0.7-4ubuntu7.1) ...\n",
+      "Setting up libllvm12:amd64 (1:12.0.0-3ubuntu1~20.04.4) ...\n",
+      "Setting up libdbus-1-3:amd64 (1.12.16-2ubuntu2.1) ...\n",
+      "Setting up dbus (1.12.16-2ubuntu2.1) ...\n",
+      "Setting up libsigsegv2:amd64 (2.12-2) ...\n",
+      "Setting up libfribidi0:amd64 (1.0.8-2) ...\n",
+      "Setting up libopus0:amd64 (1.3.1-0ubuntu1) ...\n",
+      "Setting up shared-mime-info (1.15-1) ...\n",
+      "Setting up intel-media-va-driver:amd64 (20.1.1+dfsg1-1) ...\n",
+      "Setting up libpng16-16:amd64 (1.6.37-2) ...\n",
+      "Setting up libhwloc15:amd64 (2.1.0+dfsg-4) ...\n",
+      "Setting up libevent-core-2.1-7:amd64 (2.1.11-stable-1) ...\n",
+      "Setting up libevent-2.1-7:amd64 (2.1.11-stable-1) ...\n",
+      "Setting up liborc-0.4-0:amd64 (1:0.4.31-1) ...\n",
+      "Setting up libwebp6:amd64 (0.6.1-2ubuntu0.20.04.1) ...\n",
+      "Setting up libgeos-c1v5:amd64 (3.8.0-1build1) ...\n",
+      "Setting up fonts-dejavu-core (2.37-1) ...\n",
+      "Setting up libsocket++1:amd64 (1.12.13-10build1) ...\n",
+      "Setting up libproj15:amd64 (6.3.1-1) ...\n",
+      "Setting up libodbc1:amd64 (2.3.6-0.1build1) ...\n",
+      "Setting up ucf (3.0038+nmu1) ...\n",
+      "debconf: unable to initialize frontend: Dialog\n",
+      "debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 76.)\n",
+      "debconf: falling back to frontend: Readline\n",
+      "Setting up libsensors5:amd64 (1:3.6.0-2ubuntu1) ...\n",
+      "Setting up libaacs0:amd64 (0.9.0-2) ...\n",
+      "Setting up python3-numpy (1:1.17.4-5ubuntu3) ...\n",
+      "Setting up libglapi-mesa:amd64 (21.0.3-0ubuntu0.3~20.04.5) ...\n",
+      "Setting up libvulkan1:amd64 (1.2.131.2-1) ...\n",
+      "Setting up libhdf4-0-alt (4.2.14-1ubuntu1) ...\n",
+      "Setting up libxcb-dri2-0:amd64 (1.14-2) ...\n",
+      "Setting up libgif7:amd64 (5.1.9-1) ...\n",
+      "Setting up libatk1.0-data (2.35.1-1ubuntu2) ...\n",
+      "Setting up liburiparser1:amd64 (0.9.3-2) ...\n",
+      "Setting up libbdplus0:amd64 (0.1.2-3) ...\n",
+      "Setting up libfreexl1:amd64 (1.0.5-3) ...\n",
+      "Setting up dmsetup (2:1.02.167-1ubuntu1) ...\n",
+      "Setting up ocl-icd-libopencl1:amd64 (2.2.11-1ubuntu1) ...\n",
+      "Setting up libxshmfence1:amd64 (1.3-1) ...\n",
+      "Setting up libvpx6:amd64 (1.8.2-1build1) ...\n",
+      "Setting up libwavpack1:amd64 (5.2.0-1ubuntu0.1) ...\n",
+      "Setting up libxcb-randr0:amd64 (1.14-2) ...\n",
+      "Setting up libfyba0:amd64 (4.1.1-6build1) ...\n",
+      "Setting up libkmlbase1:amd64 (1.3.0-8build1) ...\n",
+      "Setting up libdapclient6v5:amd64 (3.20.5-1) ...\n",
+      "Setting up libpsm2-2 (11.2.86-1) ...\n",
+      "Setting up openmpi-common (4.0.3-0ubuntu1) ...\n",
+      "Setting up libpam-systemd:amd64 (245.4-4ubuntu3.13) ...\n",
+      "debconf: unable to initialize frontend: Dialog\n",
+      "debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 76.)\n",
+      "debconf: falling back to frontend: Readline\n",
+      "Setting up libopenjp2-7:amd64 (2.3.1-1ubuntu4.20.04.1) ...\n",
+      "Setting up libx11-6:amd64 (2:1.6.9-2ubuntu1.2) ...\n",
+      "Setting up libthai-data (0.1.28-3) ...\n",
+      "Setting up libgirepository-1.0-1:amd64 (1.64.1-1~ubuntu20.04.1) ...\n",
+      "Setting up libjson-glib-1.0-common (1.4.4-2ubuntu2) ...\n",
+      "Setting up libatk1.0-0:amd64 (2.35.1-1ubuntu2) ...\n",
+      "Setting up libtiff5:amd64 (4.1.0+git191117-2ubuntu0.20.04.2) ...\n",
+      "Setting up libprotobuf17:amd64 (3.6.1.3-2ubuntu5) ...\n",
+      "Setting up libwayland-egl1:amd64 (1.18.0-1) ...\n",
+      "Setting up libusb-1.0-0:amd64 (2:1.0.23-2build1) ...\n",
+      "Setting up libpsm-infinipath1 (3.3+20.604758e7-6) ...\n",
+      "update-alternatives: using /usr/lib/libpsm1/libpsm_infinipath.so.1.16 to provide /usr/lib/x86_64-linux-gnu/libpsm_infinipath.so.1 (libpsm_infinipath.so.1) in auto mode\n",
+      "Setting up libarmadillo9 (1:9.800.4+dfsg-1build1) ...\n",
+      "Setting up glib-networking-common (2.64.2-1ubuntu0.1) ...\n",
+      "Setting up libwebpmux3:amd64 (0.6.1-2ubuntu0.20.04.1) ...\n",
+      "Setting up libdrm-common (2.4.105-3~20.04.2) ...\n",
+      "Setting up libelf1:amd64 (0.176-1.1build1) ...\n",
+      "Setting up libxcomposite1:amd64 (1:0.4.5-1) ...\n",
+      "Setting up libpam-cap:amd64 (1:2.32-1) ...\n",
+      "debconf: unable to initialize frontend: Dialog\n",
+      "debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 76.)\n",
+      "debconf: falling back to frontend: Readline\n",
+      "Setting up libopenmpt0:amd64 (0.4.11-1build1) ...\n",
+      "Setting up iso-codes (4.4-1) ...\n",
+      "Setting up libzvbi-common (0.2.35-17) ...\n",
+      "Setting up libgstreamer1.0-0:amd64 (1.16.2-2) ...\n",
+      "Setcap worked! gst-ptp-helper is not suid!\n",
+      "Setting up libmp3lame0:amd64 (3.100-3) ...\n",
+      "Setting up libvorbisenc2:amd64 (1.3.6-2ubuntu1) ...\n",
+      "Setting up libevent-pthreads-2.1-7:amd64 (2.1.11-stable-1) ...\n",
+      "Setting up libxkbcommon0:amd64 (0.10.0-1) ...\n",
+      "Setting up libkmldom1:amd64 (1.3.0-8build1) ...\n",
+      "Setting up libwayland-client0:amd64 (1.18.0-1) ...\n",
+      "Setting up libspatialite7:amd64 (4.3.0a-6build1) ...\n",
+      "Setting up libfabric1 (1.6.2-3) ...\n",
+      "Setting up libxcb-dri3-0:amd64 (1.14-2) ...\n",
+      "Setting up glib-networking-services (2.64.2-1ubuntu0.1) ...\n",
+      "Setting up libzvbi0:amd64 (0.2.35-17) ...\n",
+      "Setting up libice6:amd64 (2:1.0.10-0ubuntu1) ...\n",
+      "Setting up libevent-extra-2.1-7:amd64 (2.1.11-stable-1) ...\n",
+      "Setting up python3-dbus (1.2.16-1build1) ...\n",
+      "Setting up libxdamage1:amd64 (1:1.1.5-2) ...\n",
+      "Setting up libopencv-core4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Setting up libkmlengine1:amd64 (1.3.0-8build1) ...\n",
+      "Setting up libxrender1:amd64 (1:0.9.10-1) ...\n",
+      "Setting up libtool (2.4.6-14) ...\n",
+      "Setting up fontconfig-config (2.13.1-2ubuntu3) ...\n",
+      "Setting up libopencv-imgproc4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Setting up libavahi-common3:amd64 (0.7-4ubuntu7.1) ...\n",
+      "Setting up libdc1394-22:amd64 (2.2.5-2.1) ...\n",
+      "Setting up libxext6:amd64 (2:1.3.4-0ubuntu1) ...\n",
+      "Setting up libevent-openssl-2.1-7:amd64 (2.1.11-stable-1) ...\n",
+      "Setting up proj-bin (6.3.1-1) ...\n",
+      "Setting up m4 (1.4.18-4) ...\n",
+      "Setting up libgstreamer-plugins-base1.0-0:amd64 (1.16.2-4ubuntu0.1) ...\n",
+      "Setting up libnss3:amd64 (2:3.49.1-1ubuntu1.6) ...\n",
+      "Setting up libatspi2.0-0:amd64 (2.36.0-2) ...\n",
+      "Setting up libnetcdf-c++4 (4.2-11build2) ...\n",
+      "Setting up liblept5:amd64 (1.79.0-1) ...\n",
+      "Setting up libgeotiff5:amd64 (1.5.1-2) ...\n",
+      "Setting up libjson-glib-1.0-0:amd64 (1.4.4-2ubuntu2) ...\n",
+      "Setting up libxxf86vm1:amd64 (1:1.1.4-1build1) ...\n",
+      "Setting up libxnvctrl0:amd64 (470.57.01-0ubuntu0.20.04.2) ...\n",
+      "Setting up libatk-bridge2.0-0:amd64 (2.34.2-0ubuntu2~20.04.1) ...\n",
+      "Setting up libthai0:amd64 (0.1.28-3) ...\n",
+      "Setting up dbus-user-session (1.12.16-2ubuntu2.1) ...\n",
+      "Setting up libfreetype6:amd64 (2.10.1-2ubuntu0.1) ...\n",
+      "Setting up libxfixes3:amd64 (1:5.0.3-2) ...\n",
+      "Setting up libgdk-pixbuf2.0-0:amd64 (2.40.0+dfsg-3ubuntu0.2) ...\n",
+      "Setting up libgdcm3.0:amd64 (3.0.5-1.1ubuntu2) ...\n",
+      "Setting up libxinerama1:amd64 (2:1.1.4-2) ...\n",
+      "Setting up libevent-dev (2.1.11-stable-1) ...\n",
+      "Setting up libxrandr2:amd64 (2:1.5.2-0ubuntu1) ...\n",
+      "Setting up gir1.2-glib-2.0:amd64 (1.64.1-1~ubuntu20.04.1) ...\n",
+      "Setting up libtesseract4:amd64 (4.1.1-2build2) ...\n",
+      "Setting up autoconf (2.69-11.1) ...\n",
+      "Setting up libdrm2:amd64 (2.4.105-3~20.04.2) ...\n",
+      "Setting up libva-drm2:amd64 (2.7.0-2) ...\n",
+      "Setting up libgdk-pixbuf2.0-bin (2.40.0+dfsg-3ubuntu0.2) ...\n",
+      "Setting up libvdpau1:amd64 (1.3-1ubuntu2) ...\n",
+      "Setting up libopencv-flann4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Setting up libwayland-cursor0:amd64 (1.18.0-1) ...\n",
+      "Setting up libharfbuzz0b:amd64 (2.6.4-1ubuntu4) ...\n",
+      "Setting up libfontconfig1:amd64 (2.13.1-2ubuntu3) ...\n",
+      "Setting up libopencv-photo4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Setting up libbluray2:amd64 (1:1.2.0-1) ...\n",
+      "Setting up libva-x11-2:amd64 (2.7.0-2) ...\n",
+      "Setting up libsm6:amd64 (2:1.2.3-1) ...\n",
+      "Setting up libavahi-client3:amd64 (0.7-4ubuntu7.1) ...\n",
+      "Setting up libopencv-ml4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Setting up libdrm-amdgpu1:amd64 (2.4.105-3~20.04.2) ...\n",
+      "Setting up automake (1:1.16.1-4ubuntu6) ...\n",
+      "update-alternatives: using /usr/bin/automake-1.16 to provide /usr/bin/automake (automake) in auto mode\n",
+      "update-alternatives: warning: skip creation of /usr/share/man/man1/automake.1.gz because associated file /usr/share/man/man1/automake-1.16.1.gz (of link group automake) doesn't exist\n",
+      "update-alternatives: warning: skip creation of /usr/share/man/man1/aclocal.1.gz because associated file /usr/share/man/man1/aclocal-1.16.1.gz (of link group automake) doesn't exist\n",
+      "Setting up mesa-vulkan-drivers:amd64 (21.0.3-0ubuntu0.3~20.04.5) ...\n",
+      "Setting up gtk-update-icon-cache (3.24.20-0ubuntu1) ...\n",
+      "Setting up fontconfig (2.13.1-2ubuntu3) ...\n",
+      "Regenerating fonts cache... done.\n",
+      "Setting up libdrm-nouveau2:amd64 (2.4.105-3~20.04.2) ...\n",
+      "Setting up libxi6:amd64 (2:1.7.10-0ubuntu1) ...\n",
+      "Setting up libopencv-dnn4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Setting up libdrm-radeon1:amd64 (2.4.105-3~20.04.2) ...\n",
+      "Setting up libxtst6:amd64 (2:1.2.3-1) ...\n",
+      "Setting up libxcursor1:amd64 (1:1.2.0-2) ...\n",
+      "Setting up libpango-1.0-0:amd64 (1.44.7-2ubuntu4) ...\n",
+      "Setting up libdrm-intel1:amd64 (2.4.105-3~20.04.2) ...\n",
+      "Setting up libgl1-mesa-dri:amd64 (21.0.3-0ubuntu0.3~20.04.5) ...\n",
+      "Setting up dconf-service (0.36.0-1) ...\n",
+      "Setting up libpoppler97:amd64 (0.86.1-0ubuntu1) ...\n",
+      "Setting up libhwloc-plugins:amd64 (2.1.0+dfsg-4) ...\n",
+      "Setting up libcairo2:amd64 (1.16.0-4ubuntu1) ...\n",
+      "Setting up libavutil56:amd64 (7:4.2.4-1ubuntu0.1) ...\n",
+      "Setting up libltdl-dev:amd64 (2.4.6-14) ...\n",
+      "Setting up python3-gi (3.36.0-1) ...\n",
+      "Setting up libxt6:amd64 (1:1.1.5-1) ...\n",
+      "Setting up libcups2:amd64 (2.3.1-9ubuntu1.1) ...\n",
+      "Setting up at-spi2-core (2.36.0-2) ...\n",
+      "Setting up libtheora0:amd64 (1.1.1+dfsg.1-15ubuntu2) ...\n",
+      "Setting up libswscale5:amd64 (7:4.2.4-1ubuntu0.1) ...\n",
+      "Setting up libcairo-gobject2:amd64 (1.16.0-4ubuntu1) ...\n",
+      "Setting up libhwloc-dev:amd64 (2.1.0+dfsg-4) ...\n",
+      "Setting up mesa-va-drivers:amd64 (21.0.3-0ubuntu0.3~20.04.5) ...\n",
+      "Setting up libpangoft2-1.0-0:amd64 (1.44.7-2ubuntu4) ...\n",
+      "Setting up i965-va-driver:amd64 (2.4.0-0ubuntu1) ...\n",
+      "Setting up libpangocairo-1.0-0:amd64 (1.44.7-2ubuntu4) ...\n",
+      "Setting up networkd-dispatcher (2.1-2~ubuntu20.04.1) ...\n",
+      "Created symlink /etc/systemd/system/multi-user.target.wants/networkd-dispatcher.service → /lib/systemd/system/networkd-dispatcher.service.\n",
+      "Setting up mesa-vdpau-drivers:amd64 (21.0.3-0ubuntu0.3~20.04.5) ...\n",
+      "Setting up libglx-mesa0:amd64 (21.0.3-0ubuntu0.3~20.04.5) ...\n",
+      "Setting up libglx0:amd64 (1.3.2-1~ubuntu0.20.04.1) ...\n",
+      "Setting up dconf-gsettings-backend:amd64 (0.36.0-1) ...\n",
+      "Setting up libpmix2:amd64 (3.1.5-1) ...\n",
+      "Setting up libopenmpi3:amd64 (4.0.3-0ubuntu1) ...\n",
+      "Setting up libswresample3:amd64 (7:4.2.4-1ubuntu0.1) ...\n",
+      "Setting up librsvg2-2:amd64 (2.48.9-1ubuntu0.20.04.1) ...\n",
+      "Setting up libhdf5-openmpi-103:amd64 (1.10.4+repack-11ubuntu1) ...\n",
+      "Setting up libcaf-openmpi-3:amd64 (2.8.0-1) ...\n",
+      "Setting up gstreamer1.0-plugins-base:amd64 (1.16.2-4ubuntu0.1) ...\n",
+      "Setting up libgl1:amd64 (1.3.2-1~ubuntu0.20.04.1) ...\n",
+      "Setting up va-driver-all:amd64 (2.7.0-2) ...\n",
+      "Setting up librsvg2-common:amd64 (2.48.9-1ubuntu0.20.04.1) ...\n",
+      "Setting up vdpau-driver-all:amd64 (1.3-1ubuntu2) ...\n",
+      "Setting up libavcodec58:amd64 (7:4.2.4-1ubuntu0.1) ...\n",
+      "Setting up openmpi-bin (4.0.3-0ubuntu1) ...\n",
+      "update-alternatives: using /usr/bin/mpirun.openmpi to provide /usr/bin/mpirun (mpirun) in auto mode\n",
+      "update-alternatives: warning: skip creation of /usr/share/man/man1/mpirun.1.gz because associated file /usr/share/man/man1/mpirun.openmpi.1.gz (of link group mpirun) doesn't exist\n",
+      "update-alternatives: warning: skip creation of /usr/share/man/man1/mpiexec.1.gz because associated file /usr/share/man/man1/mpiexec.openmpi.1.gz (of link group mpirun) doesn't exist\n",
+      "update-alternatives: using /usr/bin/mpicc.openmpi to provide /usr/bin/mpicc (mpi) in auto mode\n",
+      "update-alternatives: warning: skip creation of /usr/share/man/man1/mpicc.1.gz because associated file /usr/share/man/man1/mpicc.openmpi.1.gz (of link group mpi) doesn't exist\n",
+      "update-alternatives: warning: skip creation of /usr/share/man/man1/mpic++.1.gz because associated file /usr/share/man/man1/mpic++.openmpi.1.gz (of link group mpi) doesn't exist\n",
+      "update-alternatives: warning: skip creation of /usr/share/man/man1/mpicxx.1.gz because associated file /usr/share/man/man1/mpicxx.openmpi.1.gz (of link group mpi) doesn't exist\n",
+      "update-alternatives: warning: skip creation of /usr/share/man/man1/mpiCC.1.gz because associated file /usr/share/man/man1/mpiCC.openmpi.1.gz (of link group mpi) doesn't exist\n",
+      "update-alternatives: warning: skip creation of /usr/share/man/man1/mpif77.1.gz because associated file /usr/share/man/man1/mpif77.openmpi.1.gz (of link group mpi) doesn't exist\n",
+      "update-alternatives: warning: skip creation of /usr/share/man/man1/mpif90.1.gz because associated file /usr/share/man/man1/mpif90.openmpi.1.gz (of link group mpi) doesn't exist\n",
+      "update-alternatives: warning: skip creation of /usr/share/man/man1/mpifort.1.gz because associated file /usr/share/man/man1/mpifort.openmpi.1.gz (of link group mpi) doesn't exist\n",
+      "Setting up libgtk-3-common (3.24.20-0ubuntu1) ...\n",
+      "Setting up libchromaprint1:amd64 (1.4.3-3build1) ...\n",
+      "Setting up gsettings-desktop-schemas (3.36.0-1ubuntu1) ...\n",
+      "Setting up libavformat58:amd64 (7:4.2.4-1ubuntu0.1) ...\n",
+      "Setting up libcoarrays-openmpi-dev:amd64 (2.8.0-1) ...\n",
+      "Setting up libgl2ps1.4 (1.4.0+dfsg1-2) ...\n",
+      "Setting up libopenmpi-dev:amd64 (4.0.3-0ubuntu1) ...\n",
+      "update-alternatives: using /usr/lib/x86_64-linux-gnu/openmpi/include to provide /usr/include/x86_64-linux-gnu/mpi (mpi-x86_64-linux-gnu) in auto mode\n",
+      "Setting up libvtk6.3 (6.3.0+dfsg2-5build2) ...\n",
+      "Setting up libopencv-viz4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Setting up adwaita-icon-theme (3.36.1-2ubuntu0.20.04.2) ...\n",
+      "update-alternatives: using /usr/share/icons/Adwaita/cursor.theme to provide /usr/share/icons/default/index.theme (x-cursor-theme) in auto mode\n",
+      "Setting up odbcinst1debian2:amd64 (2.3.6-0.1build1) ...\n",
+      "Setting up odbcinst (2.3.6-0.1build1) ...\n",
+      "Setting up libgdal26 (3.0.4+dfsg-1build3) ...\n",
+      "Setting up libopencv-imgcodecs4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Setting up humanity-icon-theme (0.6.15) ...\n",
+      "Setting up libopencv-videoio4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Setting up ubuntu-mono (19.04-0ubuntu3) ...\n",
+      "Processing triggers for systemd (245.4-4ubuntu3.13) ...\n",
+      "Processing triggers for libglib2.0-0:amd64 (2.64.6-1~ubuntu20.04.4) ...\n",
+      "Processing triggers for libc-bin (2.31-0ubuntu9.2) ...\n",
+      "Setting up glib-networking:amd64 (2.64.2-1ubuntu0.1) ...\n",
+      "Setting up libsoup2.4-1:amd64 (2.70.0-1) ...\n",
+      "Setting up libsoup-gnome2.4-1:amd64 (2.70.0-1) ...\n",
+      "Setting up librest-0.7-0:amd64 (0.8.1-1) ...\n",
+      "Setting up libgtk-3-0:amd64 (3.24.20-0ubuntu1) ...\n",
+      "Setting up libgtk-3-bin (3.24.20-0ubuntu1) ...\n",
+      "Setting up libopencv-highgui4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Setting up libopencv-features2d4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Setting up libopencv-calib3d4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Setting up libopencv-video4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Setting up libopencv-videostab4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Setting up libopencv-objdetect4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Setting up libopencv-stitching4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Setting up libopencv-shape4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Setting up libopencv-contrib4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Setting up libopencv-superres4.2:amd64 (4.2.0+dfsg-5) ...\n",
+      "Setting up python3-opencv (4.2.0+dfsg-5) ...\n",
+      "Processing triggers for libgdk-pixbuf2.0-0:amd64 (2.40.0+dfsg-3ubuntu0.2) ...\n",
+      "Processing triggers for libc-bin (2.31-0ubuntu9.2) ...\n",
+      "Collecting opencv-python\n",
+      "  Downloading opencv_python-4.5.4.60-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (60.3 MB)\n",
+      "     |████████████████████████████████| 60.3 MB 253 kB/s            \n",
+      "\u001b[?25hRequirement already satisfied: numpy>=1.17.3 in /usr/local/lib/python3.8/dist-packages (from opencv-python) (1.19.4)\n",
+      "Installing collected packages: opencv-python\n",
+      "Successfully installed opencv-python-4.5.4.60\n",
       "\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\n",
-      "Requirement already satisfied: imutils in /usr/local/lib/python3.8/dist-packages (0.5.4)\n",
+      "Collecting imutils\n",
+      "  Downloading imutils-0.5.4.tar.gz (17 kB)\n",
+      "  Preparing metadata (setup.py) ... \u001b[?25ldone\n",
+      "\u001b[?25hBuilding wheels for collected packages: imutils\n",
+      "  Building wheel for imutils (setup.py) ... \u001b[?25ldone\n",
+      "\u001b[?25h  Created wheel for imutils: filename=imutils-0.5.4-py3-none-any.whl size=25860 sha256=fc9a4696dfe1465087f1f387b50c33fd8527a785dfe2c9d1bb7cf8507b73319e\n",
+      "  Stored in directory: /root/.cache/pip/wheels/59/1b/52/0dea905f8278d5514dc4d0be5e251967f8681670cadd3dca89\n",
+      "Successfully built imutils\n",
+      "Installing collected packages: imutils\n",
+      "Successfully installed imutils-0.5.4\n",
       "\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\n",
       "Collecting tensorflow_probability\n",
       "  Downloading tensorflow_probability-0.15.0-py2.py3-none-any.whl (5.7 MB)\n",
       "     |████████████████████████████████| 5.7 MB 6.4 MB/s            \n",
-      "\u001b[?25hRequirement already satisfied: decorator in /usr/local/lib/python3.8/dist-packages (from tensorflow_probability) (5.1.0)\n",
-      "Requirement already satisfied: six>=1.10.0 in /usr/local/lib/python3.8/dist-packages (from tensorflow_probability) (1.15.0)\n",
-      "Requirement already satisfied: gast>=0.3.2 in /usr/local/lib/python3.8/dist-packages (from tensorflow_probability) (0.4.0)\n",
-      "Collecting dm-tree\n",
+      "\u001b[?25hCollecting dm-tree\n",
       "  Downloading dm_tree-0.1.6-cp38-cp38-manylinux_2_24_x86_64.whl (94 kB)\n",
-      "     |████████████████████████████████| 94 kB 7.0 MB/s             \n",
+      "     |████████████████████████████████| 94 kB 5.5 MB/s            \n",
       "\u001b[?25hRequirement already satisfied: absl-py in /usr/local/lib/python3.8/dist-packages (from tensorflow_probability) (0.12.0)\n",
+      "Requirement already satisfied: decorator in /usr/local/lib/python3.8/dist-packages (from tensorflow_probability) (5.1.0)\n",
       "Requirement already satisfied: cloudpickle>=1.3 in /usr/local/lib/python3.8/dist-packages (from tensorflow_probability) (2.0.0)\n",
+      "Requirement already satisfied: six>=1.10.0 in /usr/local/lib/python3.8/dist-packages (from tensorflow_probability) (1.15.0)\n",
+      "Requirement already satisfied: gast>=0.3.2 in /usr/local/lib/python3.8/dist-packages (from tensorflow_probability) (0.4.0)\n",
       "Requirement already satisfied: numpy>=1.13.3 in /usr/local/lib/python3.8/dist-packages (from tensorflow_probability) (1.19.4)\n",
       "Installing collected packages: dm-tree, tensorflow-probability\n",
       "Successfully installed dm-tree-0.1.6 tensorflow-probability-0.15.0\n",
@@ -77,10 +1840,93 @@
     "!pip install tensorflow_probability"
    ]
   },
+  {
+   "cell_type": "code",
+   "execution_count": 2,
+   "id": "6b8033d6",
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Requirement already satisfied: tensorflow in /usr/local/lib/python3.8/dist-packages (2.6.0+nv)\n",
+      "Collecting tensorflow\n",
+      "  Downloading tensorflow-2.7.0-cp38-cp38-manylinux2010_x86_64.whl (489.6 MB)\n",
+      "     |████████████████████████████████| 489.6 MB 69 kB/s              \n",
+      "\u001b[?25hRequirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.8/dist-packages (from tensorflow) (1.6.3)\n",
+      "Requirement already satisfied: wheel<1.0,>=0.32.0 in /usr/local/lib/python3.8/dist-packages (from tensorflow) (0.37.0)\n",
+      "Collecting keras<2.8,>=2.7.0rc0\n",
+      "  Downloading keras-2.7.0-py2.py3-none-any.whl (1.3 MB)\n",
+      "     |████████████████████████████████| 1.3 MB 4.5 MB/s            \n",
+      "\u001b[?25hRequirement already satisfied: protobuf>=3.9.2 in /usr/local/lib/python3.8/dist-packages (from tensorflow) (3.17.3)\n",
+      "Requirement already satisfied: numpy>=1.14.5 in /usr/local/lib/python3.8/dist-packages (from tensorflow) (1.19.4)\n",
+      "Requirement already satisfied: wrapt>=1.11.0 in /usr/local/lib/python3.8/dist-packages (from tensorflow) (1.12.1)\n",
+      "Requirement already satisfied: absl-py>=0.4.0 in /usr/local/lib/python3.8/dist-packages (from tensorflow) (0.12.0)\n",
+      "Requirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.8/dist-packages (from tensorflow) (3.7.4.3)\n",
+      "Requirement already satisfied: flatbuffers<3.0,>=1.12 in /usr/local/lib/python3.8/dist-packages (from tensorflow) (1.12)\n",
+      "Requirement already satisfied: gast<0.5.0,>=0.2.1 in /usr/local/lib/python3.8/dist-packages (from tensorflow) (0.4.0)\n",
+      "Collecting tensorflow-io-gcs-filesystem>=0.21.0\n",
+      "  Downloading tensorflow_io_gcs_filesystem-0.22.0-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (2.1 MB)\n",
+      "     |████████████████████████████████| 2.1 MB 2.5 MB/s            \n",
+      "\u001b[?25hRequirement already satisfied: h5py>=2.9.0 in /usr/local/lib/python3.8/dist-packages (from tensorflow) (3.1.0)\n",
+      "Requirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.8/dist-packages (from tensorflow) (1.39.0)\n",
+      "Requirement already satisfied: tensorboard~=2.6 in /usr/local/lib/python3.8/dist-packages (from tensorflow) (2.6.0)\n",
+      "Collecting libclang>=9.0.1\n",
+      "  Downloading libclang-12.0.0-py2.py3-none-manylinux1_x86_64.whl (13.4 MB)\n",
+      "     |████████████████████████████████| 13.4 MB 6.6 MB/s            \n",
+      "\u001b[?25hRequirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.8/dist-packages (from tensorflow) (1.15.0)\n",
+      "Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.8/dist-packages (from tensorflow) (1.1.0)\n",
+      "Requirement already satisfied: keras-preprocessing>=1.1.1 in /usr/local/lib/python3.8/dist-packages (from tensorflow) (1.1.2)\n",
+      "Requirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.8/dist-packages (from tensorflow) (0.2.0)\n",
+      "Collecting tensorflow-estimator<2.8,~=2.7.0rc0\n",
+      "  Downloading tensorflow_estimator-2.7.0-py2.py3-none-any.whl (463 kB)\n",
+      "     |████████████████████████████████| 463 kB 9.8 MB/s            \n",
+      "\u001b[?25hRequirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.8/dist-packages (from tensorflow) (3.3.0)\n",
+      "Requirement already satisfied: tensorboard-data-server<0.7.0,>=0.6.0 in /usr/local/lib/python3.8/dist-packages (from tensorboard~=2.6->tensorflow) (0.6.1)\n",
+      "Requirement already satisfied: google-auth<2,>=1.6.3 in /usr/local/lib/python3.8/dist-packages (from tensorboard~=2.6->tensorflow) (1.35.0)\n",
+      "Requirement already satisfied: setuptools>=41.0.0 in /usr/local/lib/python3.8/dist-packages (from tensorboard~=2.6->tensorflow) (58.5.3)\n",
+      "Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.8/dist-packages (from tensorboard~=2.6->tensorflow) (1.8.0)\n",
+      "Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.8/dist-packages (from tensorboard~=2.6->tensorflow) (0.4.6)\n",
+      "Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.8/dist-packages (from tensorboard~=2.6->tensorflow) (2.26.0)\n",
+      "Requirement already satisfied: werkzeug>=0.11.15 in /usr/local/lib/python3.8/dist-packages (from tensorboard~=2.6->tensorflow) (2.0.2)\n",
+      "Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.8/dist-packages (from tensorboard~=2.6->tensorflow) (3.3.4)\n",
+      "Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.8/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.6->tensorflow) (4.7.2)\n",
+      "Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.8/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.6->tensorflow) (0.2.8)\n",
+      "Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.8/dist-packages (from google-auth<2,>=1.6.3->tensorboard~=2.6->tensorflow) (4.2.4)\n",
+      "Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.8/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard~=2.6->tensorflow) (1.3.0)\n",
+      "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.8/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.6->tensorflow) (2021.10.8)\n",
+      "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.8/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.6->tensorflow) (3.3)\n",
+      "Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.8/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.6->tensorflow) (1.26.7)\n",
+      "Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.8/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.6->tensorflow) (2.0.7)\n",
+      "Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.8/dist-packages (from pyasn1-modules>=0.2.1->google-auth<2,>=1.6.3->tensorboard~=2.6->tensorflow) (0.4.8)\n",
+      "Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.8/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard~=2.6->tensorflow) (3.1.1)\n",
+      "Installing collected packages: tensorflow-io-gcs-filesystem, tensorflow-estimator, libclang, keras, tensorflow\n",
+      "  Attempting uninstall: tensorflow-estimator\n",
+      "    Found existing installation: tensorflow-estimator 2.6.0\n",
+      "    Uninstalling tensorflow-estimator-2.6.0:\n",
+      "      Successfully uninstalled tensorflow-estimator-2.6.0\n",
+      "  Attempting uninstall: keras\n",
+      "    Found existing installation: keras 2.6.0\n",
+      "    Uninstalling keras-2.6.0:\n",
+      "      Successfully uninstalled keras-2.6.0\n",
+      "  Attempting uninstall: tensorflow\n",
+      "    Found existing installation: tensorflow 2.6.0+nv\n",
+      "    Uninstalling tensorflow-2.6.0+nv:\n",
+      "      Successfully uninstalled tensorflow-2.6.0+nv\n",
+      "Successfully installed keras-2.7.0 libclang-12.0.0 tensorflow-2.7.0 tensorflow-estimator-2.7.0 tensorflow-io-gcs-filesystem-0.22.0\n",
+      "\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\n"
+     ]
+    }
+   ],
+   "source": [
+    "!pip install tensorflow --upgrade"
+   ]
+  },
   {
    "cell_type": "code",
    "execution_count": null,
-   "id": "5c1eab9e",
+   "id": "c73a7f50",
    "metadata": {},
    "outputs": [],
    "source": []
diff --git a/Generative/models/vqvae_celeba/vq_vae_decoder.h5 b/Generative/models/vqvae_celeba/vq_vae_decoder.h5
index 583aa2b..0683a42 100644
Binary files a/Generative/models/vqvae_celeba/vq_vae_decoder.h5 and b/Generative/models/vqvae_celeba/vq_vae_decoder.h5 differ
diff --git a/Generative/models/vqvae_celeba/vq_vae_encoder.h5 b/Generative/models/vqvae_celeba/vq_vae_encoder.h5
index 004925c..db9212f 100644
Binary files a/Generative/models/vqvae_celeba/vq_vae_encoder.h5 and b/Generative/models/vqvae_celeba/vq_vae_encoder.h5 differ
diff --git a/Generative/wandb/debug-internal.log b/Generative/wandb/debug-internal.log
index a66fad2..f04a697 120000
--- a/Generative/wandb/debug-internal.log
+++ b/Generative/wandb/debug-internal.log
@@ -1 +1 @@
-run-20211214_131327-3ac5rnzt/logs/debug-internal.log
\ No newline at end of file
+run-20211214_144315-3eaaqcmn/logs/debug-internal.log
\ No newline at end of file
diff --git a/Generative/wandb/debug.log b/Generative/wandb/debug.log
index f75d9a5..2068782 120000
--- a/Generative/wandb/debug.log
+++ b/Generative/wandb/debug.log
@@ -1 +1 @@
-run-20211214_131327-3ac5rnzt/logs/debug.log
\ No newline at end of file
+run-20211214_144315-3eaaqcmn/logs/debug.log
\ No newline at end of file
diff --git a/Generative/wandb/latest-run b/Generative/wandb/latest-run
index dca8edb..368a5ff 120000
--- a/Generative/wandb/latest-run
+++ b/Generative/wandb/latest-run
@@ -1 +1 @@
-run-20211214_131327-3ac5rnzt
\ No newline at end of file
+run-20211214_144315-3eaaqcmn
\ No newline at end of file
diff --git a/Generative/wandb/run-20211214_131327-3ac5rnzt/logs/debug-internal.log b/Generative/wandb/run-20211214_131327-3ac5rnzt/logs/debug-internal.log
index 1da257f..430016a 100644
--- a/Generative/wandb/run-20211214_131327-3ac5rnzt/logs/debug-internal.log
+++ b/Generative/wandb/run-20211214_131327-3ac5rnzt/logs/debug-internal.log
@@ -71,3 +71,291 @@
 2021-12-14 13:15:00,847 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
 2021-12-14 13:15:16,014 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
 2021-12-14 13:15:16,014 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:15:31,182 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:15:31,182 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:15:46,348 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:15:46,348 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:16:01,535 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:16:01,535 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:16:16,704 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:16:16,705 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:16:31,883 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:16:31,884 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:16:47,088 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:16:47,088 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:17:02,255 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:17:02,255 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:17:17,416 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:17:17,416 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:17:32,579 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:17:32,579 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:17:47,738 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:17:47,739 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:18:02,910 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:18:02,910 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:18:18,076 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:18:18,076 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:18:33,244 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:18:33,244 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:18:48,445 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:18:48,446 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:19:03,614 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:19:03,615 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:19:18,785 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:19:18,785 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:19:33,948 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:19:33,949 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:19:49,145 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:19:49,145 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:20:04,316 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:20:04,316 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:20:19,482 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:20:19,482 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:20:34,642 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:20:34,642 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:20:49,808 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:20:49,809 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:21:04,974 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:21:04,974 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:21:20,131 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:21:20,131 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:21:35,306 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:21:35,306 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:21:50,484 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:21:50,484 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:22:05,657 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:22:05,657 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:22:20,821 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:22:20,821 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:22:35,985 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:22:35,985 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:22:51,143 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:22:51,144 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:23:06,304 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:23:06,304 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:23:21,471 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:23:21,471 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:23:36,691 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:23:36,691 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:23:51,855 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:23:51,855 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:24:07,031 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:24:07,032 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:24:22,195 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:24:22,195 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:24:37,354 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:24:37,355 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:24:52,524 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:24:52,525 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:25:07,688 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:25:07,689 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:25:22,842 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:25:22,843 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:25:38,026 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:25:38,026 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:25:53,195 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:25:53,195 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:26:08,362 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:26:08,362 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:26:23,522 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:26:23,522 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:26:38,684 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:26:38,684 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:26:53,846 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:26:53,846 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:27:09,013 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:27:09,013 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:27:24,179 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:27:24,179 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:27:39,341 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:27:39,341 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:27:54,504 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:27:54,504 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:28:09,664 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:28:09,664 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:28:24,829 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:28:24,829 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:28:39,995 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:28:39,996 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:28:55,157 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:28:55,157 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:29:10,385 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:29:10,385 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:29:25,580 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:29:25,581 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:29:40,751 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:29:40,751 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:29:55,955 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:29:55,955 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:30:11,150 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:30:11,151 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:30:26,311 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:30:26,311 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:30:41,487 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:30:41,487 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:30:56,648 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:30:56,648 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:31:11,807 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:31:11,807 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:31:26,984 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:31:26,984 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:31:42,154 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:31:42,154 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:31:57,375 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:31:57,375 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:32:12,537 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:32:12,537 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:32:27,705 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:32:27,705 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:32:42,868 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:32:42,868 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:32:58,060 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:32:58,060 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:33:13,223 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:33:13,223 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:33:28,429 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:33:28,429 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:33:43,739 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:33:43,740 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:33:59,233 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:33:59,233 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:34:14,453 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:34:14,453 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:34:29,713 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:34:29,713 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:34:44,877 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:34:44,877 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:35:00,043 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:35:00,043 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:35:15,212 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:35:15,212 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:35:30,380 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:35:30,381 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:35:45,541 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:35:45,541 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:36:00,766 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:36:00,766 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:36:15,933 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:36:15,934 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:36:31,263 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:36:31,264 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:36:46,469 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:36:46,470 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:37:01,638 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:37:01,638 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:37:16,814 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:37:16,814 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:37:31,987 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:37:31,987 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:37:47,149 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:37:47,149 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:38:02,309 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:38:02,310 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:38:17,475 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:38:17,475 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:38:32,634 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:38:32,635 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:38:47,806 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:38:47,806 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:39:03,002 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:39:03,003 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:39:18,461 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:39:18,461 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:39:33,869 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:39:33,869 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:39:49,032 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:39:49,032 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:40:04,196 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:40:04,197 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:40:19,395 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:40:19,395 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:40:34,626 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:40:34,626 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:40:49,834 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:40:49,834 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:41:05,048 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:41:05,049 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:41:20,217 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:41:20,217 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:41:35,387 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:41:35,388 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:41:50,554 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:41:50,554 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:42:05,726 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:42:05,726 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:42:20,885 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:42:20,886 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:42:36,053 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:42:36,054 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:42:51,294 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:42:51,294 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:43:06,481 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:43:06,481 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:43:21,637 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:43:21,637 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:43:36,807 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:43:36,808 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:43:51,979 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:43:51,979 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:44:07,136 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:44:07,137 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:44:22,306 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:44:22,306 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:44:37,470 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:44:37,470 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:44:52,655 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:44:52,655 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:45:07,821 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:45:07,821 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:45:22,997 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:45:22,997 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:45:38,174 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:45:38,174 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:45:53,334 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:45:53,334 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:46:08,495 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:46:08,495 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:46:23,662 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:46:23,662 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:46:38,827 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:46:38,827 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:46:53,983 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:46:53,983 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:47:09,147 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:47:09,147 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:47:24,313 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:47:24,313 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:47:39,486 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:47:39,486 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:47:54,773 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:47:54,774 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:48:14,774 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:48:14,774 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:48:29,954 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:48:29,954 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:48:45,115 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:48:45,115 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:49:00,317 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:49:00,317 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:49:15,609 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:49:15,609 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:49:30,792 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:49:30,793 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:49:45,949 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:49:45,949 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:50:01,109 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:50:01,109 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:50:16,275 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:50:16,275 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:50:31,441 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:50:31,441 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:50:46,602 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:50:46,602 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:51:01,764 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:51:01,764 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:51:16,925 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:51:16,925 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:51:32,089 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:51:32,090 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
+2021-12-14 13:51:47,245 DEBUG   HandlerThread:11654 [handler.py:handle_request():130] handle_request: stop_status
+2021-12-14 13:51:47,245 DEBUG   SenderThread:11654 [sender.py:send_request():252] send_request: stop_status
